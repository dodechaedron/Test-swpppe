{"version":3,"sources":["config/constants/tradingCampaigns.ts","views/TradingComp/TradingComp.jsx"],"names":["tradingCampaigns","BannerContainer","styled","div","StyledBanner","img","theme","mediaQueries","md","StyledContent","TimerContainer","ButtonContainer","StyledMobileBanner","Row","tr","Cell","td","CellHead","th","Table","table","ScoreSection","CustomFlexBox","Flex","CampaignCard","Card","TradingComp","id","campainData","useState","rankings","setRankings","block","txCount","volumeCORE","volumeUSD","volumeBuyUSD","idx","isRegistered","hasClaimed","userData","setUserData","account","useWeb3React","status","userCount","volumeBuyCORE","competitionDataFromSubgraph","setCompetitionDataFromSubgraph","web3","useWeb3","fastRefresh","useRefresh","tradeContract","eth","Contract","tradeABI","contractAddress","useEffect","axios","post","subgraph","query","toLowerCase","then","res","data","competition","users","findIndex","el","user","catch","err","console","log","handleRegister","a","methods","register","send","from","src","alt","as","size","color","mb","tokenName","alignItems","mr","start","end","variant","onClick","ml","href","tradingUrl","pairs","map","subCampaigns","cardTitle","mt","title","subTitle","reward","BigNumber","toFormat","flexDirection","substring","length","parseInt","toFixed","style","flexGrow","margin","height","overflow","row"],"mappings":"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","file":"static/js/40.b6bee154.chunk.js","sourcesContent":["const tradingCampaigns = [\n  // {\n  //   id: 0,\n  //   start: '1 : 20 : 2021 9 AM GMT',\n  //   end: '2 : 20 : 2021 9 AM GMT',\n  //   tokenName: '$BOW',\n  //   pairs: ['BOW/CORE'],\n  //   contractAddress: '0x8aFd5BD89A68936737A1252bEe3F4DAD455839FF',\n  //   tradingUrl:\n  //     'https://archerswap.finance/#/swap?inputCurrency=ETH&outputCurrency=0x695Fa794d59106cEbd40ab5f5cA19F458c723829',\n  //   subgraph: 'https://api.thegraph.com/subgraphs/name/0x-huskydev/tradingcomp',\n  //   heroImage: '/images/Asset-12.svg',\n  //   size: 'cover',\n  //   subCampaigns: [\n  //     {\n  //       cardTitle: 'Campaign 1',\n  //       title: 'Trading Volume',\n  //       subTitle: 'Prize Pool of',\n  //       reward: '$2000',\n  //       learnLink: '',\n  //     },\n  //     {\n  //       cardTitle: 'Campaign 2',\n  //       title: 'Ranking Tournament',\n  //       subTitle: 'Prize Pool of',\n  //       reward: '$200',\n  //       learnLink: '',\n  //     },\n  //     {\n  //       cardTitle: 'Twitter Campaign 3',\n  //       title: '10 Random winners to win',\n  //       subTitle: 'Prize Pool of',\n  //       reward: '$200',\n  //       learnLink: '',\n  //     },\n  //   ],\n  // },\n]\nexport default tradingCampaigns\n","import { Flex, Button, Card, CardBody, CardHeader, Heading, Text, TimerIcon } from 'archerswap-uikit'\nimport React, { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport useRefresh from 'hooks/useRefresh'\nimport useWeb3 from 'hooks/useWeb3'\nimport tradeABI from 'config/abi/trading.json'\nimport axios from 'axios'\nimport tradingCampaigns from 'config/constants/tradingCampaigns'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\n\nconst BannerContainer = styled.div`\n  position: relative;\n`\nconst StyledBanner = styled.img`\n  width: 100%;\n  height: 100%;\n  display: none;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\nconst StyledContent = styled.div`\n  z-index: 10;\n  height: 45%;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  top: 23%;\n  left: 7%;\n  bottom: 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    top: 15%;\n    height: 60%;\n    left: 15%;\n  }\n`\nconst TimerContainer = styled.div`\n  display: block;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n  }\n`\nconst ButtonContainer = styled.div`\n  margin-top: 20px;\n  ${({ theme }) => theme.mediaQueries.md} {\n  }\n`\nconst StyledMobileBanner = styled.img`\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\nconst Row = styled.tr``\nconst Cell = styled.td`\n  padding: 2% 1%;\n  border: 1px solid gray;\n`\nconst CellHead = styled.th`\n  padding: 2% 1%;\n  text-align: left;\n  border: 1px solid gray;\n`\nconst Table = styled.table`\n  width: 100%;\n`\nconst ScoreSection = styled.div`\n  margin: 4% 1%;\n`\nconst CustomFlexBox = styled(Flex)`\n  display: flex;\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`\nconst CampaignCard = styled(Card)`\n  width: 25em;\n  margin: 2%;\n`\nfunction TradingComp({ id }) {\n  const campainData = tradingCampaigns[id]\n  const [rankings, setRankings] = useState([])\n  const [userData, setUserData] = useState({\n    block: '0',\n    id: '0',\n    txCount: '0',\n    volumeCORE: '0',\n    volumeUSD: '0',\n    volumeBuyUSD: '0',\n    idx: 0,\n    isRegistered: false,\n    hasClaimed: false,\n  })\n  const { account } = useWeb3React()\n  const [competitionDataFromSubgraph, setCompetitionDataFromSubgraph] = useState({\n    id: '0',\n    status: '0',\n    userCount: '0',\n    volumeCORE: '0',\n    volumeBuyCORE: '0',\n    volumeBuyUSD: '0',\n    volumeUSD: '0',\n    txCount: 0,\n  })\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  /* eslint-disable  */\n\n  const tradeContract = new web3.eth.Contract(tradeABI, campainData?.contractAddress)\n  useEffect(() => {\n    const fetchData = () => {\n      axios\n        .post(campainData?.subgraph, {\n          query: `{\n\n        competition(id: 1) {\n            volumeUSD\n            volumeBuyUSD\n            volumeBuyCORE\n            volumeCORE\n            id\n            status\n            userCount\n            txCount\n            users(orderBy:volumeUSD,orderDirection:desc) {\n              id\n              txCount\n              volumeUSD\n              volumeCORE\n              volumeBuyUSD\n            }\n          }\n          user(id:\"${account ? account?.toLowerCase() : '0x0000000000000000000000000000000000000000'}\"){\n            id\n          txCount\n          volumeUSD\n          volumeBuyUSD\n          volumeCORE\n          block \n      }\n    \n}`,\n        })\n        .then((res) => {\n          if (res?.data?.data) {\n            const data = res?.data.data\n            setCompetitionDataFromSubgraph(data.competition)\n            setRankings(data.competition.users)\n            const idx = data.competition.users?.findIndex((el) => el.id === account.toLowerCase())\n\n            if (data.user) {\n              setUserData({ ...data.user, idx: idx + 1, isRegistered: true })\n            }\n          }\n        })\n        .catch((err) => {\n          console.log('err', err)\n        })\n    }\n\n    fetchData()\n  }, [account, campainData?.subgraph, fastRefresh])\n\n  const handleRegister = async () => {\n    if (account && web3) {\n      const tx = await tradeContract.methods.register().send({\n        from: account,\n      })\n      if (tx) {\n        setUserData({ isRegistered: true })\n      }\n    }\n  }\n  return (\n    <div>\n      <BannerContainer>\n        <StyledMobileBanner src={'/images/assets/banners/mobile_xbow_banner.png'} alt={'banner'} />\n        <StyledBanner src={'/images/assets/banners/xbow_banner.png'} alt={'banner'} />\n        <StyledContent>\n          <div>\n            <Heading as=\"h1\" size=\"xl\" color=\"extra\" mb=\"10px\">\n              {campainData?.tokenName} Trading Campaign\n            </Heading>\n            <TimerContainer>\n              <Flex alignItems=\"center\" mr={2}>\n                <TimerIcon color=\"dark\" /> <Text color=\"dark\">{campainData.start}</Text>\n              </Flex>\n              <Flex alignItems=\"center\">\n                {' '}\n                <TimerIcon color=\"dark\" />\n                <Text color=\"dark\"> {campainData.end}</Text>\n              </Flex>\n            </TimerContainer>\n            {/* <Text mb=\"10px\" color=\"dark\">\n              Take part in the competition with exclusive prizes\n            </Text> */}\n            <ButtonContainer>\n              <Button variant=\"contained\" color=\"dark\" onClick={handleRegister}>\n                {' '}\n                {userData?.isRegistered ? 'Registered' : 'Register Now'}\n              </Button>\n              <Button as=\"a\" ml={2} href={campainData?.tradingUrl}>\n                {' '}\n                Trade {campainData?.pairs.map((el) => el)}\n              </Button>\n            </ButtonContainer>\n          </div>\n        </StyledContent>\n      </BannerContainer>\n\n      <br />\n      <CustomFlexBox>\n        {campainData?.subCampaigns.map((el, idx) => (\n          <>\n            {' '}\n            <CampaignCard>\n              <CardHeader>\n                <Heading as=\"h1\">{el?.cardTitle}</Heading>\n              </CardHeader>\n              <CardBody>\n                <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n                  {el?.title} <br /> {el?.subTitle}{' '}\n                  <Heading as=\"h1\" color=\"primary\">\n                    {el?.reward}\n                  </Heading>\n                </Heading>\n                <Button>Learn More</Button>\n              </CardBody>\n            </CampaignCard>\n          </>\n        ))}\n      </CustomFlexBox>\n      <CustomFlexBox>\n        <CampaignCard>\n          <CardBody>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              Volume Generated\n            </Heading>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              $ {new BigNumber(competitionDataFromSubgraph?.volumeBuyUSD).toFormat(2)}\n            </Heading>\n          </CardBody>\n        </CampaignCard>\n        <CampaignCard>\n          <CardBody>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              Total Participants\n            </Heading>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              {new BigNumber(competitionDataFromSubgraph?.userCount).toFormat(0)}\n            </Heading>\n          </CardBody>\n        </CampaignCard>\n        <CampaignCard>\n          <CardBody>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              Total Transactions\n            </Heading>\n            <Heading as=\"h1\" mb=\"10px\" mt=\"10px\">\n              {new BigNumber(competitionDataFromSubgraph?.txCount).toFormat(0)}\n            </Heading>\n          </CardBody>\n        </CampaignCard>\n      </CustomFlexBox>\n      <CustomFlexBox>\n        <CampaignCard>\n          <CardHeader>\n            <Heading as=\"h1\">My Score</Heading>\n          </CardHeader>\n          <CardBody>\n            <Flex flexDirection=\"column\">\n              <ScoreSection>\n                <Text>Account</Text>\n\n                <Heading as=\"h1\">\n                  {account ? `${account.substring(0, 4)}...${account.substring(account.length - 4)}` : 'Connect Wallet'}\n                </Heading>\n              </ScoreSection>\n              <ScoreSection>\n                <Text>Your Trading Volume</Text>\n                <Heading as=\"h1\">\n                  $ {parseInt(userData?.volumeBuyUSD) > 0 ? new BigNumber(userData.volumeBuyUSD).toFixed(0) : '0'}\n                </Heading>\n              </ScoreSection>\n              <ScoreSection>\n                <Text>Your Ranking</Text>\n                <Heading as=\"h1\">{userData?.idx || '100+'}</Heading>\n              </ScoreSection>\n              <ScoreSection>\n                <Text>Your Transaction Count</Text>\n                <Heading as=\"h1\">{userData?.txCount || 0}</Heading>\n              </ScoreSection>\n            </Flex>\n          </CardBody>\n        </CampaignCard>\n        <Card style={{ flexGrow: 2, margin: '2%' }}>\n          <CardHeader>\n            <Heading as=\"h1\">Ranking Table</Heading>\n          </CardHeader>\n          <CardBody style={{ height: '25em', overflow: 'scroll' }}>\n            <Table>\n              <thead>\n                <CellHead>Rank</CellHead>\n                <CellHead>Account</CellHead>\n                <CellHead>Txn Count</CellHead>\n                <CellHead>Volume USD</CellHead>\n              </thead>\n              <tbody>\n                {rankings.map((row, idx) => {\n                  return (\n                    <Row>\n                      <Cell>{idx === 0 ? <> {idx + 1} </> : idx + 1}</Cell>\n                      <Cell>\n                        {row?.id?.substring(0, 6)}...{row?.id?.substring(row?.id?.length - 6)}{' '}\n                      </Cell>\n                      <Cell>{row.txCount}</Cell>\n                      <Cell>{new BigNumber(row.volumeBuyUSD).toFormat(1)}</Cell>\n                    </Row>\n                  )\n                })}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </CustomFlexBox>\n    </div>\n  )\n}\n\nexport default TradingComp\n"],"sourceRoot":""}