{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/api.ts","hooks/useFarmsWithBalance.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/HeroCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","components/BannerArcher/index.tsx","views/Home/Home.tsx"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","Promise","all","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","useGetStats","data","setData","bowClient","query","factoryQuery","variables","fetchPolicy","result","pairTVL","uniswapFactories","map","factory","parseFloat","totalLiquidityUSD","update_at","total_value_locked","total_value_locked_all","trade_pairs","console","error","fetchData","useTokensData","tokensQuery","length","useCollections","marketplaceClient","getERC721CollectionsQuery","GetERC721Collections","useCollection","alias","getERC721CollectionQuery","GetERC721Collection","useCollectionAttributes","getERC721CollectionAttributesQuery","GetERC721CollectionAttributes","currentInput1","useERC721TokenCount","input","getERC721TokenCountQuery","GetERC721TokenCount","pageSize","filters","JSON","stringify","currentInput2","useERC721Tokens","getERC721TokensQuery","GetERC721Tokens","currentInput3","useERC721RecentEventsLite","ERC721RecentEventsLiteQuery","ERC721RecentEventsLite","useERC721Token","tokenId","getERC721TokenQuery","GetERC721Token","currentInput4","useERC721TokenEvents","ERC721TokenEventsQuery","ERC721TokenEvents","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","farmPids","farmsConfig","farm","pid","allPids","calls","getMasterChefAddress","name","params","multicall","masterChefABI","rawResults","results","index","fetchBalances","CardValue","value","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","BowText","styled","div","current","style","className","CardBusdValue","props","Block","BlockValue","CakeHarvestBalance","t","useTranslation","earningsSum","reduce","accum","pending","toNumber","earningsBusd","multipliedBy","usePriceBowUsd","CakeWalletBalance","bowBalance","getBowAddress","busdBalance","getBalanceNumber","StyledFarmStakingCard","Card","theme","isDark","card","background","StyledUnlockButton","UnlockButton","LeftBlock","RightBlock","StyledButton","Button","Actions","colors","title","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","useTheme","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","justifyContent","id","disabled","onClick","width","count","StyledHeroCard","mediaQueries","sm","xs","md","lg","BowTitle","Heading","BackgroundArcherSwap","img","ContentTxt","HeroCard","content","as","mb","textAlign","src","StyledBowStats","CakeStats","burnedBalance","circulatingBalance","bowPriceUsd","times","StyledTotalValueLockedCard","TotalValueLockedCard","farms","useFarms","prices","useGetApiPrices","pools","usePools","oneDayVolume","useOneDayVolume","tokenslength","totalLockedBow","useBowInfo","tvl","useMemo","lpTotalInQuoteToken","quoteTokenPriceUsd","quoteToken","toLowerCase","liquidity","pool","stakingTokenPriceUsd","stakingToken","totalStaked","xbowTVL","bow","toLocaleString","maximumFractionDigits","fontWeight","oneDayVolumeUSD","height","StyledBanner","StyledMobileBanner","WelcomeContainer","xl","nav","ImageContainer","BannerContainer","StyledContent","BannerArcher","alt","head","head2","text","mobileSrc","white","left","Hero","Cards","BaseLayout","Background","CopyRight","Home","Page","minHeight","FarmStakingCard"],"mappings":"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","file":"static/js/31.9fe1745a.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getBowContract, getFactoryContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nexport const useETHBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useWcoreBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.allowance(account, targetAddress).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && targetAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\n\n  return allowance\n}\n\nexport const useApprove = () => {\n  const [approvePending, setApprovePending] = useState(false)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(\n    async (targetAddress: string, contractAddress: string) => {\n      try {\n        setApprovePending(true)\n        const contract = getBep20Contract(contractAddress, web3)\n        const tx = await contract.methods\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\n          .send({ from: account })\n        setApprovePending(false)\n        return tx\n      } catch (e) {\n        setApprovePending(false)\n        return false\n      }\n    },\n    [web3, account],\n  )\n\n  return { onApprove: handleApprove, approvePending }\n}\n\nexport const useTokenSymbol = (tokenAddress: string) => {\n  const [symbol, setSymbol] = useState('')\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.symbol().call()\n      setSymbol(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return symbol\n}\n\nexport const useTokenDecimal = (tokenAddress: string) => {\n  const [decimal, setDecimal] = useState(0)\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.decimals().call()\n      setDecimal(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return decimal\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = getWeb3NoAccountFromChain(chainId)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && chainId) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const bowContract = getBowContract()\n      const supply = await bowContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useCirculatingBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const bowContract = getBowContract()\n      const [tRes, res0, res1, res2] = await Promise.all([\n        bowContract.methods.totalSupply().call(),\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\n      ])\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\n    }\n\n    fetchBalance()\n  }, [web3, fastRefresh])\n\n  return balance\n}\n\nexport const usePairsLength = () => {\n  const [pairsLength, setPairsLength] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchPairsLength = async () => {\n      const contract = getFactoryContract(web3)\n      const res = await contract.methods.allPairsLength().call()\n      setPairsLength(res)\n    }\n\n    fetchPairsLength()\n  }, [web3, slowRefresh])\n\n  return pairsLength\n}\n\nexport default useTokenBalance\n","import { useEffect, useState } from 'react'\nimport { bowClient, marketplaceClient } from '../apollo/client'\nimport {\n  factoryQuery,\n  tokensQuery,\n  getERC721CollectionsQuery,\n  getERC721CollectionQuery,\n  getERC721CollectionAttributesQuery,\n  getERC721TokenCountQuery,\n  getERC721TokensQuery,\n  ERC721RecentEventsLiteQuery,\n  getERC721TokenQuery,\n  ERC721TokenEventsQuery,\n} from '../apollo/queries'\n\n/* eslint-disable camelcase */\n\nexport interface TradePair {\n  swap_pair_contract: string\n  base_symbol: string\n  quote_symbol: string\n  last_price: number\n  base_volume_24_h: number\n  quote_volume_24_h: number\n}\n\nexport interface ApiStatResponse {\n  update_at: string\n  '24h_total_volume': number\n  total_value_locked: number\n  total_value_locked_all: number\n  trade_pairs: {\n    [key: string]: TradePair\n  }\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<ApiStatResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await bowClient.query({\n          query: factoryQuery,\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n\n        if (result?.data) {\n          let pairTVL = 0\n          result.data.uniswapFactories.map((factory) => {\n            pairTVL += parseFloat(factory.totalLiquidityUSD)\n            return pairTVL\n          })\n\n          const responsedata: ApiStatResponse = {\n            update_at: '',\n            '24h_total_volume': 0,\n            total_value_locked: 0,\n            total_value_locked_all: pairTVL,\n            trade_pairs: null,\n          }\n          setData(responsedata)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n\nexport const useTokensData = () => {\n  const [data, setData] = useState<ApiStatResponse | 0>(0)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await bowClient.query({\n          query: tokensQuery,\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n        setData(result?.data?.tokens.length)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n\n// Marketplace GraphQL\n\nexport const useCollections = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res } = await marketplaceClient.query({\n          query: getERC721CollectionsQuery,\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n        setData(res.GetERC721Collections || [])\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n\nexport const useCollection = (alias: string) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: getERC721CollectionQuery(alias),\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n        if (res.GetERC721Collection && res.GetERC721Collection.length !== 0) {\n          setData(res.GetERC721Collection[0])\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [alias])\n\n  return data\n}\n\nexport const useCollectionAttributes = (alias: string) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: getERC721CollectionAttributesQuery(alias),\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n        if (res.GetERC721CollectionAttributes) {\n          setData(res.GetERC721CollectionAttributes)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [alias])\n\n  return data\n}\n\nlet currentInput1 = {}\nexport const useERC721TokenCount = (input: any) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    currentInput1 = {}\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: getERC721TokenCountQuery,\n          variables: { input },\n          fetchPolicy: 'no-cache',\n        })\n        if (res.GetERC721TokenCount) {\n          setData(res.GetERC721TokenCount)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n    if (input.pageSize && input.filters && JSON.stringify(input) !== JSON.stringify(currentInput1)) {\n      currentInput1 = input\n      fetchData()\n    }\n  }, [input])\n\n  return data\n}\n\nlet currentInput2 = {}\nexport const useERC721Tokens = (input: any) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    currentInput2 = {}\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: getERC721TokensQuery,\n          variables: { input },\n          fetchPolicy: 'no-cache',\n        })\n        if (res.GetERC721Tokens) {\n          setData(res.GetERC721Tokens)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n    if (JSON.stringify(input) !== JSON.stringify(currentInput2)) {\n      currentInput2 = input\n      fetchData()\n    }\n  }, [input])\n\n  return data\n}\n\nlet currentInput3 = {}\nexport const useERC721RecentEventsLite = (input: any) => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    currentInput3 = {}\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: ERC721RecentEventsLiteQuery,\n          variables: { input },\n          fetchPolicy: 'no-cache',\n        })\n        if (res.ERC721RecentEventsLite) {\n          setData(res.ERC721RecentEventsLite)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n    if (input.chainId && input.tokenAddress && JSON.stringify(input) !== JSON.stringify(currentInput3)) {\n      currentInput3 = input\n      fetchData()\n    }\n  }, [input])\n\n  return data\n}\n\nexport const useERC721Token = (alias: string, tokenId: string) => {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: getERC721TokenQuery(alias, tokenId),\n          variables: {},\n          fetchPolicy: 'no-cache',\n        })\n        if (res.GetERC721Token) {\n          setData(res.GetERC721Token)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [alias, tokenId])\n\n  return data\n}\n\nlet currentInput4 = {}\nexport const useERC721TokenEvents = (input: any) => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    currentInput4 = {}\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: res }: any = await marketplaceClient.query({\n          query: ERC721TokenEventsQuery,\n          variables: { input },\n          fetchPolicy: 'no-cache',\n        })\n        if (res.ERC721TokenEvents) {\n          setData(res.ERC721TokenEvents)\n        }\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n    if (input.chainId && input.tokenAddress && JSON.stringify(input) !== JSON.stringify(currentInput4)) {\n      currentInput4 = input\n      fetchData()\n    }\n  }, [input])\n\n  return data\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance {\n  pid: number\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const farmPids = farmsConfig.map((farm) => farm.pid)\n      const allPids = [...farmPids /* 19, 1, 2, 15 */]\n      const calls = allPids.map((pid) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = allPids.map((pid, index) => ({ pid, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '22px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  const BowText = styled.div`\n    .BowStyle {\n      font-family: 'Doppio One';\n      font-style: normal;\n      font-weight: 400;\n      font-size: 22px;\n      line-height: 28px;\n      padding-top: 2px;\n    }\n  `\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <BowText>\n      <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color} className=\"BowStyle\">\n        {prefix}\n        {countUp}\n      </Text>\n    </BowText>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport { Text } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { usePriceBowUsd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n  font-family: 'Doppio One';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 22px;\n  line-height: 28px;\n}\n`\nconst BlockValue = styled.div`\n  .block-text {\n    font-family: 'Doppio One';\n    font-style: normal;\n    font-weight: 400;\n    line-height: 28px;\n    padding-top: 2px;\n  }\n`\n\nconst CakeHarvestBalance = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const allPending = useFarmsWithBalance()\n  const earningsSum = allPending.reduce((accum, pending) => {\n    return accum + new BigNumber(pending.balance).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceBowUsd()).toNumber()\n\n  if (!account) {\n    return (\n      <BlockValue>\n        <Text fontSize=\"22px\" color=\"#BABABA\" className=\"block-text\">\n          {t('0.000')}\n        </Text>\n      </BlockValue>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      <CardBusdValue value={earningsBusd} />\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBowAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceBowUsd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const { t } = useTranslation()\n  const bowBalance = useTokenBalance(getBowAddress())\n  const busdBalance = new BigNumber(getBalanceNumber(bowBalance)).multipliedBy(usePriceBowUsd()).toNumber()\n  const { account } = useWeb3React()\n\n  const BlockValue = styled.div`\n    .block-text {\n      font-family: 'Doppio One';\n      font-style: normal;\n      font-weight: 400;\n      line-height: 28px;\n      padding-top: 2px;\n    }\n  `\n\n  if (!account) {\n    return (\n      <BlockValue>\n        <Text fontSize=\"22px\" color=\"#BABABA\" className=\"block-text\">\n          {t('0.000')}\n        </Text>\n      </BlockValue>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(bowBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      <CardBusdValue value={busdBalance} />\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Button, Flex, Text } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport useTheme from 'hooks/useTheme'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)<any>`\n  background: ${({ theme, isDark }) => (isDark ? theme.card.background : '#fff')};\n  box-shadow: ${({ theme, isDark }) =>\n    isDark ? '0px 3.5px 10px rgba(134, 145, 172, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\n  border-radius: 0px;\n  border: ${({ theme, isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\n`\nconst StyledUnlockButton = styled(UnlockButton)`\n  color: #000000;\n  width: 100%;\n  margin-top: 20px;\n  font-family: 'DM Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n`\n\nconst LeftBlock = styled.div`\n  .bow {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n  }\n`\n\nconst RightBlock = styled.div`\n  text-align: right;\n  .bow {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.title};\n  font-size: 14px;\n`\n\nconst Actions = styled.div``\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n  const { isDark } = useTheme()\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard isDark={isDark}>\n      <CardBody>\n        <Flex justifyContent=\"space-between\">\n          <LeftBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className='bow'>\n              {t('BOW to Harvest')}\n            </Text>\n            <CakeHarvestBalance />\n          </LeftBlock>\n\n          <RightBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className='bow'>\n              {t('BOW in Wallet')}\n            </Text>\n            <CakeWalletBalance />\n          </RightBlock>\n        </Flex>\n        <Actions>\n          {account ? (\n            <StyledButton\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? t('Collecting Bow')\n                : t(`Harvest all (%count%)`, {\n                    count: balancesWithValue.length,\n                  })}\n            </StyledButton>\n          ) : (\n            <StyledUnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Text, Heading } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\n\nconst StyledHeroCard = styled(Card)<any>`\n  background: ${({ theme, isDark }) => (isDark ? theme.card.background : '#fff')};\n  box-shadow: ${({ theme, isDark }) =>\n    isDark ? '0px 3.5px 10px rgba(134, 145, 172, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\n  border-radius: 0px;\n  border: ${({ theme, isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\n  width: 100%;\n  .card {\n    & > div {\n      width: 65%;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.sm} {\n      & > div {\n        width: 100%;\n      }\n    }\n  \n    ${({ theme }) => theme.mediaQueries.xs} {\n      & > div {\n        width: 100%;\n      }\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      & > div {\n        width: 65%;\n      }\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      & > div {\n        width: 65%;\n      }\n    }  \n  }\n`\n\nconst BowTitle = styled(Heading)`\n  font-size: 24px;\n  font-family: 'DM Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n`\nconst BackgroundArcherSwap = styled.img`\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  height: 100%;\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: none;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\nconst ContentTxt = styled.div`\n  .content {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px;\n  }\n`\n\nconst HeroCard = ({title, content}) => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n\n  return (\n    <StyledHeroCard isDark={isDark}>\n      <CardBody className=\"card\">\n        <BowTitle as=\"h1\" mb=\"12px\" color=\"#BA6401\" textAlign=\"left\">\n          {t(`${title}`)}\n        </BowTitle>\n        <ContentTxt>\n          <Text color=\"#A9A29D\" fontSize=\"18px\" className=\"content\">\n            {t(`${content}`)}\n          </Text>\n        </ContentTxt>\n      </CardBody>\n      {isDark ? (\n        <BackgroundArcherSwap src='images/bg_archerswap.png' className='archer' />\n      ) : (\n        <BackgroundArcherSwap src='images/bg_archerswap_light.png' className='archer' />\n      )}\n    </StyledHeroCard>\n  )\n}\n\nexport default HeroCard\n","import React from 'react'\nimport { Card, CardBody, Text, Flex } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useTheme from 'hooks/useTheme'\nimport { useBurnedBalance, useCirculatingBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBowAddress } from 'utils/addressHelpers'\nimport { usePriceBowUsd } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport CardValue from './CardValue'\n\nconst StyledBowStats = styled(Card)<any>`\n  background: ${({ theme, isDark }) => (isDark ? theme.card.background : '#fff')};\n  box-shadow: ${({ theme, isDark }) =>\n    isDark ? '0px 3.5px 10px rgba(134, 145, 172, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\n  border-radius: 0px;\n  border: ${({ theme, isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\n`\n\nconst LeftBlock = styled.div`\n  .heading {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n  }\n  margin-bottom: 16px;\n`\nconst RightBlock = styled.div`\n  margin-bottom: 16px;\n  text-align: right;\n  .heading {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n  }\n  .content {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n  }\n`\n\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const burnedBalance = useBurnedBalance(getBowAddress())\n  const circulatingBalance = useCirculatingBalance()\n  const { isDark } = useTheme()\n  const bowPriceUsd = usePriceBowUsd()\n\n  return (\n    <StyledBowStats isDark={isDark}>\n      <CardBody>\n        <Flex justifyContent=\"space-between\">\n          <LeftBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"heading\">\n              {t('BOW Price')}\n            </Text>\n            <CardValue color=\"#A9A29D\" fontSize=\"22px\" prefix='$' decimals={3} value={bowPriceUsd.toNumber()}/>\n          </LeftBlock>\n          <RightBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"heading\">\n              {t('BOW Market Cap')}\n            </Text>\n            <CardValue\n              fontSize=\"22px\"\n              prefix='$'\n              decimals={0}\n              color=\"#A9A29D\"\n              value={new BigNumber(circulatingBalance).div(1e18).times(bowPriceUsd).toNumber()}\n            />\n          </RightBlock>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <LeftBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"heading\">\n              {t('BOW in Circulation')}\n            </Text>\n            <CardValue color=\"#A9A29D\" fontSize=\"22px\" prefix='$' value={getBalanceNumber(circulatingBalance)} />\n          </LeftBlock>\n\n          <RightBlock>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"heading\">\n              {t('BOW Burned')}\n            </Text>\n            <CardValue color=\"#A9A29D\" fontSize=\"22px\" decimals={0} value={getBalanceNumber(burnedBalance)} />\n          </RightBlock>\n        </Flex>\n      </CardBody>\n    </StyledBowStats>\n  )\n}\n\nexport default CakeStats\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Skeleton, Text, Flex } from 'archerswap-uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats, useTokensData } from 'hooks/api'\nimport { useFarms, useGetApiPrices, usePools, useOneDayVolume } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePairsLength } from 'hooks/useTokenBalance'\nimport useBowInfo from 'hooks/useBowInfo'\n\nconst StyledTotalValueLockedCard = styled(Card)<any>`\n  background: ${({ theme, isDark }) => (isDark ? theme.card.background : '#fff')};\n  box-shadow: ${({ theme, isDark }) =>\n    isDark ? '0px 3.5px 10px rgba(134, 145, 172, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\n  border-radius: 0px;\n  border: ${({ theme, isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\n`\nconst Block = styled.div`\n  .BlockTradingHeader {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    \n  }\n  .BlockTradingContent {\n    font-family: 'Doppio One';\n    font-style: normal;\n    font-weight: 400;\n  }\n`\n\nconst TotalValueLockedCard = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const farms = useFarms()\n  const prices = useGetApiPrices()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { isDark } = useTheme()\n  const oneDayVolume = useOneDayVolume()\n  const pairsLength = usePairsLength()\n  const tokenslength = useTokensData()\n  const { totalLockedBow } = useBowInfo()\n\n  const tvl = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const farmTVL = farms.reduce((accum, farm) => {\n      if (!farm.lpTotalInQuoteToken || !prices) {\n        return accum\n      }\n\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\n      const liquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n      return accum.plus(liquidity)\n    }, new BigNumber(0))\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const poolTVL = pools.reduce((accum, pool) => {\n      if (!pool) {\n        return accum\n      }\n\n      const stakingTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\n      const liquidity = new BigNumber(pool.totalStaked)\n        .div(new BigNumber(10).pow(pool.stakingToken.decimals))\n        .times(stakingTokenPriceUsd)\n      return accum.plus(liquidity)\n    }, new BigNumber(0))\n\n    const pairTVL = new BigNumber(data ? data.total_value_locked_all : 0)\n\n    const xbowTVL = totalLockedBow.times(prices.bow)\n\n    // const totalTVL = farmTVL.plus(poolTVL).plus(pairTVL).plus(xbowTVL)\n    const totalTVL = pairTVL.plus(xbowTVL)\n\n    return totalTVL.toNumber().toLocaleString('en-US', { maximumFractionDigits: 0 })\n  }, [data, farms, pools, prices, totalLockedBow])\n\n  return (\n    <StyledTotalValueLockedCard isDark={isDark}>\n      <CardBody>\n        <Flex justifyContent=\"space-between\">\n          <Block>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"BlockTradingHeader\">\n              {t('24h Trading Volume')}\n              <br />\n            </Text>\n            {data ? (\n              <>\n                <Text fontSize=\"22px\" fontWeight={600} color=\"#A9A29D\" className=\"BlockTradingContent\">\n                  ${oneDayVolume.oneDayVolumeUSD.toLocaleString('en-US', { maximumFractionDigits: 3 })}\n                </Text>\n              </>\n            ) : (\n              <>\n                <Skeleton height={50} />\n              </>\n            )}\n          </Block>\n\n          <Block>\n            <Text fontSize=\"16px\" color=\"#BA6401\" textAlign=\"right\" className=\"BlockTradingHeader\">\n              {t('Coins')}\n            </Text>\n\n            <Text fontSize=\"22px\" fontWeight={600} color=\"#A9A29D\" textAlign=\"right\" className=\"BlockTradingContent\">\n              {tokenslength}\n            </Text>\n          </Block>\n        </Flex>\n\n        <Flex justifyContent=\"space-between\">\n          <Block>\n            <Text fontSize=\"16px\" color=\"#BA6401\" className=\"BlockTradingHeader\">\n              {t('Total Valued Locked (TVL)')}\n              <br />\n            </Text>\n            {data ? (\n              <>\n                <Text fontSize=\"22px\" fontWeight={600} color=\"#A9A29D\" className=\"BlockTradingContent\">{`$${tvl}`}</Text>\n              </>\n            ) : (\n              <>\n                <Skeleton height={50} />\n              </>\n            )}\n          </Block>\n\n          <Block>\n            <Text fontSize=\"16px\" color=\"#BA6401\" textAlign=\"right\" className=\"BlockTradingHeader\">\n              {t('Pairs')}\n            </Text>\n            <Text fontSize=\"22px\" fontWeight={600} color=\"#A9A29D\" textAlign=\"right\" className=\"BlockTradingContent\">\n              {pairsLength}\n            </Text>\n          </Block>\n        </Flex>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button } from 'archerswap-uikit'\n\nconst StyledBanner = styled.img`\n  height: 100%;\n  display: none;\n  position: relative;\n  min-width: 154px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\nconst StyledMobileBanner = styled.img`\n  position: relative;\n  min-width: 154px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst WelcomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  .welcome-text {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 99%;\n    color: #000000;\n    font-size: 30px;\n\n    ${({ theme }) => theme.mediaQueries.xs} {\n      font-size: 30px;\n    }\n\n    ${({ theme }) => theme.mediaQueries.md} {\n      font-size: 60px;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      font-size: 74px;\n    }\n  }\n  .trade-text {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 120%;\n    color: #000000;\n    font-size: 18px;\n    padding-top: 5px;\n      \n    ${({ theme }) => theme.mediaQueries.xs} {\n      font-size: 20px;\n      padding-top: 5px;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      font-size: 28px;\n      padding-top: 11px;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      font-size: 32px;\n      padding-top: 21.81px;\n    }\n  }\n  .bow-text {\n    font-family: 'DM Sans';\n    font-style: normal;\n    font-weight: 700;\n    line-height: 28px;\n    color: #000000;\n    font-size: 14px;\n    padding-top: 6px;\n  \n    ${({ theme }) => theme.mediaQueries.xs} {\n      font-size: 12px;\n      padding-top: 6px;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      font-size: 20px;\n      padding-top: 9px;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      font-size: 24px;\n      padding-top: 10px;\n    }\n  }\n  .button-lg {\n    display: none;\n    ${({ theme }) => theme.mediaQueries.xs} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.xl} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      display: none;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      display: none;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      display: block;\n    }\n  }\n  .button-sm {\n    display: none;\n    ${({ theme }) => theme.mediaQueries.xs} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.xl} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      display: none;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      display: block;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      display: none;\n    }\n  }\n  .button-xs {\n    display: block;\n    ${({ theme }) => theme.mediaQueries.xs} {\n      display: block;\n    }\n\n    ${({ theme }) => theme.mediaQueries.xl} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      display: block;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      display: none;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      display: none;\n    }\n  }\n`\n\nconst ImageContainer = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  justify-content: end;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 9px;\n  padding-top: 22px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 22px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-top: 22px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 22px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 30px;\n  }\n`\n\nconst BannerContainer = styled.div<{ isDark: boolean }>`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  background: ${(props) =>\n    props.theme.isDark ? \"linear-gradient(86.46deg,#6C3A00 0%,#F78E15 101.73%)\": null};\n  padding-top: 20px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n   padding-top: 20px;\n  }\n  \n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-top: 15px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 0px;\n  }\n`\n\nconst StyledContent = styled.div<{ left: string }>`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 45px;\n  padding-bottom: 20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 45px;\n    padding-bottom: 20px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 30px;\n    padding-bottom: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-left: 0px;\n    padding-bottom: 0px;\n  }\n`\n\nconst BannerArcher = ({ src, alt, head, head2, title, text, mobileSrc, isDark, white = false, left = '' }) => {\n  return (\n    <BannerContainer isDark={isDark}>\n      <StyledContent left={left}>\n        <WelcomeContainer>\n          <Text className=\"welcome-text\">{head}<br/>{head2}</Text>\n          <Text className=\"trade-text\">{title}</Text>\n          <Text className=\"bow-text\">{text}</Text>\n          {/* <ButtonContainer>\n            <Button variant=\"tradeprimary\" scale=\"md\" mr=\"8px\" className=\"button-lg\">\n              Trade\n            </Button>\n            <Button variant=\"tradesecondary\" scale=\"md\" mr=\"8px\" className=\"button-lg\">\n              Farms\n            </Button>\n            <Button variant=\"tradeprimary\" scale=\"sm\" mr=\"8px\" className=\"button-sm\">\n              Trade\n            </Button>\n            <Button variant=\"tradesecondary\" scale=\"sm\" mr=\"8px\" className=\"button-sm\">\n              Farms\n            </Button>\n            <Button variant=\"tradeprimary\" scale=\"sm\" mr=\"8px\" className=\"button-xs\">\n              Trade\n            </Button>\n            <Button variant=\"tradesecondary\" scale=\"sm\" mr=\"8px\" className=\"button-xs\">\n              Farms\n            </Button>\n          </ButtonContainer> */}\n        </WelcomeContainer>\n      </StyledContent>\n      <ImageContainer>\n        <StyledMobileBanner src={mobileSrc} alt={alt} />\n        <StyledBanner src={src} alt={alt} />\n      </ImageContainer>\n    </BannerContainer>\n  )\n}\n\nexport default BannerArcher\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from 'archerswap-uikit'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport HeroCard from 'views/Home/components/HeroCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport BannerArcher from 'components/BannerArcher'\nimport { useTranslation } from 'contexts/Localization'\nimport 'react-multi-carousel/lib/styles.css'\nimport useTheme from '../../hooks/useTheme'\n\nconst Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n  gap: 15px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n      width: 100%;\n    }\n  }\n`\n\nconst Background = styled.div`\n  width: 100%;\n`\nconst CopyRight = styled.div`\n  text-align: center;\n  .copy {\n    ${({ theme }) => theme.mediaQueries.xs} {\n      #A9A29D\n    }\n  \n    ${({ theme }) => theme.mediaQueries.md} {\n      color: #ED952E;\n    }\n  \n    ${({ theme }) => theme.mediaQueries.lg} {\n      color: #ED952E;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n\n  return (\n    <Background>\n      <BannerArcher\n          src=\"/images/assets/banners/1token.png\"\n          mobileSrc=\"/images/assets/banners/1token_mobile.png\"\n          alt=\"home_banner\"\n          head={t('Welcome to')}\n          head2={t('ArcherSwap')}\n          title={t('Trade Mining, Farm & Pool')}\n          text={t('Open for BOW')}\n          isDark={isDark}\n          white\n        />\n      <Page style={{minHeight: \"auto\"}}>\n        <div>\n          <Cards>\n            <FarmStakingCard />\n            <CakeStats />\n            <TotalValueLockedCard />\n          </Cards>\n          <Hero>\n            <HeroCard title=\"ArcherSwap\" content=\"ArcherSwap is a crypto world for users to trade, earn, and game. It is the premier choice for projects on Core Chain with features including AMM, NFT, and GameFi.\"/>\n          </Hero>\n          <CopyRight>\n            <Text className=\"copy\">{`${t('©2023 ArcherSwap. All Rights Reserved')}`}</Text>\n          </CopyRight>\n        </div>\n      </Page>\n    </Background>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}