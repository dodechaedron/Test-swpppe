{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","views/Profile/components/ApproveConfirmButtonsWithWhitelist.tsx","views/Ifos/components/IfoCard/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","Promise","all","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","initialState","approvalState","isWhitelisted","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onWhitelisted","onConfirm","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","handleWhitelist","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","Wrapper","styled","div","theme","mediaQueries","xs","md","IfoTabButtons","useRouteMatch","url","isExact","t","useTheme","isDark","useTranslation","activeIndex","scale","variant","as","Link","to","style","borderRadius","color","getStatus","currentTime","startTime","endTime","useGetPublicIfoData","ifo","releaseTime","status","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","totalAmount","startTimestamp","endTimestamp","liquidityIsCreated","setState","currentBlock","useBlock","blockNumber","useIfoContract","makeBatchRequest","parseInt","Math","floor","Date","now","totalSeconds","fetchProgress","StyledIfoCardHeader","Flex","Name","Heading","attrs","size","Description","Text","colors","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","maxWidth","maxHeight","IfoCardDetails","isOpen","setIsOpen","description","onClick","endIcon","mt","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","currencyContract","useERC20","useIfoAllowance","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","setIsClaimed","StyledApprovConfirmButtons","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtonsWithWhitelist","privateSale","isApproveDisabled","isConfirmDisabled","textAlign","disabled","undefined","isLoading","justifyContent","StyledBalanceInput","Box","input","radii","default","Input","UIKitInput","BalanceInput","title","max","onChange","onSelectMax","value","props","maxDisplay","toFixed","fontSize","placeholder","marginRight","mr","ContributeModal","currency","currencyDecimals","contributedBalance","maxDepositAmount","onDismiss","setValue","raisingTokenContract","getBalanceNumber","valueWithTokenDecimals","times","response","options","currentAllowance","gt","ethers","constants","MaxUint256","deposit","e","parseFloat","currentTarget","temp","handleMax","isNaN","eq","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","maximumFractionDigits","num","Contribute","publicIfoData","toastSuccess","useModal","isPrivate","token","onPresentContributeModal","bold","textTransform","flex","pr","MetaLabel","children","minHeight","BalanceInUsd","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","tokenSymbol","tokenDecimals","refundedBalance","rewardBalance","handleClaim","harvest","message","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Details","IfoCardTime","timeUntil","href","rel","ml","StyledCardRibbon","CardRibbon","StyledIfoCard","Card","Item","secondary","Display","IfoCard","id","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","Ribbon","variantColor","text","getRibbonComponent","ribbon","padding","marginTop","display","margin","Title","IfoCardWrapper","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","GuideCard","CardContainer","StyledTitle","StyledHeading","span","Airplane","LaunchCard","activeIfo","ifosConfig","find","Ifo","IfoCards","marginBottom","external","inactiveIfo","filter","PastIfo","map","Background","StyledContainer","Container","Ifos","path","Banner","mobileSrc","exact","CurrentIfo"],"mappings":"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","file":"static/js/32.f69d2239.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getBowContract, getFactoryContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nexport const useETHBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useWcoreBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.allowance(account, targetAddress).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && targetAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\n\n  return allowance\n}\n\nexport const useApprove = () => {\n  const [approvePending, setApprovePending] = useState(false)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(\n    async (targetAddress: string, contractAddress: string) => {\n      try {\n        setApprovePending(true)\n        const contract = getBep20Contract(contractAddress, web3)\n        const tx = await contract.methods\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\n          .send({ from: account })\n        setApprovePending(false)\n        return tx\n      } catch (e) {\n        setApprovePending(false)\n        return false\n      }\n    },\n    [web3, account],\n  )\n\n  return { onApprove: handleApprove, approvePending }\n}\n\nexport const useTokenSymbol = (tokenAddress: string) => {\n  const [symbol, setSymbol] = useState('')\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.symbol().call()\n      setSymbol(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return symbol\n}\n\nexport const useTokenDecimal = (tokenAddress: string) => {\n  const [decimal, setDecimal] = useState(0)\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.decimals().call()\n      setDecimal(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return decimal\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = getWeb3NoAccountFromChain(chainId)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && chainId) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const bowContract = getBowContract()\n      const supply = await bowContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useCirculatingBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const bowContract = getBowContract()\n      const [tRes, res0, res1, res2] = await Promise.all([\n        bowContract.methods.totalSupply().call(),\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\n      ])\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\n    }\n\n    fetchBalance()\n  }, [web3, fastRefresh])\n\n  return balance\n}\n\nexport const usePairsLength = () => {\n  const [pairsLength, setPairsLength] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchPairsLength = async () => {\n      const contract = getFactoryContract(web3)\n      const res = await contract.methods.allPairsLength().call()\n      setPairsLength(res)\n    }\n\n    fetchPairsLength()\n  }, [web3, slowRefresh])\n\n  return pairsLength\n}\n\nexport default useTokenBalance\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'requires_whitelist'; payload: boolean }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  isWhitelisted: boolean\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  isWhitelisted: false,\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'requires_whitelist':\n      return {\n        ...state,\n        isWhitelisted: actions.payload,\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onWhitelisted?: ContractHandler\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onWhitelisted,\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const handleWhitelist = useRef(onWhitelisted)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n      handleWhitelist.current().then((result) => {\n        dispatch({ type: 'requires_whitelist', payload: result })\n      })\n    }\n  }, [account, handleWhitelist, handlePreApprove, dispatch])\n\n  return {\n    isWhitelisted: state.isWhitelisted,\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-top: 16px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n  }\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const { isDark } = useTheme()\n  const textColor = isDark ? '' : '#2A2A2A'\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: '30px', color: 'contrast' }}>\n          {t('Next IDO')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: '30px', color: 'contrast' }}>\n          {t('Past IDOs')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import BigNumber from 'bignumber.js'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { useBlock } from 'state/hooks'\nimport { useIfoContract } from 'hooks/useContract'\nimport { useEffect, useState } from 'react'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface PublicIfoState {\n  status: IfoStatus\n  // blocksRemaining: number\n  // blocksRemainingToStart: number\n  secondsUntilStart: number\n  progress: number\n  secondsUntilEnd: number\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  startTimestamp: number\n  endTimestamp: number\n  liquidityIsCreated?: boolean\n}\n\nconst getStatus = (currentTime: number, startTime: number, endTime: number): IfoStatus => {\n  // Add an extra check to currentTime because it takes awhile to fetch so the initial value is 0\n  // making the UI change to an inaccurate status\n  if (currentTime === 0) {\n    return 'idle'\n  }\n\n  if (currentTime < startTime) {\n    return 'coming_soon'\n  }\n\n  if (currentTime >= startTime && currentTime <= endTime) {\n    return 'live'\n  }\n\n  if (currentTime > endTime) {\n    return 'finished'\n  }\n\n  return 'idle'\n}\n\n/**\n * Gets all public data of an IFO\n */\nconst useGetPublicIfoData = (ifo: Ifo) => {\n  const { address, releaseTime } = ifo\n  const [state, setState] = useState<PublicIfoState>({\n    status: 'idle',\n    // blocksRemaining: 0,\n    // blocksRemainingToStart: 0,\n    secondsUntilStart: 0,\n    progress: 5,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startTimestamp: 0,\n    endTimestamp: 0,\n    liquidityIsCreated: false,\n  })\n  const { blockNumber: currentBlock } = useBlock()\n  const contract = useIfoContract(address)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startTime, endTime, raisingAmount, totalAmount, liquidityIsCreated] = (await makeBatchRequest([\n        contract.methods.startTime().call,\n        contract.methods.endTime().call,\n        contract.methods.raisingAmount().call,\n        contract.methods.totalAmount().call,\n        contract.methods.liquidityIsCreated().call,\n      ])) as [string, string, string, string, boolean]\n\n      const startTimestamp = parseInt(startTime, 10)\n      const endTimestamp = parseInt(endTime, 10)\n\n      const currentTime = Math.floor(Date.now() / 1000)\n      const status = getStatus(currentTime, startTimestamp, endTimestamp)\n      const totalSeconds = endTimestamp - startTimestamp\n      // const blocksRemaining = endTimestamp - currentTime\n      // const blocksRemainingToStart = startTimestamp - currentTime\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentTime > startTimestamp\n          ? ((currentTime - startTimestamp) / totalSeconds) * 100\n          : ((currentTime - releaseTime) / (startTimestamp - releaseTime)) * 100\n\n      setState({\n        secondsUntilEnd: endTimestamp - currentTime,\n        secondsUntilStart: startTimestamp - currentTime,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        // blocksRemaining,\n        // blocksRemainingToStart,\n        startTimestamp,\n        endTimestamp,\n        liquidityIsCreated,\n      })\n    }\n\n    fetchProgress()\n  }, [address, currentBlock, contract, releaseTime, setState])\n\n  return state\n}\n\nexport default useGetPublicIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from 'archerswap-uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: left;\n  margin-left: 20px;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: left;\n  margin-left: 20px;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"30px\" alignItems=\"center\">\n      <img\n        src={`/images/ifos/${ifoId}.png`}\n        alt={ifoId}\n        width=\"50px\"\n        height=\"50px\"\n        style={{ maxWidth: '50px', maxHeight: '50px' }}\n      />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\n// import styled from 'styled-components'\nimport { Text, CardFooter, Button, ChevronDownIcon, ChevronUpIcon } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Ifo } from 'config/constants/types'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\n\nexport interface IfoCardDetailsProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const { description } = ifo\n  const handleToggle = () => setIsOpen(!isOpen)\n\n  return (\n    <CardFooter>\n      <Button\n        variant=\"text\"\n        onClick={handleToggle}\n        width=\"100%\"\n        endIcon={\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\n        }\n      >\n        {isOpen ? t('Hide') : t('Details')}\n      </Button>\n      {isOpen && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"30px\" mt=\"5px\">\n            {t(description)}\n          </Text>\n        </>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default IfoCardDetails\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Ifo } from 'config/constants/types'\nimport { useERC20, useIfoContract } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface UserInfo {\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface WalletIfoState {\n  isPendingTx: boolean\n  offeringTokenBalance: BigNumber\n  refundingAmount: BigNumber\n  userInfo: UserInfo\n}\n\n/**\n * Gets all data from an IFO related to a wallet\n */\nconst useGetWalletIfoData = (ifo: Ifo) => {\n  const [state, setState] = useState<WalletIfoState>({\n    isPendingTx: false,\n    offeringTokenBalance: new BigNumber(0),\n    refundingAmount: new BigNumber(0),\n    userInfo: {\n      amount: new BigNumber(0),\n      claimed: false,\n    },\n  })\n\n  const { address, currencyAddress } = ifo\n  const { isPendingTx } = state\n\n  const { account } = useWeb3React()\n  const contract = useIfoContract(address)\n  const currencyContract = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\n\n  const setPendingTx = (status: boolean) =>\n    setState((prevState) => ({\n      ...prevState,\n      isPendingTx: status,\n    }))\n\n  const addUserContributedAmount = (amount: BigNumber) => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        amount: prevState.userInfo.amount.plus(amount),\n      },\n    }))\n  }\n\n  const setIsClaimed = () => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        claimed: true,\n      },\n    }))\n  }\n\n  useEffect(() => {\n    const fetchIfoData = async () => {\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\n        contract.methods.getOfferingAmount(account).call,\n        contract.methods.userInfo(account).call,\n        contract.methods.getRefundingAmount(account).call,\n      ])) as [string, UserInfo, string]\n\n      setState((prevState) => ({\n        ...prevState,\n        offeringTokenBalance: new BigNumber(offeringAmount),\n        refundingAmount: new BigNumber(refundingAmount),\n        userInfo: {\n          amount: new BigNumber(userInfoResponse.amount),\n          claimed: userInfoResponse.claimed,\n        },\n      }))\n    }\n\n    if (account) {\n      fetchIfoData()\n    }\n  }, [account, contract, setState])\n\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\n}\n\nexport default useGetWalletIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Text,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ApproveConfirmButtonsProps {\n  privateSale: boolean\n  isWhitelisted: boolean\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApprovConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtonsWithWhitelist: React.FC<ApproveConfirmButtonsProps> = ({\n  privateSale,\n  isWhitelisted,\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const { t } = useTranslation()\n  if (privateSale && !isWhitelisted) {\n    return (\n      <Text as=\"p\" mb=\"24px\" style={{ textAlign: 'center', width: '100%' }}>\n        You are not whitlisted.\n      </Text>\n    )\n  }\n  return (\n    <StyledApprovConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? t('Approving') : t('Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm')}\n        </Button>\n      </Box>\n    </StyledApprovConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtonsWithWhitelist\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface BalanceInputProps extends BoxProps {\n  title: string\n  max: number\n  symbol: string\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  onSelectMax?: () => void\n}\n\nconst StyledBalanceInput = styled(Box)`\n  background: ${({ theme }) => theme.colors.input};\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 8px 16px;\n`\n\nconst Input = styled(UIKitInput)`\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  box-shadow: none;\n  flex: 1;\n`\n\n// const TokenSymbol = styled(Text)`\n//   max-width: 120px;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n//   white-space: nowrap;\n//   flex: 1;\n// `\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\n  const { t } = useTranslation()\n  const maxDisplay = max.toFixed(2)\n\n  return (\n    <StyledBalanceInput {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text fontSize=\"14px\">{title}</Text>\n        <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: maxDisplay })}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} type=\"number\" style={{ marginRight: '10px' }} />\n        {onSelectMax && (\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            Max\n          </Button>\n        )}\n        <Text fontSize=\"14px\">{symbol}</Text>\n      </Flex>\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, Box, Text } from 'archerswap-uikit'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport ApproveConfirmButtonsWithWhitelist from 'views/Profile/components/ApproveConfirmButtonsWithWhitelist'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\nimport BalanceInput from './BalanceInput'\n\ninterface Props {\n  privateSale: boolean\n  currency: string\n  contract: any\n  currencyAddress: string\n  currencyDecimals: number\n  contributedBalance?: number\n  maxDepositAmount?: number\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({\n  privateSale,\n  currency,\n  contract,\n  currencyAddress,\n  currencyDecimals,\n  contributedBalance,\n  maxDepositAmount,\n  onDismiss,\n  onSuccess,\n}) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress), currencyDecimals)\n  const { t } = useTranslation()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(currencyDecimals))\n  const {\n    isWhitelisted,\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onWhitelisted: async () => {\n      try {\n        const response = await contract.methods.isWhitelisted(account).call()\n        return response\n      } catch (error) {\n        return false\n      }\n    },\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  const handleMax = () => {\n    let temp = balance\n    if (maxDepositAmount > 0 && maxDepositAmount - contributedBalance < temp) {\n      temp = maxDepositAmount - contributedBalance\n    }\n\n    setValue(temp.toString())\n  }\n\n  return (\n    <Modal title={t('Contribute %symbol%', { symbol: currency })} onDismiss={onDismiss}>\n      <Box maxWidth=\"400px\">\n        <BalanceInput\n          title={t('Contribute')}\n          value={value}\n          onChange={(e) => {\n            if (parseFloat(e.currentTarget.value) >= 0 || !e.currentTarget.value) setValue(e.currentTarget.value)\n          }}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => handleMax()}\n          mb=\"24px\"\n        />\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            \"If you don't contribute enough WCORE tokens, you may not receive any IDO tokens at all and will only receive a full refund of your WCORE tokens.\",\n          )}\n        </Text>\n        <ApproveConfirmButtonsWithWhitelist\n          privateSale={privateSale}\n          isWhitelisted={isWhitelisted}\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved ||\n            isConfirmed ||\n            valueWithTokenDecimals.isNaN() ||\n            valueWithTokenDecimals.eq(0) ||\n            valueWithTokenDecimals.gt(new BigNumber(balance).times(new BigNumber(10).pow(currencyDecimals))) ||\n            (maxDepositAmount > 0 &&\n              valueWithTokenDecimals.gt(\n                new BigNumber(maxDepositAmount - contributedBalance).times(new BigNumber(10).pow(currencyDecimals)),\n              ))\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n        {/* <LinkExternal\n          href={`https://archerswap.finance/#/add/CORE/${currencyAddress}`}\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal> */}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Text } from 'archerswap-uikit'\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo['amount']\n  totalAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\n  const { t } = useTranslation()\n  const percentOfUserContribution = totalAmount.gt(0) ? userAmount.div(totalAmount).times(100).toNumber() : 0\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 2 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {t('%num% of total', { num: percentofUserDisplay })}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { Box, Button, Flex, Text, useModal } from 'archerswap-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useToast } from 'state/hooks'\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\nimport ContributeModal from './ContributeModal'\nimport PercentageOfTotal from './PercentageOfTotal'\n\ninterface ContributeProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: boolean\n  publicIfoData: PublicIfoState\n  addUserContributedAmount: (amount: BigNumber) => void\n}\nconst Contribute: React.FC<ContributeProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  publicIfoData,\n  addUserContributedAmount,\n}) => {\n  const { currency, currencyAddress, currencyDecimals, maxDepositAmount } = ifo\n  const { totalAmount } = publicIfoData\n  const { t } = useTranslation()\n  const contributedBalance = getBalanceNumber(userInfo.amount, currencyDecimals)\n  const { toastSuccess } = useToast()\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess(\n      t('Success!'),\n      t(`You have contributed %num% %token% tokens to this IDO!`, {\n        num: getBalanceNumber(amount, currencyDecimals),\n        token: currency,\n      }),\n    )\n    addUserContributedAmount(amount)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      privateSale={ifo.isPrivate}\n      currency={currency}\n      contract={contract}\n      currencyAddress={currencyAddress}\n      currencyDecimals={currencyDecimals}\n      contributedBalance={contributedBalance}\n      maxDepositAmount={maxDepositAmount}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  return (\n    <Box>\n      <Flex>\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n          {currency}\n        </Text>\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n          {t('Committed')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Box style={{ flex: 1 }} pr=\"8px\">\n          <Text bold fontSize=\"22px\">\n            {contributedBalance.toFixed(2)}\n          </Text>\n        </Box>\n        <Button\n          onClick={onPresentContributeModal}\n          disabled={isPendingTx || (maxDepositAmount > 0 && contributedBalance >= maxDepositAmount)}\n          style={{ height: '40px' }}\n        >\n          {t('Contribute')}\n        </Button>\n      </Flex>\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\n    </Box>\n  )\n}\n\nexport default Contribute\n","import React from 'react'\nimport { Box, BoxProps, Text } from 'archerswap-uikit'\n\ntype MetaLabel = BoxProps\n\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Box minHeight=\"18px\" {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\">\n        {children}\n      </Text>\n    </Box>\n  )\n}\n\nexport default MetaLabel\n","import React from 'react'\nimport { useGetApiPrice } from 'state/hooks'\nimport MetaLabel from './MetaLabel'\n\ninterface BalanceInUsdProps {\n  token: string\n  balance: number\n}\n\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\n  const priceInUsd = useGetApiPrice(token)\n  const hasBalance = !!priceInUsd && balance > 0\n  const total = priceInUsd * balance\n\n  return (\n    <MetaLabel>\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n    </MetaLabel>\n  )\n}\n\nexport default BalanceInUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { AutoRenewIcon, Box, Button, Flex, Text } from 'archerswap-uikit'\nimport { useToast } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport { UserInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\nimport BalanceInUsd from './BalanceInUsd'\nimport MetaLabel from './MetaLabel'\n\ninterface ClaimProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: WalletIfoState['isPendingTx']\n  setPendingTx: (status: boolean) => void\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\n  refundingAmount: WalletIfoState['refundingAmount']\n  setIsClaimed: () => void\n  liquidityIsCreated: boolean\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`\n\nconst DISPLAY_DECIMALS = 4\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n  liquidityIsCreated,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const didContribute = userInfo.amount.gt(0)\n  const canClaim = !userInfo.claimed\n  const { tokenSymbol, tokenDecimals, currencyDecimals } = ifo\n  const contributedBalance = getBalanceNumber(userInfo.amount, currencyDecimals)\n  const refundedBalance = getBalanceNumber(refundingAmount, currencyDecimals).toFixed(\n    userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS,\n  )\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true)\n      await contract.methods.harvest().send({ from: account })\n      setIsClaimed()\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\n    } catch (error) {\n      toastError('Error', error?.message)\n      console.error(error)\n    } finally {\n      setPendingTx(false)\n    }\n  }\n\n  const buttonLabel = () => {\n    if (!liquidityIsCreated) {\n      return t('Adding Liquidity...')\n    }\n    if (canClaim) {\n      return t('Claim')\n    }\n\n    return t('Claimed')\n  }\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {ifo.currency} {t('Tokens')}\n            </Text>\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n              {t('Committed')}\n            </Text>\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          <MetaLabel>{canClaim ? `${refundedBalance} to reclaim` : `${refundedBalance} reclaimed`}</MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {tokenSymbol}\n            </Text>\n            {!canClaim ? (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                Claimed\n              </Text>\n            ) : (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim || !liquidityIsCreated}\n          width=\"100%\"\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {buttonLabel()}\n        </Button>\n      ) : (\n        <Button disabled width=\"100%\" mb=\"24px\">\n          {t('Nothing to Claim')}\n        </Button>\n      )}\n      {!liquidityIsCreated ? (\n        <Text mt=\"4px\" fontSize=\"14px\">\n          {t('Please wait until liquidity is created')}\n        </Text>\n      ) : (\n        <Text mt=\"4px\" fontSize=\"14px\">\n          {t('You’ll be refunded any excess tokens when you claim')}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default Claim\n","import React from 'react'\nimport { Box, Skeleton } from 'archerswap-uikit'\n\nconst ActiveSkeleton = () => (\n  <Box>\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\n    <Skeleton height=\"48px\" mb=\"2px\" />\n    <Skeleton height=\"19px\" width=\"15%\" />\n  </Box>\n)\n\nexport default ActiveSkeleton\n","import React from 'react'\nimport { Box, Flex, Skeleton } from 'archerswap-uikit'\n\nconst InactiveSkeleton = () => (\n  <>\n    <Flex mb=\"24px\">\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n    </Flex>\n    <Skeleton height=\"48px\" mb=\"24px\" />\n    <Skeleton height=\"48px\" mt=\"4px\" />\n  </>\n)\n\nexport default InactiveSkeleton\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo } from 'config/constants/types'\nimport UnlockButton from 'components/UnlockButton'\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\nimport Contribute from './Contribute'\nimport Claim from './Claim'\nimport ActiveSkeleton from './ActiveSkeleton'\nimport InactiveSkeleton from './InactiveSkeleton'\n\nexport interface Props {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\n  const {\n    isPendingTx,\n    offeringTokenBalance,\n    refundingAmount,\n    userInfo,\n    contract,\n    setPendingTx,\n    addUserContributedAmount,\n    setIsClaimed,\n  } = useGetWalletIfoData(ifo)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <UnlockButton />\n  }\n\n  return (\n    <>\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\n      {publicIfoData.status === 'live' && (\n        <Contribute\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          publicIfoData={publicIfoData}\n          addUserContributedAmount={addUserContributedAmount}\n        />\n      )}\n      {publicIfoData.status === 'finished' && (\n        <Claim\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          setPendingTx={setPendingTx}\n          offeringTokenBalance={offeringTokenBalance}\n          refundingAmount={refundingAmount}\n          setIsClaimed={setIsClaimed}\n          liquidityIsCreated={publicIfoData.liquidityIsCreated}\n        />\n      )}\n    </>\n  )\n}\n\nexport default IfoCardActions\n","import React from 'react'\nimport { Box, Progress } from 'archerswap-uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <Box mb=\"16px\">\n      <Progress primaryStep={progress} />\n    </Box>\n  )\n}\n\nexport default IfoCardProgress\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link } from 'archerswap-uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\n// import { useTranslation } from 'contexts/Localization'\n\nexport interface IfoCardTimeProps {\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  startTime: number\n  endTime: number\n  // blocksRemaining: number\n  // blocksRemainingToStart: number\n  // block: number\n  // blockToEnd: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\n// const Countdown = styled.div`\n//   color: ${({ theme }) => theme.colors.secondary};\n//   font-size: 20px;\n//   font-weight: 600;\n//   text-align: center;\n// `\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({\n  status,\n  secondsUntilStart,\n  secondsUntilEnd,\n  startTime,\n  endTime,\n  // block,\n  // blockToEnd,\n  // blocksRemaining,\n  // blocksRemainingToStart,\n}) => {\n  // const { t } = useTranslation()\n  // const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  // const blockCount = status === 'coming_soon' ? blocksRemainingToStart : blocksRemaining\n  const timeCount = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(timeCount)\n  // const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (status === 'idle') {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\n        Loading...\n      </Flex>\n    )\n  }\n\n  return (\n    <Details>\n      {/* <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown> */}\n      <Link\n        href={`https://www.epochconverter.com/countdown?q=${status === 'coming_soon' ? startTime : endTime}`}\n        target=\"blank\"\n        rel=\"noopener noreferrer\"\n        ml=\"8px\"\n      >\n        {`${timeUntil.days} ${timeUntil.days === 1 ? 'day' : 'days'}\n          ${timeUntil.hours} ${timeUntil.hours === 1 ? 'hr' : 'hrs'}\n          ${timeUntil.minutes} ${timeUntil.minutes === 1 ? 'min' : 'mins'} `}\n        {status === 'coming_soon' ? 'until start' : 'until finish'}\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon, Text, LinkExternal, Link, Box } from 'archerswap-uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledCardRibbon = styled(CardRibbon)`\n  font-size: 12px;\n`\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.png')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 105px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n  border-radius: 20px;\n  box-shadow: 0px 4px 10px 5px rgba(105, 105, 105, 0.15);\n`\nconst getRibbonComponent = (status: IfoStatus, t: (fallback: string) => any, isPrivate: boolean) => {\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={t('LIVE NOW!')} />\n  }\n\n  return <StyledCardRibbon variantColor=\"textDisabled\" text={t(isPrivate ? 'Private Sale' : 'Public Sale')} />\n}\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    isPrivate,\n    name,\n    subTitle,\n    projectSiteUrl,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    maxDepositAmount,\n    currency,\n  } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { raisingAmount, totalAmount } = publicIfoData\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const Ribbon = getRibbonComponent(publicIfoData.status, t, isPrivate)\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n      <CardBody style={{ padding: '30px' }}>\n        <IfoCardHeader ifoId={id} name={t(name)} subTitle={subTitle} />\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\n          <>\n            <IfoCardProgress progress={publicIfoData.progress} />\n            <IfoCardTime\n              status={publicIfoData.status}\n              secondsUntilStart={publicIfoData.secondsUntilStart}\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\n              startTime={publicIfoData.startTimestamp}\n              endTime={publicIfoData.endTimestamp}\n              // blocksRemaining={publicIfoData.blocksRemaining}\n              // blocksRemainingToStart={publicIfoData.blocksRemainingToStart}\n              // block={publicIfoData.startTimestamp}\n              // blockToEnd={publicIfoData.endTimestamp}\n            />\n          </>\n        )}\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\n        <div style={{ marginTop: '20px' }}>\n          <Box mb=\"24px\">\n            <Item>\n              <Display fontSize=\"14px\" bold>\n                {t('Launch Time')}\n              </Display>\n              <Text fontSize=\"14px\" bold>\n                {launchDate},\n                <Link\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                  ml=\"4px\"\n                  style={{ display: 'inline' }}\n                  color=\"text\"\n                  fontSize=\"14px\"\n                >\n                  {launchTime}\n                </Link>\n              </Text>\n            </Item>\n            <Item>\n              <Display fontSize=\"14px\" bold>\n                {t('For Sale')}\n              </Display>\n              <Text fontSize=\"14px\" bold>\n                {saleAmount}\n              </Text>\n            </Item>\n            <Item>\n              <Display fontSize=\"14px\" bold>\n                {t('To raise (USD)')}\n              </Display>\n              <Text fontSize=\"14px\" bold>\n                {raiseAmount}\n              </Text>\n            </Item>\n            <Item>\n              <Display fontSize=\"14px\" bold>\n                {t('Total raised (% of target)')}\n              </Display>\n              <Text fontSize=\"14px\" bold>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n            </Item>\n            {maxDepositAmount > 0 && (\n              <Item>\n                <Display fontSize=\"14px\" bold>\n                  {t('Max deposit amount')}\n                </Display>\n                <Text fontSize=\"14px\" bold>{`${maxDepositAmount.toFixed(2)} ${currency}`}</Text>\n              </Item>\n            )}\n          </Box>\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </div>\n      </CardBody>\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from 'archerswap-uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  align-items: start;\n  border-top: 2px solid #e9e9e9;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, Card } from 'archerswap-uikit'\nimport { ifosConfig } from 'config/constants'\nimport { useTranslation } from 'contexts/Localization'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid #e9e9e9;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-top: 17px;\n  margin-bottom: 30px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 105.5%;\n`\n\nconst GuideCard = styled.div`\n  background: transparent;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 491px;\n  max-height: 570px;\n  border-radius: 20px;\n  padding: 30px 91px 49px 50px;\n\n  @media (max-width: 768px) {\n    padding: 12px;\n  }\n`\nconst CardContainer = styled.div`\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\n  border-radius: 16px;\n`\n\nconst StyledTitle = styled(Title)`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 24px;\n`\n\nconst StyledHeading = styled(Heading)`\n  font-size: 17px;\n  margin-bottom: 20px;\n`\n\nconst Description = styled.span`\n  margin-left: 5px;\n  display: inline-block;\n  font-size: 17px;\n`\n\nconst Airplane = styled(Card)`\n  max-width: 488px;\n  height: 211px;\n  background-image: url('/images/ifo-airplane.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-top: 30px;\n  margin-bottom: 20px;\n\n  @media (max-width: 768px) {\n    height: 200px;\n    padding-top: 50px;\n  }\n`\n\n// const Frame = styled(Card)`\n//   width: 100px;\n//   height: 71px;\n//   background-image: url('/images/ifo-frame.svg');\n//   background-repeat: no-repeat;\n//   background-position: center;\n//   position: absolute;\n//   top: 96px;\n//   right: 42px;\n\n//   @media (max-width: 768px) {\n//     top: 110px;\n//     transform: scale(0.7);\n//   }\n// `\n\n// const ZIndexImage = styled(Image)`\n//   z-index: 1000;\n\n//   @media (max-width: 768px) {\n//     width: 300px;\n//   }\n// `\n\nconst LaunchCard = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 491px;\n  max-height: 335px;\n  border-radius: 20px;\n  padding: 30px 91px 49px 50px;\n\n  @media (max-width: 768px) {\n    padding: 12px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const { t } = useTranslation()\n\n  if (!activeIfo) {\n    return <></>\n  }\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <GuideCard>\n          <StyledTitle as=\"h2\">{t('How to take part')}</StyledTitle>\n          <StyledHeading as=\"h1\">{t('Before Sale')}:</StyledHeading>\n          <List>\n            <Description>{t('Purchase WCORE Tokens')}</Description>\n          </List>\n          <StyledHeading as=\"h1\">{t('For private sale')}:</StyledHeading>\n          <List>\n            <Description>{t('Optional: You have to be whitelisted')}</Description>\n          </List>\n          <StyledHeading>{t('During Sale')}:</StyledHeading>\n          <List>\n            <Description>{t('While The Sale Is Live, Commit Your WCORE')}</Description>\n          </List>\n          <StyledHeading>{t('After Sale')}:</StyledHeading>\n          <List>\n            <Description style={{ marginBottom: '20px' }}>\n              {t('Claim the tokens you bought, along with any unspent funds.')}\n            </Description>\n          </List>\n          <Text as=\"div\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.archerswap.finance/products-and-features-guide/token-sales\"\n              external\n            >\n              {t('Read More')}\n            </Button>\n          </Text>\n        </GuideCard>\n        <CardContainer>\n          <Airplane />\n          <LaunchCard>\n            <StyledTitle as=\"h2\">{t('Want to launch your own Token Sale?')}</StyledTitle>\n            <Text mb={4} fontSize=\"17px\">\n              {t(\n                'Launch your project with ArcherSwap, Core Chain’s the best AMM+NFT DEX to bring your token directly to the most active and rapidly growing community on Core Chain.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSffYIbIQYYjr52AeRolVPcNNTF6vIjS3qTUACa9UpbIlFVp7w/viewform\"\n              external\n            >\n              {t('Apply to launch')}\n            </Button>\n          </LaunchCard>\n        </CardContainer>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\nimport { useTranslation } from 'contexts/Localization'\nimport IfoTabButtons from './components/IfoTabButtons'\n// import Hero from './components/Hero'\nimport Banner from '../../components/Banner'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Background = styled.div`\n  width: 100%;\n`\n\nconst StyledContainer = styled(Container)`\n  max-width: 1034px;\n`\n\nconst Ifos = () => {\n  const { t } = useTranslation()\n  const { path } = useRouteMatch()\n\n  return (\n    <Background>\n      <Banner\n        src=\"/images/assets/banners/ifo_banner.png\"\n        mobileSrc=\"/images/assets/banners/mobile_ifo_banner.png\"\n        alt=\"IDO_banner\"\n        title=\"BowPad\"\n        text={t('Buy new tokens with a brand new token sale model.')}\n      />\n      <StyledContainer>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </StyledContainer>\n    </Background>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}