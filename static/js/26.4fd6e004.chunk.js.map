{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","Promise","all","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","initialState","approvalState","isWhitelisted","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onWhitelisted","onConfirm","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","handleWhitelist","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","pancakeRabbitsContract","getPancakeRabbitContract","isLoading","nfts","lastUpdated","Date","now","action","data","timestamp","useGetWalletNfts","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","refresh","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","t","useTranslation","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","isInitialized","currentStep","teamId","userName","minimumCakeRequired","MINT_COST","multipliedBy","totalCost","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","map","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","getBowAddress","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","StyledApprovConfirmButtons","mediaQueries","md","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","undefined","useProfileCreation","nftList","filter","nft","includes","minimumCakeBalanceToMint","Mint","setBunnyId","useBow","useBunnyFactory","hasMinimumCakeRequired","options","response","currentAllowance","toJSON","mintNFT","num","images","parseInt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","library","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/26.4fd6e004.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getBowContract, getFactoryContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nexport const useETHBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useWcoreBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.allowance(account, targetAddress).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && targetAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\n\n  return allowance\n}\n\nexport const useApprove = () => {\n  const [approvePending, setApprovePending] = useState(false)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(\n    async (targetAddress: string, contractAddress: string) => {\n      try {\n        setApprovePending(true)\n        const contract = getBep20Contract(contractAddress, web3)\n        const tx = await contract.methods\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\n          .send({ from: account })\n        setApprovePending(false)\n        return tx\n      } catch (e) {\n        setApprovePending(false)\n        return false\n      }\n    },\n    [web3, account],\n  )\n\n  return { onApprove: handleApprove, approvePending }\n}\n\nexport const useTokenSymbol = (tokenAddress: string) => {\n  const [symbol, setSymbol] = useState('')\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.symbol().call()\n      setSymbol(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return symbol\n}\n\nexport const useTokenDecimal = (tokenAddress: string) => {\n  const [decimal, setDecimal] = useState(0)\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.decimals().call()\n      setDecimal(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return decimal\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = getWeb3NoAccountFromChain(chainId)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && chainId) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const bowContract = getBowContract()\n      const supply = await bowContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useCirculatingBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const bowContract = getBowContract()\n      const [tRes, res0, res1, res2] = await Promise.all([\n        bowContract.methods.totalSupply().call(),\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\n      ])\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\n    }\n\n    fetchBalance()\n  }, [web3, fastRefresh])\n\n  return balance\n}\n\nexport const usePairsLength = () => {\n  const [pairsLength, setPairsLength] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchPairsLength = async () => {\n      const contract = getFactoryContract(web3)\n      const res = await contract.methods.allPairsLength().call()\n      setPairsLength(res)\n    }\n\n    fetchPairsLength()\n  }, [web3, slowRefresh])\n\n  return pairsLength\n}\n\nexport default useTokenBalance\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'requires_whitelist'; payload: boolean }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  isWhitelisted: boolean\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  isWhitelisted: false,\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'requires_whitelist':\n      return {\n        ...state,\n        isWhitelisted: actions.payload,\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onWhitelisted?: ContractHandler\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onWhitelisted,\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const handleWhitelist = useRef(onWhitelisted)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n      handleWhitelist.current().then((result) => {\n        dispatch({ type: 'requires_whitelist', payload: result })\n      })\n    }\n  }, [account, handleWhitelist, handlePreApprove, dispatch])\n\n  return {\n    isWhitelisted: state.isWhitelisted,\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n  lastUpdated: number\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n  lastUpdated: Date.now(),\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'refresh':\n      return {\n        ...initialState,\n        lastUpdated: action.timestamp,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n  const { lastUpdated } = state\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          let nfts: NftMap = {}\n\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, lastUpdated, dispatch])\n\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\n\n  return { ...state, refresh }\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from 'archerswap-uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from 'archerswap-uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from 'archerswap-uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t(`Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t(`A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getBowAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getBowAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from 'archerswap-uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from 'archerswap-uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApprovConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledApprovConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? t('Approving') : t('Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm')}\n        </Button>\n      </Box>\n    </StyledApprovConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useBow, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const bowContract = useBow()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await bowContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return bowContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t(`Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t(`Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t(`A minimum of ${MINT_COST} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from 'archerswap-uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport nftList from 'config/constants/nfts'\nimport { useTranslation } from 'contexts/Localization'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const { t } = useTranslation()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t(`Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {t('Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from 'archerswap-uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\ninterface Team {\n  name: string\n  description: string\n  isJoinable: boolean\n}\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t(`Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from 'archerswap-uikit'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBow, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useDispatch()\n  const { toastSuccess } = useToast()\n  const bowContract = useBow()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await bowContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return bowContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t(`${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t(\"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\")}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from 'archerswap-uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  height: 24px;\n  position: absolute;\n  right: 0px;\n  width: 24px;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n    height: 48px;\n    width: 48px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  height: 64px;\n  position: relative;\n  width: 64px;\n\n  & > img {\n    border-radius: 50%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n// TODO: replace with no provile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from 'archerswap-uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useBow } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/hooks'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const bowContract = useBow()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await bowContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, bowContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <ProfileAvatar profile={profile} />\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t(`${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useDispatch } from 'react-redux'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(`Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const { t } = useTranslation()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBow } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const bowContract = useBow()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    bowContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{t(`${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const { label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from 'archerswap-uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {t(\"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from 'archerswap-uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from 'archerswap-uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t(`${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from 'archerswap-uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useDispatch } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from 'archerswap-uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">{t(`${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from 'archerswap-uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'archerswap-uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from 'archerswap-uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {t('Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the ArcherSwap platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t(\"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\")}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from 'archerswap-uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <ProfileAvatar profile={profile} />\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://scan.coredao.org/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}