{"version":3,"sources":["state/lists/actions.ts","constants/index.ts","config/constants/farms.ts","config/constants/types.ts","config/localization/languages.ts","state/user/actions.ts","hooks/useEagerConnect.ts","views/Hunt/components/HuntViewTabButtons/index.tsx","views/Hunt/components/PriceAndSupply/index.tsx","views/Hunt/components/Overview/AboutHuntToken/index.tsx","views/Hunt/components/Overview/HuntTokenDetails/index.tsx","views/Hunt/components/Overview/HuntTokenExtraDetails/index.tsx","views/Hunt/components/Overview/index.tsx","views/Hunt/components/Dashboard/BuyHunt/index.tsx","hooks/useHunterData.ts","hooks/useTracker.ts","views/Hunt/components/Dashboard/SatsCard/index.tsx","views/Hunt/components/Dashboard/index.tsx","views/Hunt/HuntView.tsx","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/xbow/StakeModal.tsx","views/Pools/components/xbow/UnstakeModal.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","utils/retry.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/updater.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","Providers.tsx","i18n.ts","index.tsx","hooks/useTheme.ts","state/teams/index.tsx","constants/lists.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","connectors/NetworkConnector.ts","connectors/index.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/index.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/transactions/actions.ts","apollo/client.js","apollo/queries.js","state/toasts/index.ts","hooks/useBowInfo.ts","components/layout/Page.tsx","components/UnlockButton.tsx","hooks/useAuth.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/vaults/fetchVaults.ts","state/vaults/fetchVaultUser.ts","state/vaults/index.ts","config/constants/teams.ts","state/application/hooks.ts","utils/getRpcUrl.ts","state/teams/helpers.ts","config/constants/campaigns.ts","utils/web3React.ts","hooks/useDebounce.ts","state/mint/actions.ts","utils/makeBatchRequest.ts","components/Banner/index.tsx","hooks/useApprove.ts","utils/wallet.ts","components/ModalInput/ModalInput.tsx","config/constants/ifo.ts","state/allTimeVolume/index.ts","state/oneDayVolume/index.ts","state/block/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","state/prices/index.ts","contexts/ThemeContext.tsx","utils/uriToHttp.ts","components/Tags.tsx","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","constants/multicall/index.ts","hooks/useContract.ts","utils/multicall.ts","state/burn/actions.ts","utils/achievements.ts","utils/index.ts","utils/parseENSAddress.ts","config/constants/index.ts","constants/abis/erc20.ts","hooks/useHarvest.ts","utils/contenthashToUri.ts","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/layout/Container.tsx","utils/contractHelpers.ts","components/PageLoader.tsx","hooks/useAllowance.ts","components/layout/Flex.tsx","utils/apy.ts","config/constants/tokens.ts","state/actions.ts","utils/callHelpers.ts","hooks/useWeb3.ts","state/swap/actions.ts","hooks/useGasBoost.ts","hooks/useInterval.ts","utils/theme.ts","state/hooks.ts","utils/formatBalance.ts","config/constants/vaults.ts","hooks/index.ts","hooks/useRefresh.ts","config/constants/pools.ts","state/application/actions.ts","utils/web3.ts","state/multicall/actions.ts"],"names":["fetchTokenList","pending","createAction","fulfilled","rejected","acceptListUpdate","addList","removeList","selectList","ROUTER_ADDRESS","DAI","Token","ChainId","MAINNET","USDT","USDC","ETH","WETH_ONLY","WETH","BSCTESTNET","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","Percent","JSBI","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","SWAP_MINING_ADDRESS","farms","pid","lpSymbol","lpAddresses","1115","1116","token","tokens","bow","quoteToken","wcore","usdt","hunt","eth","usdc","fourToken","PoolCategory","EN","locale","language","code","languages","languageList","Object","values","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","useEagerConnect","login","useAuth","useEffect","connectorId","window","localStorage","getItem","connectorLocalStorageKey","HuntViewTabButtons","useRouteMatch","url","isExact","t","useTranslation","Wrapper","activeIndex","scale","variant","as","Link","to","style","borderRadius","width","height","fontWeight","marginLeft","styled","div","theme","mediaQueries","sm","PriceAndSupply","price","usePriceHunterUsd","StyledContainer","color","src","alt","toNumber","toFixed","Container","StyledCard","Card","isDark","StyledCardBody","CardBody","md","CardContent","StyledImage","img","AboutHuntToken","size","mb","bold","href","Divider","GridItem","HuntTokenDetails","Grid","container","spacing","item","xs","small","getHunterAddress","rel","target","display","substring","lg","maxWidth","StyledGrid","HuntTokenExtraDetails","Overview","StyledButtonContainer","StyledMessage","BuyHunt","useTheme","border","gap","padding","useHunterData","account","useWeb3React","fastRefresh","useRefresh","useState","BigNumber","balance","setBalance","claimableCore","setClaimableCore","claimedCore","setClaimedCore","a","calls","push","address","name","params","multicall","hunterABI","data","toString","fetch","useTracker","slowRefresh","totalDividendsDistributed","setTotalDividendsDistributed","totalDividendsWithdrawn","setTotalDividendsWithdrawn","getTrackerAddress","trackerABI","StyledValue","SatsCard","setPending","contract","useHunter","handleClaim","useCallback","methods","claim","send","from","tx","handleCompound","compound","useHunterCallback","fontSize","getBalanceNumber","toLocaleString","maximumFractionDigits","onClick","disabled","lte","UnlockButton","Dashboard","Background","HuntView","path","Banner","mobileSrc","title","text","Page","exact","useGetDocumentTitlePrice","document","GlobalStyle","createGlobalStyle","colors","background","card","config","label","icon","items","tag","Menu","props","logout","toggleTheme","bowPriceUsd","usePriceBowUsd","profile","useProfile","currentLanguage","setLanguage","currentLang","langs","setLang","cakePriceUsd","links","username","image","nft","images","undefined","profileLink","noProfileLink","showPip","SuspenseWithChunkError","state","hasError","error","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","fallback","React","Component","ToastListener","toasts","useSelector","remove","useToast","onRemove","id","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","StyledLabel","isFinished","Label","StyledText","Text","isDisabled","textDisabled","Balance","value","decimals","unit","previousValue","useRef","current","start","end","duration","separator","defaultProps","TokenInput","max","symbol","onChange","onSelectMax","justifyContent","minHeight","alignItems","placeholder","mx","DepositModal","onConfirm","onDismiss","tokenName","stakingTokenDecimals","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","ModalActions","Number","WithdrawModal","CardTitle","isActive","StyledButton","button","StyledLink","StyledExternalLink","Button","buttonSize","buttonPadding","children","useContext","ThemeContext","buttonColor","ButtonChild","boxShadow","tags","CORE","CoreTag","COMMUNITY","CommunityTag","StyledFooter","StyledDetailsButton","Details","Row","Flex","FlexFull","TokenLink","primary","CardFooter","projectLink","tokenAddress","totalStaked","tokenDecimals","startTime","endTime","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","currentTimestamp","Math","floor","Date","getTime","blocksRemaining","imageSrc","BASE_URL","toLowerCase","registerToken","ml","StyledUnlockButton","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","sousId","stakingToken","earningToken","harvest","userData","stakingLimit","isCorePool","stakingTokenContract","useERC20","getAddress","onApprove","useSousApprove","onStake","useSousStake","onUnstake","useSousUnstake","onReward","useSousHarvest","rewardTokenPrice","useGetApiPrice","stakingTokenPrice","apy","getPoolApy","parseFloat","tokenPerSecond","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","console","includes","poolName","paddingBottom","marginBottom","flex","HarvestButton","asset","eq","PoolTabButtons","stackedOnly","setStackedOnly","ToggleWrapper","checked","StakeModal","ModalInput","addLiquidityUrl","inputTitle","UnstakeModal","deadline","isXBOW","margin","marginTop","CardContainer","Flower","XbowCallout","BaseLayout","LeftStyledCard","BowCard","UnstakeButton","InfoSection","ButtonSection","CircleWrapper","LabelWrapper","ClaimWrapper","AmountWrapper","Farm","pools","usePools","update","setUpdate","timestamp","setTimestamp","useXbowApprove","useXbowAllowance","useBowInfo","totalLockedBow","xbowRatio","delayToWithdraw","bowPrice","useUserInfo","bowBalance","xbowBalance","claimableAmount","stakedTime","useXbowStake","useXbowUnstake","oneDayVolume","useOneDayVolume","partition","finishedPools","openPools","stackedOnlyPools","filter","onPresentStake","onPresentUnstake","maintainAspectRatio","responsive","datasets","backgroundColor","whiteSpace","textAlign","options","legend","position","elements","arc","borderWidth","cutoutPercentage","toFormat","times","isZero","oneDayVolumeUSD","gt","orderBy","map","bunnySpecialContract","getBunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","call","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","some","status","createBrowserHistory","bullNft","nftList","find","bunnyId","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Disperse","Bridge","Farms","Vaults","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","Dice","TradingComp","Marketplace","CollectionDetail","NftDetail","MyNfts","AddLiquidity","RemoveLiquidity","Pool","PoolFinder","Swap","Zapin","RedirectOldRemoveLiquidityPathStructure","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","EXPONENTIAL_AT","DECIMAL_PLACES","PresaleAlert","AppWrapper","BodyWrapper","BodyWrapperEffect","Marginer","App","chainId","deactivate","warn","useFetchPublicData","useFetchProfile","useFetchPriceList","process","presaleAlertEnabled","setPresaleAlertEnabled","setTimeout","Global","PageLoader","component","strict","iterations","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","addEventListener","removeEventListener","web3","getWeb3NoAccount","Updater","useActiveWeb3React","dispatch","useDispatch","windowVisible","blockNumber","setState","blockNumberCallback","s","getBlockNumber","then","catch","log","debouncedState","useDebounce","updateBlockNumber","library","lists","byUrl","fetchList","useFetchListCallback","fetchAllListsCallback","keys","forEach","useInterval","listUrl","list","loadingRequestId","pendingUpdate","bump","getVersionUpgrade","version","VersionUpgrade","NONE","Error","PATCH","MINOR","minVersionBump","addPopup","key","content","listUpdate","oldList","newList","auto","MAJOR","removeAfterMs","waitRandom","min","ms","round","random","Promise","resolve","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","aggregate","obj","callData","resultsBlockNumber","returnData","info","results","debouncedListeners","callListeners","latestBlockNumber","useBlockNumber","useMulticallContract","cancellations","listeningKeys","allListeners","listeners","reduce","callKey","keyListeners","blocksPerFetch","parseInt","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","JSON","stringify","sort","outdatedCallKeys","parse","length","parseCallKey","chunkedCalls","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","slice","chunkArray","c","fetchingMulticallResults","index","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","result","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","updateMulticallResults","i","errorFetchingMulticallResults","lastBlockNumber","transactions","useAddPopup","hash","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","addedTime","shouldCheck","getTransactionReceipt","finalizeTransaction","blockHash","contractAddress","transactionHash","transactionIndex","txn","success","summary","checkedTransaction","createReducer","popupList","walletModalOpen","settingsMenuOpen","builder","addCase","action","payload","toggleWalletModal","toggleSettingsMenu","popup","concat","nanoid","removePopup","p","updateVersion","pairKey","token0Address","token1Address","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","pairs","audioPlay","lastUpdateVersionTimestamp","serializedToken","serializedPair","token0","token1","tokenAAddress","tokenBAddress","now","addTransaction","approval","txs","clearAllTransactions","confirmedTime","independentField","Field","INPUT","typedValue","currencyId","OUTPUT","replaceSwapState","recipient","field","inputCurrencyId","outputCurrencyId","selectCurrency","otherField","switchCurrencies","typeInput","setRecipient","CURRENCY_A","otherTypedValue","resetMintState","noLiquidity","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","DEFAULT_TOKEN_LIST_URL","DEFAULT_LIST","selectedListUrl","requestId","tokenList","errorMessage","lastInitializedSet","l","add","Set","newListOfListsSet","has","LIQUIDITY_PERCENT","addMulticallListeners","toCallKey","removeMulticallListeners","PERSISTED_KEYS","loadedState","load","states","user","getThemeCache","store","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","vaults","vaultsReducer","prices","pricesReducer","profileReducer","teams","teamsReducer","achievements","achievementsReducer","block","blockReducer","allTimeVolume","allTimeVolumeReducer","oneDayVolumeReducer","application","swap","mint","burn","middleware","getDefaultMiddleware","thunk","serializableCheck","save","preloadedState","Web3ProviderNetwork","createWeb3ReactRoot","Providers","getLibrary","RefreshContext","i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","ethereum","autoRefreshOnNetworkChange","removeItem","ReactDOM","render","StrictMode","getElementById","StyledThemeContext","isInitialized","isLoading","teamsList","accum","team","teamsSlice","createSlice","reducers","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","actions","fetchTeam","teamId","getTeam","fetchTeams","getTeams","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","callsStartTime","poolConfig","callsEndBlock","sousChefABI","starts","ends","bowPoolConfig","toJSON","fetchPoolsTotalStaking","nonCorePools","corePool","callsNonCorePools","callsCorePools","getWcoreAddress","bowABI","nonBnbPoolsTotalStaked","wcoreABI","bnbPoolsTotalStaked","all","masterChefABI","getMasterChefAddress","totalAllocPoint","allocPoint","_hex","poolWeight","poolsWithAllocPoint","masterPools","sousPools","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","fetchUserStakeBalances","masterCalls","masterUserInfo","masterStakedBalances","amount","sousCalls","sousUserInfo","sousStakedBalances","fetchUserPendingRewards","masterRes","masterPendingRewards","sousRes","sousPendingRewards","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakedBalances","pendingRewards","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","RequestError","message","MiniRpcProvider","batchWaitTimeMs","isMetaMask","host","nextId","batchTimeoutId","batch","clearBatch","method","headers","accept","body","request","response","ok","statusText","json","byKey","sendAsync","callback","jsonrpc","parsed","URL","NetworkConnector","urls","defaultChainId","invariant","supportedChainIds","k","providers","currentChainId","accumulator","provider","AbstractConnector","NETWORK_URL","NETWORK_CHAIN_ID","networkLibrary","network","getNetworkLibrary","Web3Provider","injected","InjectedConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","WalletLinkConnector","appName","appLogoUrl","ConnectorNames","Injected","WalletConnect","StyledSpacer","Spacer","StyledModalActions","primaryDark","StyledModalAction","Children","toArray","child","transformProfileResponse","profileResponse","userId","numberPoints","nftAddress","tokenId","points","profileContract","getProfileContract","rabbitContract","getPancakeRabbitContract","profileApi","REACT_APP_API_PROFILE","getUsername","getProfile","hasRegistered","getUserProfile","getBunnyId","nfts","nftItem","Cookies","set","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","fetchProfile","BOW_PER_BLOCK","SECONDS_PER_YEAR","VAULTS_DISTRIBUTION_PERCENTAGE","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","START_TIMESTAMP","getBowAddress","getMultiAddress","addresses","getMulticallAddress","getLotteryAddress","lotteryType","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getXbowAddress","getFactoryAddress","getNftMarketplaceAddress","getHunterCoreLPAddress","getKyudoNftAddress","bowClient","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","shouldBatch","blockClient","marketplaceClient","factoryQuery","gql","tokensQuery","allTimeVolumeQuery","PAIR_DAY_DATA_BULK","pairList","yesterday","pairString","pair","queryString","TOTAL_VOLUME_DATA","toLocaleLowerCase","GET_BLOCKS","timestamps","getERC721CollectionsQuery","getERC721CollectionQuery","alias","getERC721CollectionAttributesQuery","getERC721TokenCountQuery","getERC721TokensQuery","ERC721RecentEventsLiteQuery","getERC721TokenQuery","ERC721TokenEventsQuery","toastsSlice","toastIndex","toast","splice","unshift","clear","setBowBalance","setXbowBalance","setClaimableAmount","setStakedTime","xbowContract","useXbow","bowContract","balanceOf","BOWBalance","res0","res1","res2","res3","fetchInfo","gasBoostedPrice","useGasBoost","xbowStake","txHash","xbowUnstake","setTotalLockedBow","setXbowRatio","setDelayToWithdraw","xBOWForBOW","onPresentConnectModal","useWalletModal","activate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","Nfts","fetchFarms","farmsConfig","farm","query","fetchPolicy","pairDayDatas","farmConfig","lpAddress","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","lpTotalInQuoteToken","tokenAmount","quoteTokenAmount","masterchefABI","rewardPerSecond","pairData","pairAddress","feeApr","dailyVolumeUSD","reserveUSD","tokenPriceVsQuote","multiplier","fetchFarmUserAllowances","masterChefAdress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","f","setFarmUserData","arrayOfUserDataObjects","userDataEl","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","fetchVaults","vaultsConfig","vaultConfig","masterchefAddress","stratxAddress","tokenBalanceMC","archerswapVaultABI","vaultAddresses","vaultBalance","lpTokenMcRatio","lpTotalMcInQuoteToken","fetchVaultUserAllowances","vault","lpContractAddress","isSingle","vaultAddress","fetchVaultUserTokenBalances","fetchVaultUserStakedBalances","call1","shareBalances","call2","pricePerFullShares","depositBalances","idx","fetchVaultUserEarnings","vaultsSlice","setVaultsPublicData","liveVaultsData","liveVaultData","setVaultUserData","fetchVaultsPublicDataAsync","fetchVaultUserDataAsync","userVaultAllowances","userVaultTokenBalances","userVaultEarnings","vaultAllowance","description","ipfs","textColor","users","nodes","rpcs","1","56","137","250","getNodeUrlFromChain","getNodeUrl","randomIndex","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","makeBatchRequest","teamData","onChainTeamData","campaigns","type","badge","campaignMap","Map","campaign","rpcUrl","pollingInterval","debouncedValue","setDebouncedValue","handler","clearTimeout","BatchRequest","promises","err","execute","StyledBanner","StyledMobileBanner","BannerContainer","StyledContent","left","white","useApprove","lpContract","masterChefContract","useMasterchef","approve","useApproveVault","archerswapVaultContract","useArcherswapVault","approveVault","sousChefContract","useSousChef","useLotteryApprove","useBow","lotteryContract","useLottery","tokenContract","ethers","constants","MaxUint256","gasPrice","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","tokenSymbol","tokenImage","tokenAdded","StyledTokenInput","input","isWarning","shadows","warning","inset","StyledInput","Input","StyledErrorMessage","isBalanceZero","displayBalance","pl","mr","external","ifos","isPrivate","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","currencyDecimals","releaseTime","campaignId","maxDepositAmount","allTimeVolumeSlice","untrackedVolumeUSD","setAllTimeVolumePublicData","fetchAllTimeVolumePublicDataAsync","variables","uniswapFactories","oneDayVolumeSlice","setOneDayVolumePublicData","splitQuery","localClient","vars","fetchedData","sliced","fetchOneDayVolumePublicDataAsync","utcCurrentTime","dayjs","utcOneDayBack","subtract","unix","blocks","split","number","oneDayResult","totalVolumeUSD","blockSlice","setBlock","_","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","kebabCase","toastTypes","DANGER","createContext","slow","fast","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","fetchPrices","createAsyncThunk","spirit","update_at","pricesSlice","lastUpdated","extraReducers","CACHE_KEY","ThemeContextProvider","isDarkUserSetting","setIsDark","prevState","setItem","dark","light","uriToHttp","substr","match","StyledTag","outline","startIcon","DualTag","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","enLocale","currentLocale","fetchInitialLocales","translate","translatedText","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","MULTICALL_NETWORKS","useIfoContract","useWeb3","getIfoContract","getBep20Contract","useWcore","getWcoreContract","getBowContract","useBunnyFactory","getBunnyFactoryContract","usePancakeRabbits","getLotteryContract","getMasterchefContract","useMuti","getMutiContract","useAnyswapV5","routerAddress","getAnyswapV5RouterContract","useArcherswapStrategy","strategyAddress","getArcherswapStrategyContract","getArcherswapVaultContract","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","getXbowContract","useERC721","getErc721Contract","useMarketplace","getNftMarketplaceContract","getHunterContract","useKyudoNft","getKyudoNftContract","useContract","ABI","withSignerIfPossible","getContract","useTokenContract","ERC20_ABI","useZapContract","zapAddress","CREATE_LP_ABI","useLpTokenFromSymbol","lpTokens","archerswap","LP_TOKEN_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","IUniswapV2PairABI","MULTICALL_ABI","useSwapMiningContract","SWAP_MINING_ABI","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","res","decodeFunctionResult","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","isAddress","SCAN_PREFIXES","getSnowtraceLink","prefix","shortenAddress","chars","calculateGasMargin","mul","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","ETHER","Boolean","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensName","ensPath","communityFarms","isCommunity","communityVaults","ERC20_INTERFACE","useHarvest","farmPid","useAllHarvest","farmPids","harvestPromises","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","useVaultHarvest","archerswapStrategyContract","harvestVault","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","defaultTokenJson","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","ensRegistrarContract","namehash","resolver","ensResolver","handleStake","stake","sousStakeBnb","sousStake","useStakeVault","vaultInfo","v","stakeVault","isEqualTo","useStake","unstake","sousUnstake","useUnstakeVault","unstakeVault","useUnstake","web3NoAccount","bep20Abi","ifoAbi","sousChefBnb","sousChef","pointCenterIfo","bowAbi","profileABI","pancakeRabbitsAbi","bunnyFactoryAbi","bunnySpecialAbi","lotteryAbi","lotteryCoreAbi","getLotteryTicketContract","lotteryTicketAbi","masterChef","anyswapV5Router","archerswapStrategy","archerswapVault","claimRefundAbi","xbowAbi","getFactoryContract","factoryAbi","erc721Abi","nftMarketplaceAbi","nftABI","useLotteryAllowance","setAllowance","fetchAllowance","useIfoAllowance","spenderAddress","dependency","FlexLayout","xl","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApy","bowPriceUSD","poolLiquidityUsd","getVaultApy","rewardPriceUSD","_apy","r","core","xbow","deposit","integerValue","ROUND_FLOOR","on","withdraw","emergencyWithdraw","isCORE","depositAll","depositBNB","withdrawAll","withdrawAllBNB","getPricePerFullShare","pricePerFullShareWei","shares","withdrawBNB","buyTickets","lotteryId","ticketAmount","ticketPrice","ticketNumbers","batchBuyLottoTicket","claimReward","ticketIds","batchClaimRewards","enter","leave","refEth","Web3","setweb3","setGasBoostedPrice","isGasBoostEnabled","getGasPrice","web3GasPrice","fetchWeb3GasPrice","leading","savedCallback","tick","rawCache","setThemeCache","ZERO","useFarms","useFarmFromPid","useFarmFromSymbol","useFarmUser","useValuts","useVaultFromSymbol","useVaultUser","useVaultFromPid","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","removeToast","clearToast","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","useGetApiPrices","useBlock","usePriceCoreUsd","corePriceUSD","ethPriceUSD","usePriceEthUsd","huntPriceUSD","fourTokenPriceUSD","usePrice4TokenUsd","dai","busd","weth","priceInCore","setPriceInCore","LpAbi","reserve0","reserve1","dividedBy","getBalanceBigNumber","getMultifyBigNumber","context","useWeb3ReactCore","contextNetwork","active","sortOrder","depositFee","RPC_URL","getRpcUrl","httpProvider","HttpProvider","timeout","getWeb3NoAccountFromChain","httpProviderFromChain","ADDRESS_REGEX","LOWER_HEX_REGEX","test","pcs"],"mappings":"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","file":"static/js/main.aaacad6c.chunk.js","sourcesContent":["import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected')\n}\n\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\nexport const selectList = createAction<string>('lists/selectList')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { ChainId, JSBI, Percent, Token, WETH } from 'archerswap-sdk'\n\nexport const ROUTER_ADDRESS = '0x74f56a7560ef0c72cf6d677e3f5f51c2d579ff15'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(\n  ChainId.MAINNET,\n  '0x6De33698e9e9b787e09d3Bd7771ef63557E148bb',\n  18,\n  'DAI.e',\n  'Dai Stablecoin'\n)\nexport const USDT = new Token(ChainId.MAINNET, '0x3795C36e7D12A8c252A20C5a7B455f7c57b60283', 6, 'USDT', 'Tether USD')\nexport const USDC = new Token(ChainId.MAINNET, '0x6a2d262D56735DbA19Dd70682B39F6bE9a931D98', 6, 'USDC', 'USD Coin')\nexport const ETH = new Token(ChainId.MAINNET, '0x81ECac0D6Be0550A00FF064a4f9dd2400585FE9c', 18, 'ETH', 'Ether')\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDT, USDC, ETH],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDT],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDT],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [USDC, USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n\nexport const SWAP_MINING_ADDRESS = '0x7bf76646fbe70b13b72b0b46284f747eec5d0181'\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 1,\n    lpSymbol: 'BOW-WCORE LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0xBb8502132C87Ee31bE0E2bC1CB8CC69374488261',\n    },\n    token: tokens.bow,\n    quoteToken: tokens.wcore,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BOW-USDT LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0x26601E75074B385594Ea5552F7B1EE5Ad7cF0403',\n    },\n    token: tokens.bow,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'HUNT-CORE LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0x798489bacDDf8A3c5B1C23E7c24833B349F41dED',\n    },\n    token: tokens.wcore,\n    quoteToken: tokens.hunt,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'WCORE-USDT LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0xd24f5b6fA3064022A07c0D5dBE875a0e1AFB4354',\n    },\n    token: tokens.wcore,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'WCORE-WETH LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0x48e0619aF7d6D58A3c01ABB33c94ceFc1d5809a2',\n    },\n    token: tokens.wcore,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'WETH-USDT LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0xf801c524bbC27DDB62190E1d8504640175ef5e18',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'USDT-USDC LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0x859F8fF7882Af9b6De0d15077b2725E25806c5f3',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 10,\n    lpSymbol: '4TOKEN-WCORE LP',\n    lpAddresses: {\n      1115: '',\n      1116: '0x5Ab9f0Ea4fD182a1edC89D379c1F1c5d6B6eF623',\n    },\n    token: tokens.fourToken,\n    quoteToken: tokens.wcore,\n  },\n]\n\nexport default farms\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  isPrivate: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  currencyDecimals: number\n  tokenDecimals: number\n  tokenSymbol: string\n  releaseTime: number\n  campaignId?: string\n  maxDepositAmount?: number\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n}\n\nexport interface Address {\n  1115?: string\n  1116: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface VaultConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  vaultAddresses: Address\n  strategyAddresses: Address\n  stratxAddress?: Address\n  token: Token\n  quoteToken?: Token\n  ftoken?: Token\n  provider?: string\n  multiplier?: string\n  isCommunity?: boolean\n  isSingle?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerSecond: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  depositFee?: number\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n","import { Language } from 'contexts/Localization/types'\n\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'cn' }\n\nexport const languages = {\n  'en-US': EN,\n  'zh-CN': ZHCN,\n}\n\nexport const languageList = Object.values(languages)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance'\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from 'archerswap-uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for Core Chain Wallet. Currently the Core Chain Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst HuntViewTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem\n          as={Link}\n          to={`${url}`}\n          style={{ borderRadius: '30px', width: '125px', height: 50, fontWeight: 500 }}\n        >\n          {t('Overview')}\n        </ButtonMenuItem>\n        <ButtonMenuItem\n          as={Link}\n          to={`${url}/dashboard`}\n          style={{ borderRadius: '30px', width: '125px', height: 50, marginLeft: 0, fontWeight: 500 }}\n        >\n          {t('Dashboard')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default HuntViewTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  /* ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  } */\n`\n","import { Text } from 'archerswap-uikit'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { usePriceHunterUsd } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nconst PriceAndSupply = () => {\n  const { t } = useTranslation()\n  const price = usePriceHunterUsd()\n\n  return (\n    <StyledContainer>\n      <Wrapper>\n        <Text style={{ fontWeight: 400 }} color=\"textSubtle\">\n          {t('Price')}:\n        </Text>\n        <img src=\"/images/assets/hunt/token-icon.png\" alt=\"amount\" />\n        <Text>${price.toNumber().toFixed(4)}</Text>\n      </Wrapper>\n      <Wrapper>\n        <Text style={{ fontWeight: 400 }} color=\"textSubtle\">\n          {t('Supply')}:\n        </Text>\n        <Text>1,000,000.00</Text>\n      </Wrapper>\n    </StyledContainer>\n  )\n}\n\nexport default PriceAndSupply\n\nconst StyledContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 5px;\n`\n","import React from 'react'\nimport { Button, Card, CardBody, Heading, Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nfunction AboutHuntToken() {\n  const { t } = useTranslation()\n\n  return (\n    <Container>\n      <StyledCard>\n        <StyledCardBody>\n          <CardContent>\n            <div>\n              <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n                {t('About $HUNT token')}\n              </Heading>\n              <Text as=\"p\" color=\"textSubtle\">\n                {t('Overview of $HUNT token')}\n              </Text>\n            </div>\n            <Text as=\"p\" color=\"textSubtle\">\n              {t(\n                \"HUNT is a next-generation CORE reward token on the Core Chain ecosystem. 4% of every transaction made with the HUNT tokens, goes back to holders of HUNT in Core Chain rewards. With the recent boom in DeFi, our goal here at ArcherSwap is to make DeFi easy and accessible to everyone. DeFi doesn't have to be difficult, it can be as easy as buying and holding a token to earn passive income.\",\n              )}\n            </Text>\n            <Text as=\"p\" color=\"textSubtle\">\n              <Text as=\"p\" bold>\n                {t('This is how HUNT works')}:\n              </Text>\n              {t(\n                'Simply swap your coins for $HUNT on Core Chain, and HODL it! You could claim and track your rewards from our dashboard.',\n              )}\n            </Text>\n            <a href=\"http://archerswap.finance/ido\">\n              <Button\n                style={{\n                  width: 'max-content',\n                }}\n              >\n                {t('To buy $HUNT, click here')}\n              </Button>\n            </a>\n          </CardContent>\n          <StyledImage src=\"/images/assets/hunt/token-big.svg\" alt=\"\" />\n        </StyledCardBody>\n      </StyledCard>\n    </Container>\n  )\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n`\nexport const StyledCardBody = styled(CardBody)`\n  display: flex;\n  align-items: center;\n  flex-direction: column-reverse;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 50%;\n  }\n`\nexport const StyledImage = styled.img`\n  width: 100%;\n  max-height: 250px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 400px;\n    width: 50%;\n    flex-direction: row;\n  }\n`\n\nexport default AboutHuntToken\n","import React from 'react'\nimport { Card, CardBody, LinkExternal, Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport { Grid } from '@mui/material'\nimport { getHunterAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\n\nfunction HuntTokenDetails() {\n  const { t } = useTranslation()\n\n  return (\n    <Container>\n      <StyledCard>\n        <StyledCardBody>\n          <Grid container spacing={2}>\n            <Grid item xs={6} sm={3} md={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Ticker')}\n                </Text>\n                <Text>HUNT</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={3} sm={3} md={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Max Supply')}\n                </Text>\n                <Text>1,000,000</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={12} sm={5} md={4}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Contract Address')}\n                </Text>\n                <a href={`https://scan.coredao.org/token/${getHunterAddress()}`} rel=\"noreferrer\" target=\"_blank\">\n                  <Text style={{ display: 'flex' }}>\n                    {`${getHunterAddress().substring(0, 7)}...${getHunterAddress().substring(37)}`} <LinkExternal />\n                  </Text>\n                </a>\n              </GridItem>\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container spacing={2}>\n            <Grid item xs={6} md={3} lg={1.5}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 100 }}>\n                  {t('Reflection to holder')}\n                </Text>\n                <Text>4%</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={6} md={3} lg={1.5}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 100 }}>\n                  {t('Treasury')}\n                </Text>\n                <Text>0%</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={6} md={3} lg={1.5}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 100 }}>\n                  {t('Increase Liquidity')}\n                </Text>\n                <Text>0%</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={6} md={3} lg={1.5}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 100 }}>\n                  {t('Max amount per wallet')}\n                </Text>\n                <Text>2%</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 140 }}>\n                  {t('One time max transaction amount')}\n                </Text>\n                <Text>0.49%</Text>\n              </GridItem>\n            </Grid>\n            <Grid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400, maxWidth: 140 }}>\n                  {t('Min token balance for dividend')}\n                </Text>\n                <Text>10</Text>\n              </GridItem>\n            </Grid>\n          </Grid>\n        </StyledCardBody>\n      </StyledCard>\n    </Container>\n  )\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  div {\n    font-weight: bold;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n`\nexport const StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nconst Divider = styled.div`\n  height: 1px;\n  background: ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n  }\n`\n\nconst GridItem = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport default HuntTokenDetails\n","import React from 'react'\nimport { Card, CardBody, Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport { Grid } from '@mui/material'\nimport { useTranslation } from 'contexts/Localization'\n\nfunction HuntTokenExtraDetails() {\n  const { t } = useTranslation()\n\n  return (\n    <Container>\n      <StyledCard>\n        <StyledCardBody>\n          <Grid container spacing={2}>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Public Sale')}\n                </Text>\n                <Text>30%</Text>\n              </GridItem>\n            </StyledGrid>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Whitelist Sale')}\n                </Text>\n                <Text>20%</Text>\n              </GridItem>\n            </StyledGrid>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Initial liquidity')}\n                </Text>\n                <Text>25%</Text>\n              </GridItem>\n            </StyledGrid>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('BOW holders')}\n                </Text>\n                <Text>5%</Text>\n              </GridItem>\n            </StyledGrid>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('DAO Fund')}\n                </Text>\n                <Text>10%</Text>\n              </GridItem>\n            </StyledGrid>\n            <StyledGrid item xs={6} md={3} lg={2}>\n              <GridItem>\n                <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                  {t('Team')}\n                </Text>\n                <Text>10%</Text>\n              </GridItem>\n            </StyledGrid>\n          </Grid>\n        </StyledCardBody>\n      </StyledCard>\n    </Container>\n  )\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  div {\n    font-weight: bold;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n  position: relative;\n`\nexport const StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  /* gap: 20px; */\n`\n\nconst StyledGrid = styled(Grid)`\n  border: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border: 0.5px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n  }\n`\nconst GridItem = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default HuntTokenExtraDetails\n","import React from 'react'\nimport AboutHuntToken from './AboutHuntToken'\nimport HuntTokenDetails from './HuntTokenDetails'\nimport HuntTokenExtraDetails from './HuntTokenExtraDetails'\n\nfunction Overview() {\n  return (\n    <>\n      <AboutHuntToken />\n      <HuntTokenDetails />\n      <HuntTokenExtraDetails />\n    </>\n  )\n}\n\nexport default Overview\n","import React from 'react'\nimport { Button, Card, CardBody, Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\n\nfunction BuyHunt() {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <StyledMessage>\n          <img src=\"/images/assets/hunt/token-icon.png\" alt=\"amount\" />\n          <p>{t('You need an extra 10 HUNT to gain dividends')}</p>\n        </StyledMessage>\n        <StyledButtonContainer>\n          <a href=\"https://archerswap.finance/#/swap?outputCurrency=0x962d45c91e2e4f29ddc96c626976ece600908ba6\">\n            <Button variant=\"secondary\" style={{ border: '1px solid #EAAA08', color: '#EAAA08', gap: 10, height: 60 }}>\n              {t('Buy HUNT')} <img src=\"/images/assets/hunt/token-icon.png\" alt=\"amount\" />\n            </Button>\n          </a>\n          <a\n            href=\"https://dexscreener.com/core/0x798489bacDDf8A3c5B1C23E7c24833B349F41dED\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Button\n              variant=\"secondary\"\n              style={{ gap: 10, padding: 10, height: 60, border: isDark ? '1px solid #29292D' : '1px solid #E5E8EC' }}\n            >\n              {isDark ? (\n                <img src=\"/images/assets/hunt/falcon-icon.svg\" alt=\"amount\" />\n              ) : (\n                <img src=\"/images/assets/hunt/falcon-icon-black.svg\" alt=\"amount\" />\n              )}\n              <Text>{t('Price Chart')}</Text>\n            </Button>\n          </a>\n        </StyledButtonContainer>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  div {\n    font-weight: bold;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n  a {\n    width: 100%;\n  }\n  button {\n    width: 100%;\n  }\n`\nexport const StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 0;\n`\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  gap: 10px;\n`\n\nconst StyledMessage = styled.div`\n  display: flex;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  background: linear-gradient(265.22deg, #ed952e 0%, #f7ce47 100%);\n  border-radius: 9px;\n  color: white;\n`\n\nexport default BuyHunt\n","import { useEffect, useState, useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { getHunterAddress } from 'utils/addressHelpers'\nimport hunterABI from 'config/abi/hunter.json'\nimport useRefresh from './useRefresh'\nimport { useHunter } from './useContract'\n\nexport const useHunterData = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const [claimableCore, setClaimableCore] = useState(new BigNumber(0))\n  const [claimedCore, setClaimedCore] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      const calls = []\n      calls.push({ address: getHunterAddress(), name: 'balanceOf', params: [account] })\n      calls.push({ address: getHunterAddress(), name: 'withdrawableDividendOf', params: [account] })\n      calls.push({ address: getHunterAddress(), name: 'withdrawnDividendOf', params: [account] })\n\n      const data = await multicall(hunterABI, calls)\n\n      setBalance(new BigNumber(data[0][0].toString()))\n      setClaimableCore(new BigNumber(data[1][0].toString()))\n      setClaimedCore(new BigNumber(data[2][0].toString()))\n    }\n\n    if (account) {\n      fetch()\n    } else {\n      setBalance(new BigNumber(0))\n      setClaimableCore(new BigNumber(0))\n      setClaimedCore(new BigNumber(0))\n    }\n  }, [account, fastRefresh])\n\n  return {\n    balance,\n    claimableCore,\n    claimedCore,\n  }\n}\n\nexport const useHunterCallback = () => {\n  const [pending, setPending] = useState(false)\n  const { account } = useWeb3React()\n  const contract = useHunter()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setPending(true)\n      const tx = await contract.methods.claim().send({\n        from: account,\n      })\n      setPending(false)\n      return tx\n    } catch (e) {\n      // console.log(\"Claim had error :>> \", e)\n      setPending(false)\n      return false\n    }\n  }, [account, contract])\n\n  const handleCompound = useCallback(async () => {\n    try {\n      setPending(true)\n      const tx = await contract.methods.compound().send({\n        from: account,\n      })\n      setPending(false)\n      return tx\n    } catch (e) {\n      // console.log(\"Compound had error :>> \", e)\n      setPending(false)\n      return false\n    }\n  }, [account, contract])\n\n  return { handleClaim, handleCompound, pending }\n}\n\nexport default useHunterData\n","import { useEffect, useState } from 'react'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { getTrackerAddress } from 'utils/addressHelpers'\nimport trackerABI from 'config/abi/tracker.json'\nimport useRefresh from './useRefresh'\n\nexport const useTracker = () => {\n  const { slowRefresh } = useRefresh()\n\n  const [totalDividendsDistributed, setTotalDividendsDistributed] = useState(new BigNumber(0))\n  const [totalDividendsWithdrawn, setTotalDividendsWithdrawn] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      const calls = []\n      calls.push({ address: getTrackerAddress(), name: 'totalDividendsDistributed', params: [] })\n      calls.push({ address: getTrackerAddress(), name: 'totalDividendsWithdrawn', params: [] })\n\n      const data = await multicall(trackerABI, calls)\n\n      setTotalDividendsDistributed(new BigNumber(data[0][0].toString()))\n      setTotalDividendsWithdrawn(new BigNumber(data[1][0].toString()))\n    }\n\n    fetch()\n  }, [slowRefresh])\n\n  return {\n    totalDividendsDistributed,\n    totalDividendsWithdrawn,\n  }\n}\n\nexport default useTracker\n","import React from 'react'\nimport { Button, Card, CardBody, Text } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport { Grid } from '@mui/material'\nimport { useWeb3React } from '@web3-react/core'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { useHunterData, useHunterCallback } from 'hooks/useHunterData'\nimport { useTracker } from 'hooks/useTracker'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport UnlockButton from 'components/UnlockButton'\n\nfunction SatsCard() {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n  const { balance, claimableCore, claimedCore } = useHunterData()\n  const { handleClaim, handleCompound, pending } = useHunterCallback()\n  const { totalDividendsDistributed } = useTracker()\n  const { account } = useWeb3React()\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <GridItem>\n              <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                {t('My HUNT Balance')}\n              </Text>\n              <StyledValue>\n                <Text fontSize=\"large\" bold>\n                  {getBalanceNumber(balance).toLocaleString('en-US', {\n                    maximumFractionDigits: 2,\n                  })}{' '}\n                </Text>\n                <Text fontSize=\"large\" bold color=\"textSubtle\">\n                  HUNT\n                </Text>\n              </StyledValue>\n            </GridItem>\n          </Grid>\n          <Grid item xs={6}>\n            <GridItem>\n              <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                {t('Claimable CORE')}\n              </Text>\n              <StyledValue>\n                <Text fontSize=\"large\" bold>\n                  {getBalanceNumber(claimableCore).toLocaleString('en-US', { maximumFractionDigits: 2 })}{' '}\n                </Text>\n                <Text fontSize=\"large\" bold color=\"textSubtle\">\n                  CORE\n                </Text>\n              </StyledValue>\n            </GridItem>\n          </Grid>\n          <Grid item xs={6}>\n            <GridItem>\n              <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                {t('Total Dividends Distributed')}\n              </Text>\n              <StyledValue>\n                <Text fontSize=\"large\" bold>\n                  {getBalanceNumber(totalDividendsDistributed).toLocaleString('en-US', { maximumFractionDigits: 2 })}{' '}\n                </Text>\n                <Text fontSize=\"large\" bold color=\"textSubtle\">\n                  CORE\n                </Text>\n              </StyledValue>\n            </GridItem>\n          </Grid>\n          <Grid item xs={6}>\n            <GridItem>\n              <Text small as=\"p\" color=\"textSubtle\" style={{ fontWeight: 400 }}>\n                {t('Total claimed')}\n              </Text>\n              <StyledValue>\n                <Text fontSize=\"large\" bold>\n                  {getBalanceNumber(claimedCore).toLocaleString('en-US', { maximumFractionDigits: 2 })}{' '}\n                </Text>\n                <Text fontSize=\"large\" bold color=\"textSubtle\">\n                  CORE\n                </Text>\n              </StyledValue>\n            </GridItem>\n          </Grid>\n        </Grid>\n        <StyledButtonContainer>\n          {account ? (\n            <>\n              <Button\n                variant=\"secondary\"\n                style={{ border: isDark ? '1px solid #29292D' : '1px solid #E5E8EC' }}\n                onClick={handleClaim}\n                disabled={pending || claimableCore.lte(0)}\n              >\n                {t('Claim')}\n              </Button>\n              <Button onClick={handleCompound} disabled={pending || claimableCore.lte(0)}>\n                {t('Compound')}\n              </Button>\n            </>\n          ) : (\n            <UnlockButton />\n          )}\n        </StyledButtonContainer>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  div {\n    font-weight: bold;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  button {\n    width: 100%;\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border: 1px solid ${({ theme }) => (theme?.isDark ? '#29292D' : '#E5E8EC')};\n`\nexport const StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nconst GridItem = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledValue = styled.div`\n  display: flex;\n  gap: 5px;\n`\n\nexport default SatsCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport BuyHunt from './BuyHunt'\nimport SatsCard from './SatsCard'\n\nfunction Dashboard() {\n  return (\n    <StyledContainer>\n      <SatsCard />\n      <BuyHunt />\n    </StyledContainer>\n  )\n}\n\nexport default Dashboard\n\nconst StyledContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Page from 'components/layout/Page'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport Banner from '../../components/Banner'\nimport HuntViewTabButtons from './components/HuntViewTabButtons'\nimport PriceAndSupply from './components/PriceAndSupply'\nimport Overview from './components/Overview'\nimport Dashboard from './components/Dashboard'\n\nconst HuntView: React.FC = () => {\n  const { t } = useTranslation()\n  const { path } = useRouteMatch()\n\n  return (\n    <Background>\n      <Banner\n        src=\"/images/assets/banners/hunt_banner.png\"\n        mobileSrc=\"/images/assets/banners/mobile_hunt_banner.png\"\n        alt=\"pool_banner\"\n        title=\"Hunter\"\n        text={t('$HUNT is a next-generation Core reward token on the Core Chain ecosystem.')}\n      />\n\n      <Page>\n        <Container>\n          <HuntViewTabButtons />\n          <PriceAndSupply />\n        </Container>\n        <Route exact path={`${path}`}>\n          <Overview />\n        </Route>\n        <Route exact path={`${path}/dashboard`}>\n          <Dashboard />\n        </Route>\n      </Page>\n    </Background>\n  )\n}\nconst Background = styled.div`\n  // width: 100%;\n  // background-image: url('/images/assets/bg4.svg');\n  // background-repeat: no-repeat;\n  // background-position: top right;\n`\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n  flex-direction: column-reverse;\n  gap: 20px;\n\n  div {\n    font-weight: bold;\n\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nexport default HuntView\n","import { useEffect } from 'react'\n\nconst useGetDocumentTitlePrice = () => {\n  useEffect(() => {\n    document.title = 'ArcherSwap - Core Chain'\n    // document.title = `ArcherSwap - $${Number(cakePriceUsd).toLocaleString(undefined, {\n    //   minimumFractionDigits: 3,\n    //   maximumFractionDigits: 3,\n    // })}`\n  })\n}\nexport default useGetDocumentTitlePrice\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from 'archerswap-uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    .nft-loader {\n      color: ${({ theme }) => theme.colors.text};\n    }\n\n    .MuiButton-root.Mui-disabled {\n      color: ${({ theme }) => theme.colors.text};\n    }\n\n    .MuiPaper-root {\n      background-color: ${({ theme }) => theme.colors.card};\n      box-shadow: none;\n      .MuiTableContainer-root {\n        p {\n          color: ${({ theme }) => theme.colors.text};\n        }\n        thead {\n          th {\n            background-color: ${({ theme }) => theme.colors.card};\n            color: ${({ theme }) => theme.colors.text};\n          }\n        }\n        tbody {\n          td {\n            color: ${({ theme }) => theme.colors.text};\n          }\n        }\n      }\n\n      .MuiTablePagination-root {\n        color: ${({ theme }) => theme.colors.text};\n        button {\n          ${({ theme }) => theme.colors.text};\n        }\n        svg {\n          fill: ${({ theme }) => theme.colors.text};\n        }\n      }\n\n      li {\n        color: ${({ theme }) => theme.colors.text};\n      }\n    }\n\n    .MuiButtonGroup-root {\n      background-color: ${({ theme }) => theme.colors.background};\n      color: ${({ theme }) => theme.colors.text};\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n\n  .ReactCollapse--collapse {\n    transition: height 500ms;\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from 'archerswap-uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n      // {\n      //   label: 'Zap',\n      //   href: 'https://archerswap.finance/#/zap',\n      // },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Staking'),\n    icon: 'PoolIcon',\n    href: '/xbow',\n  },\n  {\n    label: t('Bridge'),\n    icon: 'BridgeIcon',\n    href: '/bridge',\n  },\n  {\n    label: t('NFT'),\n    icon: 'NftIcon',\n    href: '/nft',\n    tag:'Coming Soon',\n  },\n  {\n    label: 'Token Sales',\n    icon: 'IfoIcon',\n    href: '/iho',\n  },  \n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: 'https://info.archerswap.finance/home',\n    target: '_blank',\n    items: [\n      {\n        label: \"Overview\",\n        href: \"https://info.archerswap.com/home\",\n        target: \"_blank\",\n      },\n      {\n        label: \"Tokens\",\n        href: \"https://info.archerswap.com/tokens\",\n        target: \"_blank\",\n      },\n      {\n        label: \"Pairs\",\n        href: \"https://info.archerswap.com/pairs\",\n        target: \"_blank\",\n      },\n      {\n        label: \"Accounts\",\n        href: \"https://info.archerswap.com/accounts\",\n        target: \"_blank\",\n      },\n    ],\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'Referrals',\n    icon: 'ReferralIcon',\n    href: '/referral',\n  },\n  {\n    label: t('Multisender'),\n    icon: 'DisperseIcon',\n    href: '/disperse',\n  },\n  {\n    label: t('Partnership'),\n    icon: 'PartnerIcon',\n    href: 'https://docs.google.com/forms/d/e/1FAIpQLSffYIbIQYYjr52AeRolVPcNNTF6vIjS3qTUACa9UpbIlFVp7w/viewform',\n    target: '_blank',\n  },\n  {\n    label: t('Audit'),\n    icon: 'AuditIcon',\n    href: 'https://docs.archerswap.finance/products-and-features-guide/audit',\n    target: '_blank',\n  },\n  // {\n  //   label: 'Listing',\n  //   icon: 'ReferralIcon',\n  //   items: [\n  //     {\n  //       label: 'Snowtrace Explorer',\n  //       href: 'https://scan.coredao.org/token/0x695Fa794d59106cEbd40ab5f5cA19F458c723829',\n  //       target: '_blank',\n  //     },\n  //     {\n  //       label: 'DappRadar',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'CoinGecko',\n  //       href: '#',\n  //     },\n  //     {\n  //       label: 'CoinMarketCap',\n  //       href: '#',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Docs'),\n        href: 'https://docs.archerswap.finance',\n        target: '_blank',\n      },\n      {\n        label: t('Medium'),\n        href: 'https://medium.com/@archerswap',\n        target: '_blank',\n      },\n      {\n        label: t('Dexscreener'),\n        href: 'https://dexscreener.com/core/0xbb8502132c87ee31be0e2bc1cb8cc69374488261',\n        target: '_blank',\n      },\n      {\n        label: t('Gecko Terminal'),\n        href: 'https://geckoterminal.com/core/archerswap/pools',\n        target: '_blank',\n      },\n      // {\n      //   label: t('Vote'),\n      //   href: 'https://vote.archerswap.finance/',\n      //   target: '_blank',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceBowUsd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const bowPriceUsd = usePriceBowUsd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={bowPriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from 'archerswap-uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from 'archerswap-uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'textSubtle']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from 'archerswap-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '24px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Box, Button, Flex, Text, Input, InputProps } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Box>\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\n        <Text color=\"primary\" fontSize=\"14px\">\n          {max.toLocaleString()} {symbol} {t('Available')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <Flex alignItems=\"center\">\n          <Text bold color=\"primary\" mx=\"8px\">\n            {symbol}\n          </Text>\n          <div>\n            <Button scale=\"sm\" onClick={onSelectMax}>\n              {t('Max')}\n            </Button>\n          </div>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'archerswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport { useTranslation } from 'contexts/Localization'\nimport TokenInput from '../../../components/TokenInput'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${t('Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !val || val === '0' || Number(fullBalance) < Number(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          variant=\"primary\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'archerswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport { useTranslation } from 'contexts/Localization'\nimport TokenInput from '../../../components/TokenInput'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${t('Unstake')} ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !val || val === '0' || Number(fullBalance) < Number(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => props.theme.card.background};\n  border: 0;\n  border-radius: 8px;\n  color: ${(props) => (!props.disabled ? `#EAAA08` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#EAAA08` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex, MetamaskIcon } from 'archerswap-uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { useBlock } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\nimport { registerToken } from 'utils/wallet'\nimport { BASE_URL } from 'config'\n\nconst tags = {\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startTime: number\n  endTime: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 16px 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.text};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n  color: ${(props) => props.theme.colors.textDisabled};\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startTime,\n  endTime,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = useMemo(() => {\n    const currentTimestamp = Math.floor(new Date().getTime() / 1000)\n    return Math.max(startTime - currentTimestamp, 0)\n  }, [startTime])\n\n  const blocksRemaining = useMemo(() => {\n    const currentTimestamp = Math.floor(new Date().getTime() / 1000)\n    return Math.max(endTime - currentTimestamp, 0)\n  }, [endTime])\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? t('Hide') : t('Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>{t('Total')}</Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{t('Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{t('End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          {tokenAddress && (\n            <Flex mb=\"4px\">\n              <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\n                {t('Add to Metamask')}\n              </TokenLink>\n              <MetamaskIcon height={15} width={15} ml=\"4px\" />\n            </Flex>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {t('View Project Site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from 'archerswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy } from 'utils/apy'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\n// import tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\n// import CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\n// import OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst StyledUnlockButton = styled(UnlockButton)`\n  color: #ffffff;\n  width: 100%;\n  border-radius: 7px;\n`\nconst StyledButton = styled(Button)`\n  color: #ffffff;\n`\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startTime,\n    endTime,\n    isFinished,\n    userData,\n    stakingLimit,\n    // depositFee,\n  } = pool\n\n  // Pools using native CORE behave differently than pools using a token\n  const isCorePool = poolCategory === PoolCategory.CORE\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { account } = useWeb3React()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isCorePool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isCorePool)\n\n  // APY\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol) // Calculate bow\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerSecond),\n  )\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() // && !isCorePool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  // const [onPresentCompound] = useModal(\n  //   <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\n  // )\n  // const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.svg`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  const symbol = useMemo(() => {\n    return [\n      /* 19, 1, 2, 15 */\n    ].includes(sousId)\n      ? stakingToken.symbol\n      : earningToken.symbol\n  }, [stakingToken, earningToken, sousId])\n\n  const poolName = useMemo(() => {\n    if ([8].includes(sousId)) {\n      return `${stakingToken.symbol}/${earningToken.symbol}`\n    }\n    return symbol\n  }, [stakingToken, earningToken, sousId, symbol])\n\n  return (\n    <Card style={{ borderRadius: 16 }} isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px', paddingBottom: 8 }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {poolName} {t('Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/pools/${symbol}.png`} alt={symbol} width={48} height={48} />\n          </div>\n          {account && harvest && (\n            <>\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? t('Collecting') : t('Harvest')}\n                onClick={async () => {\n                  setPendingTx(true)\n                  await onReward()\n                  setPendingTx(false)\n                }}\n              />\n            </>\n          )}\n        </div>\n        <BalanceAndCompound>\n          <Balance color=\"primary\" value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\n          {/* {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? t('Compounding') : t('Compound')}\n                onClick={onPresentCompound}\n              />\n            )} */}\n        </BalanceAndCompound>\n        <Label isFinished={isFinished && sousId !== 0} text={t('%asset% Earned', { asset: earningToken.symbol })} />\n        <StyledCardActions>\n          {!account && <StyledUnlockButton />}\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <StyledButton disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {/* {`Approve ${stakingTokenName}`} */}\n                  {t('Approve Contract')}\n                </StyledButton>\n              </div>\n            ) : (\n              <>\n                <Button disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx} onClick={onPresentWithdraw}>\n                  {t('Unstake %asset%', { asset: stakingToken.symbol })}\n                </Button>\n                <StyledActionSpacer />\n                <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                  <AddIcon color=\"white\" />\n                </IconButton>\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{t('APR')}:</div>\n          {isFinished || !apy ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"16px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        {/* <StyledDetails>\n          <div>{t('Deposit Fee')}:</div>\n          {!depositFee ? (\n            '0%'\n          ) : (\n            <Balance fontSize=\"16px\" isDisabled={isFinished} value={depositFee} decimals={0} unit=\"%\" />\n          )}\n        </StyledDetails> */}\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{t('Your Stake')}:</div>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startTime={startTime}\n        endTime={endTime}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\n        tokenDecimals={earningToken.decimals}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: no-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.colors.textDisabled};\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n  margin-bottom: 8px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\n        <Text> {t('Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: '30px', width: '125px' }}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem\n          as={Link}\n          to={`${url}/history`}\n          style={{ borderRadius: '30px', width: '125px', marginLeft: 0, fontWeight: 500 }}\n        >\n          {t('Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'archerswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface StakeModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string) => void\n  onDismiss?: () => void\n}\n\nconst StakeModal: React.FC<StakeModalProps> = ({ max, onConfirm, onDismiss }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake BOW')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"BOW\"\n        addLiquidityUrl=\"https://archerswap.finance/#/swap\"\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || !val || val === '0' || Number(fullBalance) < Number(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, Text } from 'archerswap-uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface UnstakeModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  deadline?: number\n}\n\nconst UnstakeModal: React.FC<UnstakeModalProps> = ({ onConfirm, onDismiss, max, deadline }) => {\n  const currentTimestamp = Math.floor(new Date().getTime() / 1000)\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake BOW')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol=\"xBOW\"\n        inputTitle={t('Unstake')}\n        isXBOW\n      />\n      {deadline > currentTimestamp && (\n        <Text fontSize=\"14px\" style={{ margin: 'auto', marginTop: '24px' }}>\n          {t('Free withdrawal eligible in:')}{' '}\n          {deadline > 86400\n            ? `${Math.floor((deadline - currentTimestamp) / 86400)} days`\n            : `${Math.floor((deadline - currentTimestamp) / 3600)} hours`}\n        </Text>\n      )}\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !val || val === '0' || Number(fullBalance) < Number(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default UnstakeModal\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Text, Flex, Card, Button, BaseLayout, useModal } from 'archerswap-uikit'\nimport { Doughnut } from 'react-chartjs-2'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePools, usePriceBowUsd, useOneDayVolume } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { useXbowApprove } from 'hooks/useApprove'\nimport { useXbowAllowance } from 'hooks/useAllowance'\nimport useBowInfo, { useUserInfo, useXbowStake, useXbowUnstake } from 'hooks/useBowInfo'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport UnlockButton from 'components/UnlockButton'\nimport Banner from '../../components/Banner'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\nimport StakeModal from './components/xbow/StakeModal'\nimport UnstakeModal from './components/xbow/UnstakeModal'\nimport useTheme from '../../hooks/useTheme'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n\n  const [stackedOnly, setStackedOnly] = useState(false)\n  const [update, setUpdate] = useState(false)\n  const [timestamp, setTimestamp] = useState(0)\n  const { fastRefresh } = useRefresh()\n\n  const onApprove = useXbowApprove()\n  const allowance = useXbowAllowance(update)\n  const { totalLockedBow, xbowRatio, delayToWithdraw } = useBowInfo()\n  const bowPrice = usePriceBowUsd()\n  const { bowBalance, xbowBalance, claimableAmount, stakedTime } = useUserInfo()\n  const { onStake } = useXbowStake()\n  const { onUnstake } = useXbowUnstake()\n  const oneDayVolume = useOneDayVolume()\n  const { isDark } = useTheme()\n\n  useEffect(() => {\n    setTimestamp(Math.floor(new Date().getTime() / 1000))\n  }, [fastRefresh])\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || timestamp > pool.endTime),\n    [timestamp, pools],\n  )\n  const stackedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  const [onPresentStake] = useModal(<StakeModal max={bowBalance} onConfirm={onStake} />)\n  const [onPresentUnstake] = useModal(\n    <UnstakeModal max={xbowBalance} onConfirm={onUnstake} deadline={stakedTime + delayToWithdraw} />,\n  )\n\n  const data = {\n    maintainAspectRatio: false,\n    responsive: false,\n    datasets: [\n      {\n        data: [xbowRatio, 1],\n        backgroundColor: ['#ED952E', '#6F7A9A26'],\n      },\n    ],\n  }\n\n  const options = {\n    legend: {\n      display: false,\n      position: 'right',\n    },\n    elements: {\n      arc: {\n        borderWidth: 0,\n      },\n    },\n    cutoutPercentage: 90,\n  }\n\n  const renderConnectedBtn = () => {\n    return allowance.gt(0) ? (\n      <>\n        <StyledButton onClick={onPresentStake}>\n          <img src=\"/images/assets/xbow/plus.svg\" alt=\"plus\" />\n          {t('Stake')}\n        </StyledButton>\n        <UnstakeButton onClick={onPresentUnstake}>\n          <img src=\"/images/assets/xbow/minus.svg\" alt=\"minus\" />\n          {t('Unstake')}\n        </UnstakeButton>\n      </>\n    ) : (\n      <Button\n        onClick={async () => {\n          await onApprove()\n          setUpdate(!update)\n        }}\n      >\n        {t('Approve')}\n      </Button>\n    )\n  }\n\n  return (\n    <Background>\n      <Banner\n        src=\"/images/assets/banners/xbow_banner.png\"\n        mobileSrc=\"/images/assets/banners/mobile_xbow_banner.png\"\n        alt=\"pool_banner\"\n        title=\"xBOW\"\n        text={t('Stake your BOWs here to earn more!')}\n      />\n\n      <Page>\n        <Container>\n          <Text color=\"bow\" fontSize=\"24px\" style={{ whiteSpace: 'nowrap' }}>\n            Step 1:\n          </Text>\n          <Text fontSize=\"24px\">{t('Stake BOW, Receive xBOW Immediately')}</Text>\n        </Container>\n        <XbowCallout>\n          <CardContainer>\n            <Flower />\n            <LeftStyledCard>\n              <Text color=\"text\" fontSize=\"16px\" mb=\"15px\">\n                {t(\n                  'Stake BOW here and receive xBOW as receipt representing your share of the pool. This pool automatically compounds by using a portion of all trade fees to buy back BOW which means the xBOW to BOW ratio will grow over time!',\n                )}\n              </Text>\n              <Text color=\"text\" fontSize=\"16px\">\n                {t(\n                  'There is a 4% withdraw fee if $xBOW is withdrawn to BOW within 3 days. 2% is burned and 2% is returned to the $xBOW contract.',\n                )}\n              </Text>\n            </LeftStyledCard>\n          </CardContainer>\n          <CardContainer>\n            <BowCard isDark={isDark}>\n              <Text fontSize=\"22px\" fontWeight=\"bold\" textAlign=\"center\" mb=\"24px\">\n                1 xBOW\n              </Text>\n              <CircleWrapper>\n                <Doughnut data={data} options={options} />\n                <LabelWrapper>\n                  <Text color=\"bow\" fontSize=\"24px\" fontWeight=\"bold\">\n                    ={xbowRatio.toFormat(4)}\n                  </Text>\n                  <Text color=\"textSubtle\" fontSize=\"14px\">\n                    BOW\n                  </Text>\n                </LabelWrapper>\n              </CircleWrapper>\n            </BowCard>\n            <StyledCard>\n              <InfoSection>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n                  <Text color=\"textSubtle\">{t('Claimable BOW')}</Text>\n                  <ClaimWrapper>\n                    <Text fontWeight=\"bold\" textAlign=\"right\">\n                      ${claimableAmount.times(bowPrice).toFormat(2)}\n                    </Text>\n                    <AmountWrapper>\n                      <img src=\"/images/assets/xbow/logo.png\" alt=\"amount\" />\n                      <Text fontWeight=\"bold\">{claimableAmount.toFormat(2)}</Text>\n                    </AmountWrapper>\n                  </ClaimWrapper>\n                </Flex>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n                  <Text color=\"textSubtle\">TVL</Text>\n                  <Text fontWeight=\"bold\">${totalLockedBow.times(bowPrice).toFormat(2)}</Text>\n                </Flex>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n                  <Text color=\"textSubtle\">{t('Approximate APR')}</Text>\n                  <Text fontWeight=\"bold\">\n                    {totalLockedBow.isZero()\n                      ? 0\n                      : new BigNumber(oneDayVolume.oneDayVolumeUSD)\n                          .times(0.001)\n                          .times(365)\n                          .div(totalLockedBow.times(bowPrice))\n                          .times(100)\n                          .toFormat(2)}\n                    %\n                  </Text>\n                </Flex>\n              </InfoSection>\n              <ButtonSection>{account ? renderConnectedBtn() : <UnlockButton />}</ButtonSection>\n            </StyledCard>\n          </CardContainer>\n        </XbowCallout>\n        <Container>\n          <Text color=\"bow\" fontSize=\"24px\">\n            Step 2:\n          </Text>\n          <Text fontSize=\"24px\">{t('Stake xBOW, Earn Tokens of Your Choice Over Time')}</Text>\n        </Container>\n        <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            <>\n              {stackedOnly\n                ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n                : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n            </>\n          </Route>\n          <Route path={`${path}/history`}>\n            {orderBy(finishedPools, ['sortOrder'])\n              .map((item) => {\n                return {\n                  ...item,\n                  isFinished: item.isFinished || timestamp > item.endTime,\n                }\n              })\n              .map((pool) => (\n                <PoolCard key={pool.sousId} pool={pool} />\n              ))}\n          </Route>\n        </FlexLayout>\n      </Page>\n    </Background>\n  )\n}\nconst Background = styled.div`\n  // width: 100%;\n  // background-image: url('/images/assets/bg4.svg');\n  // background-repeat: no-repeat;\n  // background-position: top right;\n`\n\n// const Hero = styled.div`\n//   align-items: center;\n//   color: ${({ theme }) => theme.colors.primary};\n//   display: grid;\n//   grid-gap: 32px;\n//   grid-template-columns: 1fr;\n//   margin-left: auto;\n//   margin-right: auto;\n//   max-width: 250px;\n//   padding: 48px 0;\n//   ul {\n//     margin: 0;\n//     padding: 0;\n//     list-style-type: none;\n//     font-size: 16px;\n//     li {\n//       margin-bottom: 4px;\n//     }\n//   }\n//   img {\n//     height: auto;\n//     max-width: 100%;\n//   }\n//   @media (min-width: 576px) {\n//     grid-template-columns: 1fr 1fr;\n//     margin: 0;\n//     max-width: none;\n//   }\n// `\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 24px;\n  font-weight: bold;\n\n  div {\n    font-weight: bold;\n\n    &:first-child {\n      margin-right: 10px;\n    }\n  }\n`\n\nconst CardContainer = styled.div`\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\n  border-radius: 16px;\n`\n\nconst Flower = styled(Card)`\n  height: 250px;\n  background-image: url('/images/assets/xbow/info.png');\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  padding-top: 30px;\n\n  @media (max-width: 768px) {\n    height: 200px;\n    padding-top: 50px;\n  }\n`\n\nconst XbowCallout = styled(BaseLayout)`\n  border-top: 2px solid #e9e9e9;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst StyledCard = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 20px;\n`\n\nconst LeftStyledCard = styled(StyledCard)`\n  padding: 36px 43px;\n  @media (max-width: 768px) {\n    padding: 20px 20px;\n  }\n`\n\nconst BowCard = styled(Card)<{ isDark: boolean }>`\n  height: 250px;\n  background-image: ${(props) =>\n    props.theme.isDark ? \"url('/images/assets/xbow/pattern-dark.svg')\" : \"url('/images/assets/xbow/pattern.svg')\"};\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  padding-top: 30px;\n\n  @media (max-width: 768px) {\n    padding-top: 50px;\n  }\n\n  canvas {\n    max-width: 300px;\n    width: 50% !important;\n    height: auto !important;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n  margin: 8px 0;\n\n  img {\n    margin-right: 12.5px;\n  }\n`\n\nconst UnstakeButton = styled(StyledButton)`\n  background: linear-gradient(265.22deg, #ed952e 0%, #f7ce47 100%);\n  color: white;\n`\n\nconst InfoSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px 20px;\n`\n\nconst ButtonSection = styled.div`\n  padding: 20px 30px;\n\n  button {\n    width: 100%;\n  }\n`\n\nconst CircleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n`\n\nconst LabelWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ClaimWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`\n\nconst AmountWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  img {\n    width: 18px;\n    height: 18px;\n    margin-right: 5px;\n  }\n`\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from 'archerswap-uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable ? t('You won two Collectibles!') : t('You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from 'archerswap-uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","import React, { useState, useEffect, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS, Text } from 'archerswap-uikit'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport { useWeb3React } from '@web3-react/core'\nimport Hunt from 'views/Hunt'\nimport useTheme from 'hooks/useTheme'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// import { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './views/AddLiquidity/redirects'\n// import { RedirectOldRemoveLiquidityPathStructure } from './views/RemoveLiquidity/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Disperse = lazy(() => import('./views/Disperse'))\nconst Bridge = lazy(() => import('./views/Bridge'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Vaults = lazy(() => import('./views/Vaults'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst Dice = lazy(() => import('./views/Dice'))\nconst TradingComp = lazy(() => import('./views/TradingComp/TradingComp'))\nconst Marketplace = lazy(() => import('./views/Marketplace'))\nconst CollectionDetail = lazy(() => import('./views/Marketplace/CollectionDetail'))\nconst NftDetail = lazy(() => import('./views/Marketplace/NftDetail'))\nconst MyNfts = lazy(() => import('./views/Marketplace/MyNfts'))\n// exchange routes\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Pool = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst Swap = lazy(() => import('./views/Swap'))\nconst Zapin = lazy(() => import('./views/Zapin'))\nconst RedirectOldRemoveLiquidityPathStructure = lazy(() => import('./views/RemoveLiquidity/redirects'))\nconst RedirectOldAddLiquidityPathStructure = lazy(() => import('./views/AddLiquidity/redirects'))\nconst RedirectDuplicateTokenIds = lazy(() => import('./views/AddLiquidity/redirects'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst PresaleAlert = styled.div`\n  background: #e5e8ec;\n  font-weight: bold;\n  padding: 21px 36px;\n  @media (max-width: 768px) {\n    padding: 20px 16px;\n  }\n`\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  overflow-x: hidden;\n`\n\nconst BodyWrapper = styled.div<any>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 32px 16px;\n  align-items: center;\n  flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1;\n  justify-content: center;\n  background: ${(props) => props.theme.colors.background};\n`\n\nconst BodyWrapperEffect = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: url('/images/exchange_bg.svg') no-repeat center center fixed;\n  background-size: contain;\n`\n\nconst Marginer = styled.div`\n  margin-top: 5rem;\n`\n\nconst App: React.FC = () => {\n  const { account, chainId, deactivate } = useWeb3React()\n  const { isDark } = useTheme()\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  if (!window.location.href.includes('bridge') && account && chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\n    deactivate()\n  }\n\n  const [presaleAlertEnabled, setPresaleAlertEnabled] = useState(false)\n  useEffect(() => {\n    const currentTimestamp = Math.floor(new Date().getTime() / 1000)\n    if (currentTimestamp < 1679313600) {\n      setPresaleAlertEnabled(true)\n      setTimeout(() => {\n        setPresaleAlertEnabled(false)\n      }, 10000)\n    }\n  }, [])\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          {presaleAlertEnabled && (\n            <PresaleAlert>\n              <Text color=\"#182149\" fontSize=\"16px\">\n                HUNT presale starts at 12 PM UTC 20th Mar. Check out more on our{'  '}\n                <a href=\"/ido\" style={{ color: '#eaae25' }}>\n                  BowPad\n                </a>\n                .\n              </Text>\n            </PresaleAlert>\n          )}\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/vaults\">\n              <Vaults />\n            </Route>\n            <Route path=\"/xbow\">\n              <Pools />\n            </Route>\n            <Route path=\"/hunt\">\n              <Hunt />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ido\">\n              <Ifos />\n            </Route>\n            <Route path=\"/disperse\">\n              <Disperse />\n            </Route>\n            <Route path=\"/bridge\">\n              <Bridge />\n            </Route>\n            <Route path=\"/marketplace/:alias/:tokenId\">\n              <NftDetail />\n            </Route>\n            <Route path=\"/marketplace/:alias\">\n              <CollectionDetail />\n            </Route>\n            <Route path=\"/marketplace\">\n              <Marketplace />\n            </Route>\n            <Route path=\"/my-nfts\">\n              <MyNfts />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/dice\">\n              <Dice />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/xbow\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/xbow\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            <Route path=\"/campaigns/0\">\n              <TradingComp id={0} />\n            </Route>\n            {/* Exchange */}\n            <AppWrapper>\n              <BodyWrapper isDark={isDark}>\n                <BodyWrapperEffect/>\n                <Switch>\n                  <Route path=\"/swap\">\n                    <Swap />\n                  </Route>\n                  <Route path=\"/pool\">\n                    <Pool />\n                  </Route>\n                  <Route path=\"/zap\">\n                    <Zapin />\n                  </Route>\n                  <Route path=\"/find\">\n                    <PoolFinder />\n                  </Route>\n                  <Route exact path=\"/add\" component={AddLiquidity} />\n                  <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n                  {/* Redirection: These old routes are still used in the code base */}\n                  <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n                  <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n                  <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n                  \n                  {/* 404 */}\n                  <Route>\n                    <NotFound />\n                  </Route>\n                </Switch>\n                <Marginer />\n              </BodyWrapper>\n            </AppWrapper>\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useActiveWeb3React } from 'hooks'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nconst web3 = getWeb3NoAccount()\n\nexport default function Updater(): null {\n  const { chainId }: any = useActiveWeb3React()\n  // const block = useBlock()\n  // const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((s) => {\n        if (chainId === s.chainId) {\n          if (typeof s.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, s.blockNumber) }\n        }\n        return s\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!web3 || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    web3.eth\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error));\n\n    return () => {console.log(true)}\n  }, [dispatch, chainId, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport useInterval from '../../hooks/useInterval'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { addPopup } from '../application/actions'\nimport { AppDispatch, AppState } from '../index'\nimport { acceptListUpdate } from './actions'\n\nexport default function Updater(): null {\n  const { library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n\n  const isWindowVisible = useIsWindowVisible()\n\n  const fetchList = useFetchListCallback()\n\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR: {\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n            // automatically update minor/patch as long as bump matches the min update\n            if (bump >= min) {\n              dispatch(acceptListUpdate(listUrl))\n              dispatch(\n                addPopup({\n                  key: listUrl,\n                  content: {\n                    listUpdate: {\n                      listUrl,\n                      oldList: list.current,\n                      newList: list.pendingUpdate,\n                      auto: true,\n                    },\n                  },\n                })\n              )\n            } else {\n              console.error(\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n              )\n            }\n            break\n          }\n          case VersionUpgrade.MAJOR:\n            dispatch(\n              addPopup({\n                key: listUrl,\n                content: {\n                  listUpdate: {\n                    listUrl,\n                    auto: false,\n                    oldList: list.current,\n                    newList: list.pendingUpdate,\n                  },\n                },\n                removeAfterMs: null,\n              })\n            )\n        }\n      }\n    })\n  }, [dispatch, lists])\n\n  return null\n}\n","function wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number }\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  // eslint-disable-next-line no-async-promise-executor\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport chunkArray from '../../utils/chunkArray'\nimport { CancelledError, retry, RetryableError } from '../../utils/retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number\n): Promise<{ results: string[]; blockNumber: number }> {\n  let resultsBlockNumber\n  let returnData\n  try {\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.info('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [\n    unserializedOutdatedCallKeys,\n  ])\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n    // .filter(item => item.address.toLowerCase() !== '0xBCfCcbde45cE874adCB698cC183deBcF17952812'.toLowerCase())\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      })\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              })\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.error('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              })\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map(ix => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transactions = chainId ? state[chainId] ?? {} : {}\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                })\n              )\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary,\n                  },\n                },\n                hash\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\n\n  return null\n}\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, state => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default createAction\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  muteAudio,\n  unmuteAudio\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n\n  audioPlay: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const {chainId} = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, state => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, state => {\n      state.audioPlay = true\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: ''\n}\n\nexport default createReducer<MintState>(initialState, builder =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue\n          }\n        }\n        // they're typing into a new field, store the other value\n        \n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n            otherTypedValue: state.typedValue\n          }\n        \n      } \n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: ''\n        }\n      \n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\nimport DEFAULT_LIST from '../../constants/token/archerswap.json'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n  readonly selectedListUrl: string | undefined\n}\n\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n    [DEFAULT_TOKEN_LIST_URL]: {\n      error: null,\n      current: DEFAULT_LIST,\n      loadingRequestId: null,\n      pendingUpdate: null,\n    },\n  },\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        current: null,\n        pendingUpdate: null,\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(selectList, (state, { payload: url }) => {\n      state.selectedListUrl = url\n      // automatically adds list\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      if (state.selectedListUrl === url) {\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.selectedListUrl = undefined\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0'\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue\n    }\n  })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach(call => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach(callKey => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber\n        }\n      })\n    })\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport vaultsReducer from './vaults'\nimport pricesReducer from './prices'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport allTimeVolumeReducer from './allTimeVolume'\nimport oneDayVolumeReducer from './oneDayVolume'\n\n// exchange reducers\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\n\nimport { getThemeCache } from '../utils/theme'\n\ntype MergedState = {\n  [key: string]: {\n    [key: string]: any\n  }\n}\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState\nif (loadedState.user) {\n  loadedState.user.userDarkMode = getThemeCache()\n}\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    vaults: vaultsReducer,\n    prices: pricesReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    block: blockReducer,\n    allTimeVolume: allTimeVolumeReducer,\n    oneDayVolume: oneDayVolumeReducer,\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true, serializableCheck: false }), save({ states: PERSISTED_KEYS })],\n  preloadedState: loadedState\n})\n\nstore.dispatch(updateVersion())\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\n","import React from 'react'\nimport { ModalProvider } from 'archerswap-uikit'\nimport { Web3ReactProvider, createWeb3ReactRoot } from '@web3-react/core'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\nimport { NetworkContextName } from './constants'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <ThemeContextProvider>\n            <LanguageProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </LanguageProvider>\n          </ThemeContextProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport XHR from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18next\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: `./locales/{{lng}}.json`\n    },\n    react: {\n      useSuspense: true\n    },\n    fallbackLng: 'en',\n    preload: ['en'],\n    keySeparator: false,\n    interpolation: { escapeValue: false }\n  })\n\nexport default i18next\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport ToastListener from './components/ToastListener'\nimport Providers from './Providers'\nimport './i18n'\n\nif ('ethereum' in window) {\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\nwindow.addEventListener('error', () => {\n   localStorage?.removeItem('redux_localstorage_simple_lists')\n})\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <>\n        <ListsUpdater />\n        <ApplicationUpdater />\n        <TransactionUpdater />\n        <MulticallUpdater />\n        <ToastListener />\n      </>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const DEFAULT_TOKEN_LIST_URL = 'archerswap'\n\nexport const DEFAULT_LIST_OF_LISTS: string[] = [DEFAULT_TOKEN_LIST_URL]\n","import poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport bowABI from 'config/abi/bow.json'\nimport wcoreABI from 'config/abi/wcore.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress, getWcoreAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => ![0, 8].includes(p.sousId))\n  const callsStartTime = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startTime',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndTime',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartTime)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n  return poolsWithEnd.map((bowPoolConfig, index) => {\n    const startTime = starts[index]\n    const endTime = ends[index]\n    return {\n      sousId: bowPoolConfig.sousId,\n      startTime: new BigNumber(startTime).toJSON(),\n      endTime: new BigNumber(endTime).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonCorePools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'CORE')\n  const corePool = poolsConfig.filter((p) => p.stakingToken.symbol === 'CORE')\n\n  const callsNonCorePools = nonCorePools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsCorePools = corePool.map((poolConfig) => {\n    return {\n      address: getWcoreAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(bowABI, callsNonCorePools)\n  const bnbPoolsTotalStaked = await multicall(wcoreABI, callsCorePools)\n  const poolsWithAllocPoint = await Promise.all(\n    nonCorePools.map(async (pool) => {\n      if (![0, 8].includes(pool.sousId)) {\n        return pool\n      }\n      const [info, totalAllocPoint, tokenPerSecond] = await multicall(masterChefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [pool.sousId],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'cakePerSecond',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...pool,\n        // tokenPerSecond: new BigNumber(tokenPerSecond).div(1e18).times(poolWeight).toJSON(),\n        tokenPerSecond: new BigNumber(new BigNumber(tokenPerSecond).isZero() ? 200000000000000000 : tokenPerSecond)\n          .div(1e18)\n          .times(poolWeight)\n          .toJSON(),\n      }\n    }),\n  )\n\n  return [\n    ...poolsWithAllocPoint.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n      tokenPerSecond: p.tokenPerSecond,\n    })),\n    ...corePool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// CORE pools use the native CORE token (wrapping ? unwrapping is done at the contract level)\n\nconst masterPools = poolsConfig.filter((p) => [0, 8].includes(p.sousId))\nconst sousPools = poolsConfig.filter((p) => ![0, 8].includes(p.sousId))\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return poolsConfig.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  const calls = poolsConfig.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = poolsConfig.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return tokenBalances\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const masterCalls = masterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [p.sousId, account],\n  }))\n  const masterUserInfo = await multicall(masterChefABI, masterCalls)\n  const masterStakedBalances = masterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(masterUserInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  const sousCalls = sousPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const sousUserInfo = await multicall(sousChefABI, sousCalls)\n  const sousStakedBalances = sousPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(sousUserInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...masterStakedBalances, ...sousStakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const masterCalls = masterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingCake',\n    params: [p.sousId, account],\n  }))\n  const masterRes = await multicall(masterChefABI, masterCalls)\n  const masterPendingRewards = masterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(masterRes[index]).toJSON(),\n    }),\n    {},\n  )\n\n  const sousCalls = sousPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const sousRes = await multicall(sousChefABI, sousCalls)\n  const sousPendingRewards = sousPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(sousRes[index]).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...masterPendingRewards, ...sousPendingRewards }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId] || 0,\n    stakingTokenBalance: stakingTokenBalances[pool.sousId] || 0,\n    stakedBalance: stakedBalances[pool.sousId] || 0,\n    pendingReward: pendingRewards[pool.sousId] || 0,\n  }))\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","import { ConnectorNames } from 'archerswap-uikit'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = process.env.REACT_APP_NODE_1\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1116')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1116, 1115],\n})\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst rabbitContract = getPancakeRabbitContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BOW_PER_BLOCK = new BigNumber(0.16)\nexport const SECONDS_PER_YEAR = new BigNumber(60 * 60 * 24 * 365)\nexport const VAULTS_DISTRIBUTION_PERCENTAGE = 0.94\nexport const BASE_URL = 'https://archerswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://archerswap.finance/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const START_TIMESTAMP = 1678807800\n","export default {\n  masterChef: {\n    1115: '',\n    1116: '0xdbf74f167a4e0b97a072c7ed51df6c6e8ec0353b',\n  },\n  sousChef: {\n    1115: '',\n    1116: '0x8231f97ff38b4b14c27cbbb19c0d16784a59b401',\n  },\n  lottery: {\n    1115: '',\n    1116: '0x50E298C8DA58c3D7BfE040d9e3a10E62F4bc44D8',\n  },\n  lotteryNFT: {\n    1115: '',\n    1116: '0xFaF04A8e6B19c5574e220b5FC55348b7ef14E769',\n  },\n  lotteryCore: {\n    1115: '',\n    1116: '0x8196CAaebef9A04747a24675FDBD384b1d9B4A79',\n  },\n  lotteryNFTCore: {\n    1115: '',\n    1116: '0x6aACC299Cd128DD47ef85516523A4D1E95C70C5E',\n  },\n  mulltiCall: {\n    1116: '0x40fcd694c9ebbc46a2230ad498fbde11ae0111a8',\n    1115: '',\n  },\n  multi: {\n    1116: '0x4f50b58cec1f0bbe112df189b46a84cc8943fc34',\n    1115: '',\n  },\n  pancakeProfile: {\n    1116: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    1115: '',\n  },\n  pancakeRabbits: {\n    1116: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    1115: '',\n  },\n  bunnyFactory: {\n    1116: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    1115: '',\n  },\n  claimRefund: {\n    1116: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    1115: '',\n  },\n  pointCenterIfo: {\n    1116: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    1115: '',\n  },\n  bunnySpecial: {\n    1116: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    1115: '',\n  },\n  xbow: {\n    1116: '0x236994dabb4e7ffb85bf76889cec8ff9ca543ba4',\n    1115: '',\n  },\n  factory: {\n    1116: '0xe0b8838e8d73ff1ca193e8cc2bc0ebf7cf86f620',\n    1115: '',\n  },\n  nftMarketplace: {\n    1116: '0xf762Da5b90Ba82675043e1a333Cf5E1203CAe893',\n    1115: '',\n  },\n  hunter: {\n    1116: '0x962D45C91e2e4f29DdC96C626976ECE600908Ba6',\n    1115: '',\n  },\n  tracker: {\n    1116: '0x8045ed9dDA73eDEAD7755BF294B183018B2a42E9',\n    1115: '',\n  },\n  hunterCoreLP: {\n    1116: '0x798489bacDDf8A3c5B1C23E7c24833B349F41dED',\n    1115: '',\n  },\n  kyudoNft: {\n    1116: '0x54DF7dDF83CfB078E074D4331E9f956A2ec12b61',\n    1115: '',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 1116\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getBowAddress = () => {\n  return getAddress(tokens.bow.address)\n}\nexport const getMultiAddress = () => {\n  return getAddress(addresses.multi)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWcoreAddress = () => {\n  return getAddress(tokens.wcore.address)\n}\nexport const getLotteryAddress = (lotteryType: string) => {\n  if (lotteryType === 'bow') return getAddress(addresses.lottery)\n  return getAddress(addresses.lotteryCore)\n}\nexport const getLotteryTicketAddress = (lotteryType: string) => {\n  if (lotteryType === 'bow') return getAddress(addresses.lotteryNFT)\n  return getAddress(addresses.lotteryNFTCore)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getXbowAddress = () => {\n  return getAddress(addresses.xbow)\n}\nexport const getFactoryAddress = () => {\n  return getAddress(addresses.factory)\n}\nexport const getNftMarketplaceAddress = () => {\n  return getAddress(addresses.nftMarketplace)\n}\nexport const getHunterAddress = () => {\n  return getAddress(addresses.hunter)\n}\nexport const getTrackerAddress = () => {\n  return getAddress(addresses.tracker)\n}\nexport const getHunterCoreLPAddress = () => {\n  return getAddress(addresses.hunterCoreLP)\n}\nexport const getKyudoNftAddress = () => {\n  return getAddress(addresses.kyudoNft)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from 'archerswap-sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\n\nexport const bowClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://subgraph.archerswap.finance/subgraphs/name/archerswap-subgraph',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const blockClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://subgraph.archerswap.finance/subgraphs/name/tomdoeverything/core-blocks',\n  }),\n  cache: new InMemoryCache(),\n})\n\nexport const marketplaceClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://nft.hakuswap.com/graphql',\n  }),\n  cache: new InMemoryCache(),\n})\n\nexport default bowClient\n","import gql from 'graphql-tag'\nimport { getFactoryAddress } from 'utils/addressHelpers'\n\nexport const factoryQuery = gql`\n  {\n    uniswapFactories {\n      totalLiquidityETH\n      totalLiquidityUSD\n    }\n  }\n`\n\nexport const pairsQuery = gql`\n  {\n    pairs {\n      id\n      reserveUSD\n      totalSupply\n    }\n  }\n`\n\nexport const tokensQuery = gql`\n  {\n    tokens(first: 1000, skip: $skip) {\n      name\n      symbol\n    }\n  }\n`\n\nexport const allPricesQuery = gql`\n  {\n    tokens {\n      id\n      symbol\n      name\n      derivedBNB: derivedETH\n      tokenDayData(orderBy: date, orderDirection: desc, first: 1) {\n        id\n        dailyTxns\n        priceUSD\n      }\n    }\n  }\n`\n\nexport const allTimeVolumeQuery = gql`\n  {\n    uniswapFactories {\n      untrackedVolumeUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA_BULK = (pairList) => {\n  const yesterday = (Math.floor(new Date().getTime() / 86400 / 1000) - 1) * 86400 // EE yesterdays data\n  let pairString = '['\n  pairList.slice(0, pairList.length - 1).forEach((pair) => {\n    pairString += `\"${pair}\",`\n  })\n  pairString += `\"${pairList.length ? pairList[pairList.length - 1] : ''}\"]`\n  const queryString = `\n      query days {\n        pairDayDatas(first: 30, where: { pairAddress_in: ${pairString}, date: ${yesterday}}) {\n            pairAddress\n          dailyVolumeUSD\n          reserveUSD\n        }\n      } \n  `\n  return gql(queryString)\n}\n\nexport const TOTAL_VOLUME_DATA = (block) => {\n  const queryString = ` query uniswapFactories {\n      uniswapFactories(\n       ${block ? `block: { number: ${block}}` : ``} \n       where: { id: \"${getFactoryAddress().toLocaleLowerCase()}\" }) {\n        totalVolumeUSD\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const GET_BLOCKS = (timestamps) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const getERC721CollectionsQuery = gql`\n  {\n    GetERC721Collections {\n      alias\n      name\n      address\n      itemName\n      websiteUrl\n      bannerUrl\n      thumbnailUrl\n      headerUrl\n      isPixel\n      frontendPath\n      socialShareUrl\n      maxSupply\n      totalSupply\n      totalVolume\n      last24HVolume\n      last7DVolume\n      last30DVolume\n      marketplaceAddress\n      marketplaceV2Address\n      chainId\n    }\n  }\n`\nexport const getERC721CollectionQuery = (alias) => {\n  return gql`\n    {\n      GetERC721Collection(alias: \"${alias}\") {\n        alias\n        name\n        address\n        itemName\n        websiteUrl\n        owners\n        bannerUrl\n        thumbnailUrl\n        headerUrl\n        isPixel\n        frontendPath\n        socialShareUrl\n        maxSupply\n        totalSupply\n        totalVolume\n        last24HVolume\n        last7DVolume\n        last30DVolume\n        marketplaceAddress\n        marketplaceV2Address\n        chainId\n      }\n    }`\n}\n\nexport const getERC721CollectionAttributesQuery = (alias) => {\n  return gql`\n    {\n      GetERC721CollectionAttributes(alias: \"${alias}\") {\n        alias\n        attributeCategories {\n          type\n          values {\n            value\n            count\n          }\n        }\n      }\n    }`\n}\n\nexport const getERC721TokenCountQuery = gql`\n  query GetERC721TokenCount($input: GetERC721TokensInput!) {\n    GetERC721TokenCount(input: $input) {\n      count\n      tokens {\n        tokenId\n      }\n    }\n  }\n`\n\nexport const getERC721TokensQuery = gql`\n  query GetERC721Tokens($input: GetERC721TokensInput!) {\n    GetERC721Tokens(input: $input) {\n      count\n      tokens {\n        tokenId\n        name\n        image\n        imageCdnUrl\n        thumbnailCdnUrl\n        imageContentType\n        background\n        backgroundUrl\n        rarityRank\n      }\n    }\n  }\n`\n\nexport const ERC721RecentEventsLiteQuery = gql`\n  query ERC721RecentEventsLite($input: RecentlyEventsInput!) {\n    ERC721RecentEventsLite(input: $input) {\n      id\n      tokenId\n      event\n      from\n      valueNum\n      timestamp\n    }\n  }\n`\n\nexport const getERC721TokenQuery = (alias, tokenId) => {\n  return gql`\n    {\n      GetERC721Token(alias: \"${alias}\", tokenId: \"${tokenId}\") {\n        tokenId\n        name\n        image\n        imageCdnUrl\n        thumbnailCdnUrl\n        imageContentType\n        background\n        backgroundUrl\n        animationUrl\n        rarityRank\n        attributes {\n          trait_type\n          value\n        }\n      }\n    }`\n}\n\nexport const ERC721TokenEventsQuery = gql`\n  query ERC721TokenEvents($input: ERC721TokenEventsInput!) {\n    ERC721TokenEvents(input: $input) {\n      id\n      transactionHash\n      event\n      from\n      to\n      valueNum\n      timestamp\n    }\n  }\n`\n","/* eslint-disable no-param-reassign */\nimport { Toast } from 'archerswap-uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import { useEffect, useState, useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { getBowAddress, getXbowAddress } from 'utils/addressHelpers'\nimport { xbowStake, xbowUnstake } from 'utils/callHelpers'\nimport useRefresh from './useRefresh'\nimport { useERC20, useXbow } from './useContract'\nimport useGasBoost from './useGasBoost'\n\nconst useBowInfo = () => {\n  const [totalLockedBow, setTotalLockedBow] = useState(new BigNumber(0))\n  const [xbowRatio, setXbowRatio] = useState(new BigNumber(0))\n  const [delayToWithdraw, setDelayToWithdraw] = useState(0)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const xbowContract = useXbow()\n  const bowContract = useERC20(getBowAddress())\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const [res0, res1, res2] = await Promise.all([\n        bowContract.methods.balanceOf(getXbowAddress()).call(),\n        xbowContract.methods.xBOWForBOW(10000).call(),\n        xbowContract.methods.delayToWithdraw().call(),\n      ])\n      setTotalLockedBow(new BigNumber(res0).div(1e18))\n      setXbowRatio(new BigNumber(res1).div(1e4))\n      setDelayToWithdraw(Number(res2))\n    }\n    fetchInfo()\n  }, [account, xbowContract, bowContract, fastRefresh])\n\n  return { totalLockedBow, xbowRatio, delayToWithdraw }\n}\n\nexport const useUserInfo = () => {\n  const [bowBalance, setBowBalance] = useState(new BigNumber(0))\n  const [xbowBalance, setXbowBalance] = useState(new BigNumber(0))\n  const [claimableAmount, setClaimableAmount] = useState(new BigNumber(0))\n  const [stakedTime, setStakedTime] = useState(0)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const xbowContract = useXbow()\n  const bowContract = useERC20(getBowAddress())\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const [res0, res1, res2, res3] = await Promise.all([\n        bowContract.methods.balanceOf(account).call(),\n        xbowContract.methods.balanceOf(account).call(),\n        xbowContract.methods.BOWBalance(account).call(),\n        xbowContract.methods.stakedTime(account).call(),\n      ])\n      setBowBalance(new BigNumber(res0))\n      setXbowBalance(new BigNumber(res1))\n      setClaimableAmount(new BigNumber(res2).div(1e18))\n      setStakedTime(Number(res3))\n    }\n    if (account) {\n      fetchInfo()\n    }\n  }, [account, xbowContract, bowContract, fastRefresh])\n\n  return { bowBalance, xbowBalance, claimableAmount, stakedTime }\n}\n\nexport const useXbowStake = () => {\n  const { account } = useWeb3React()\n  const xbowContract = useXbow()\n\n  const { gasBoostedPrice } = useGasBoost()\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await xbowStake(xbowContract, amount, account, gasBoostedPrice)\n      console.info(txHash)\n    },\n    [account, xbowContract, gasBoostedPrice],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useXbowUnstake = () => {\n  const { account } = useWeb3React()\n  const xbowContract = useXbow()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await xbowUnstake(xbowContract, amount, account, gasBoostedPrice)\n      console.info(txHash)\n    },\n    [account, xbowContract, gasBoostedPrice],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useBowInfo\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  //min-height: calc(100vh - 64px);\n  padding-top: 0px;\n  padding-bottom: 16px;\n  max-width: 1220px;\n  margin-top: -10px;\n  \n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-top: 10px;\n    padding-bottom: 24px;\n    margin-top: -20px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 12px;\n    padding-bottom: 32px;\n    margin-top: -30px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 12px;\n    padding-bottom: 32px;\n    margin-top: -40px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 12px;\n    padding-bottom: 32px;\n    margin-top: -50px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport { Button, useWalletModal } from 'archerswap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'archerswap-uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(async (connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n\n    // if (!window.location.href.includes('bridge')) {\n    //   await setupNetwork()\n    // }\n\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  // {\n  //   name: 'Bullish',\n  //   description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n  //   images: {\n  //     lg: 'bullish-lg.png',\n  //     md: 'bullish-md.png',\n  //     sm: 'bullish-sm.png',\n  //     ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n  //   },\n  //   video: {\n  //     webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n  //     mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n  //   },\n  //   sortOrder: 999,\n  //   bunnyId: 11,\n  // },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { bowClient } from 'apollo/client'\nimport { PAIR_DAY_DATA_BULK } from 'apollo/queries'\n\nconst fetchFarms = async () => {\n  const lpAddresses = farmsConfig.map((farm) => getAddress(farm.lpAddresses).toLowerCase())\n  const { data: results } = await bowClient.query({\n    query: PAIR_DAY_DATA_BULK(lpAddresses),\n    fetchPolicy: 'cache-first',\n  })\n  const { pairDayDatas } = results\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTotalSupply).isZero()\n        ? 0\n        : new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // console.log('lpTokenRatio :>> ', new BigNumber(lpTokenRatio).toNumber());\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals))\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals))\n\n      const [info, totalAllocPoint, rewardPerSecond] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'cakePerSecond',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      const pairData = pairDayDatas.find((pair) => pair.pairAddress.toLowerCase() === lpAddress.toLowerCase())\n      let feeApr = 0\n      if (pairData) {\n        const { dailyVolumeUSD, reserveUSD } = pairData\n        feeApr =\n          !reserveUSD || Number(reserveUSD) === 0\n            ? 0\n            : (Number(dailyVolumeUSD) / Number(reserveUSD)) * 365 * 100 * 0.0005\n      }\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenAmount.isZero() ? null : quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        lpTokenBalanceMC: new BigNumber(lpTokenBalanceMC).div(1e18),\n        feeApr,\n        // tokenPerSecond: new BigNumber(rewardPerSecond).div(1e18),\n        tokenPerSecond: new BigNumber(\n          new BigNumber(rewardPerSecond).isZero() ? 200000000000000000 : rewardPerSecond,\n        ).div(1e18),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport archerswapVaultABI from 'config/abi/archerswapVault.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport vaultsConfig from 'config/constants/vaults'\n\nconst fetchVaults = async () => {\n  const data = await Promise.all(\n    vaultsConfig.map(async (vaultConfig) => {\n      const lpAddress = getAddress(vaultConfig.lpAddresses)\n      const masterchefAddress = getMasterChefAddress()\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(vaultConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(vaultConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [vaultConfig.provider === 'autofarm' ? getAddress(vaultConfig.stratxAddress) : masterchefAddress],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(vaultConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(vaultConfig.quoteToken.address),\n          name: 'decimals',\n        },\n        // Balance of token in the master chef contract\n        {\n          address: getAddress(vaultConfig.token.address),\n          name: 'balanceOf',\n          params: [masterchefAddress],\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n        tokenBalanceMC,\n      ] = await multicall(erc20, calls)\n\n      // Get Total Locked Value in Vault contract\n      const [vaultBalance] = await multicall(archerswapVaultABI, [\n        {\n          address: getAddress(vaultConfig.vaultAddresses),\n          name: 'balance',\n          params: [],\n        },\n      ])\n\n      // Vault\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(vaultBalance).div(new BigNumber(lpTotalSupply))\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals[0]))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Farm\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenMcRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalMcInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals[0]))\n        .times(new BigNumber(2))\n        .times(lpTokenMcRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals[0]))\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(quoteTokenDecimals[0]))\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: masterchefAddress,\n          name: 'poolInfo',\n          params: [vaultConfig.pid],\n        },\n        {\n          address: masterchefAddress,\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...vaultConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        lpTotalMcInQuoteToken: lpTotalMcInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenAmount.isZero() ? null : quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        vaultBalance: new BigNumber(vaultBalance).div(new BigNumber(10).pow(18)).toJSON(),\n        tokenBalanceMC: new BigNumber(tokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals[0])).toJSON(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchVaults\n","import Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport archerswapVaultABI from 'config/abi/archerswapVault.json'\nimport multicall from 'utils/multicall'\nimport vaultsConfig from 'config/constants/vaults'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const fetchVaultUserAllowances = async (account: string) => {\n  const calls = vaultsConfig.map((vault) => {\n    const lpContractAddress = vault.isSingle ? getAddress(vault.token.address) : getAddress(vault.lpAddresses)\n    const vaultAddress = getAddress(vault.vaultAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, vaultAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const fetchVaultUserTokenBalances = async (account: string, web3?: Web3) => {\n  const calls = vaultsConfig.map((vault) => {\n    const lpContractAddress = vault.isSingle ? getAddress(vault.token.address) : getAddress(vault.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchVaultUserStakedBalances = async (account: string) => {\n  const call1 = vaultsConfig.map((vault) => {\n    const vaultAddress = getAddress(vault.vaultAddresses)\n    return {\n      address: vaultAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n  const shareBalances = await multicall(erc20ABI, call1)\n\n  const call2 = vaultsConfig.map((vault) => {\n    const vaultAddress = getAddress(vault.vaultAddresses)\n    return {\n      address: vaultAddress,\n      name: 'getPricePerFullShare',\n    }\n  })\n  const pricePerFullShares = await multicall(archerswapVaultABI, call2)\n\n  const depositBalances = shareBalances.map((balance, idx) => {\n    return new BigNumber(balance[0]._hex)\n      .times(pricePerFullShares[idx][0]._hex)\n      .div(new BigNumber(10).pow(18))\n      .toString()\n  })\n  return depositBalances\n}\n\nexport const fetchVaultUserEarnings = async (account: string) => {\n  const call1 = vaultsConfig.map((vault) => {\n    const vaultAddress = getAddress(vault.vaultAddresses)\n    return {\n      address: vaultAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const shareBalances = await multicall(erc20ABI, call1)\n\n  const call2 = vaultsConfig.map((vault) => {\n    const vaultAddress = getAddress(vault.vaultAddresses)\n    return {\n      address: vaultAddress,\n      name: 'getPricePerFullShare',\n    }\n  })\n\n  const pricePerFullShares = await multicall(archerswapVaultABI, call2)\n\n  const depositBalances = shareBalances.map((balance, idx) => {\n    return new BigNumber(balance[0]._hex)\n      .times(pricePerFullShares[idx][0]._hex)\n      .div(new BigNumber(10).pow(18))\n      .toString()\n  })\n\n  return depositBalances\n}\n","/* eslint-disable no-param-reassign */\nimport Web3 from 'web3'\nimport { createSlice } from '@reduxjs/toolkit'\nimport vaultsConfig from 'config/constants/vaults'\nimport fetchVaults from './fetchVaults'\nimport {\n  fetchVaultUserEarnings,\n  fetchVaultUserAllowances,\n  fetchVaultUserTokenBalances,\n  fetchVaultUserStakedBalances,\n} from './fetchVaultUser'\nimport { VaultsState, Vault } from '../types'\n\nconst initialState: VaultsState = { data: [...vaultsConfig] }\n\nexport const vaultsSlice = createSlice({\n  name: 'Vaults',\n  initialState,\n  reducers: {\n    setVaultsPublicData: (state, action) => {\n      const liveVaultsData: Vault[] = action.payload\n      state.data = state.data.map((vault) => {\n        const liveVaultData = liveVaultsData.find((f) => f.pid === vault.pid && f.provider === vault.provider)\n        return { ...vault, ...liveVaultData }\n      })\n    },\n    setVaultUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setVaultsPublicData, setVaultUserData } = vaultsSlice.actions\n\n// Thunks\nexport const fetchVaultsPublicDataAsync = () => async (dispatch) => {\n  const vaults = await fetchVaults()\n  dispatch(setVaultsPublicData(vaults))\n}\nexport const fetchVaultUserDataAsync = (account, web3?: Web3) => async (dispatch) => {\n  const userVaultAllowances = await fetchVaultUserAllowances(account)\n  const userVaultTokenBalances = await fetchVaultUserTokenBalances(account, web3)\n  const userStakedBalances = await fetchVaultUserStakedBalances(account)\n  const userVaultEarnings = await fetchVaultUserEarnings(account)\n\n  const arrayOfUserDataObjects = userVaultAllowances.map((vaultAllowance, index) => {\n    return {\n      index,\n      allowance: userVaultAllowances[index],\n      tokenBalance: userVaultTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userVaultEarnings[index],\n    }\n  })\n\n  dispatch(setVaultUserData({ arrayOfUserDataObjects }))\n}\n\nexport default vaultsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Pilots Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen)\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [\n  process.env.REACT_APP_NODE_1,\n  process.env.REACT_APP_NODE_2,\n  process.env.REACT_APP_NODE_3,\n  process.env.REACT_APP_NODE_4\n]\n\nconst rpcs = {\n  1116: process.env.REACT_APP_NODE_1,\n  1: 'https://mainnet.infura.io/v3/0128e783f02f4a3fab06b35aa5c4fd6e',\n  56: 'https://nd-891-303-547.p2pify.com/8bf0ad33fa15a23a6fdf93cd96ffa776',\n  137: 'https://rpc-mainnet.matic.network',\n  250: 'https://rpc.ftm.tools/',\n}\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport const getNodeUrlFromChain = (chainId: string) => {\n  return rpcs[chainId]\n}\n\nexport default getNodeUrl\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { ConnectorNames } from 'archerswap-uikit'\nimport { Web3Provider } from '@ethersproject/providers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: {\n    [chainId]: rpcUrl,\n    1: 'https://rpc.ankr.com/eth',\n    250: 'https://rpc.ftm.tools/',\n    137: 'https://polygon-rpc.com/',\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n}\n\nexport const getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 15000\n  return library\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B'\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'archerswap-uikit'\n\nconst StyledBanner = styled.img`\n  width: 100%;\n  height: 100%;\n  display: none;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\nconst StyledMobileBanner = styled.img`\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\nconst BannerContainer = styled.div`\n  position: relative;\n`\nconst StyledText = styled(Text)`\n  max-width: 350px;\n`\nconst StyledContent = styled.div<{ left: string }>`\n  z-index: 10;\n  height: 45%;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  top: 0;\n  left: 7%;\n  bottom: 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 85%;\n    left: ${({ left }) => (left === 'no_icon' ? '10%' : '15%')};\n  }\n`\n\nconst Banner = ({ src, alt, title, text, mobileSrc, white = false, left = '' }) => {\n  return (\n    <BannerContainer>\n      <StyledMobileBanner src={mobileSrc} alt={alt} />\n      <StyledBanner src={src} alt={alt} />\n      <StyledContent left={left}>\n        <div>\n          <Heading as=\"h1\" size=\"xl\" color={white ? '#FFFFFF' : '#1C1917'} mb=\"10px\">\n            {title}\n          </Heading>\n          <StyledText color={white ? '#FFFFFF' : '#57534E'} fontSize=\"16px\" fontWeight={600}>\n            {text}\n          </StyledText>\n        </div>\n      </StyledContent>\n    </BannerContainer>\n  )\n}\n\nexport default Banner\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync, fetchVaultUserDataAsync } from 'state/actions'\nimport { approve, approveVault } from 'utils/callHelpers'\nimport { getBowAddress, getXbowAddress } from 'utils/addressHelpers'\nimport useGasBoost from './useGasBoost'\nimport { useMasterchef, useArcherswapVault, useBow, useSousChef, useLottery, useERC20 } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account, gasBoostedPrice)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, gasBoostedPrice])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Vault\nexport const useApproveVault = (lpContract: Contract, vaultAddress: string) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const archerswapVaultContract = useArcherswapVault(vaultAddress)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approveVault(lpContract, archerswapVaultContract, account, gasBoostedPrice)\n      dispatch(fetchVaultUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, archerswapVaultContract, gasBoostedPrice])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      let tx\n      if ([0, 8].includes(sousId)) {\n        tx = await approve(lpContract, masterChefContract, account, gasBoostedPrice)\n      } else {\n        tx = await approve(lpContract, sousChefContract, account, gasBoostedPrice)\n      }\n\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, masterChefContract, sousId, gasBoostedPrice])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = (lotteryType) => {\n  const { account } = useWeb3React()\n  const bowContract = useBow()\n  const lotteryContract = useLottery(lotteryType)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(bowContract, lotteryContract, account, gasBoostedPrice)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, bowContract, lotteryContract, gasBoostedPrice])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods\n      .approve(spenderAddress, ethers.constants.MaxUint256)\n      .send({ from: account, gasPrice: gasBoostedPrice })\n    return tx\n  }, [account, spenderAddress, tokenContract, gasBoostedPrice])\n\n  return onApprove\n}\n\n// Approve an IFO\nexport const useXbowApprove = () => {\n  const { gasBoostedPrice } = useGasBoost()\n\n  const { account } = useWeb3React()\n  const tokenContract = useERC20(getBowAddress())\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods\n      .approve(getXbowAddress(), ethers.constants.MaxUint256)\n      .send({ from: account, gasPrice: gasBoostedPrice })\n    return tx\n  }, [account, tokenContract, gasBoostedPrice])\n\n  return onApprove\n}\n","// Set of helper functions to facilitate wallet setup\n\n// import { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add Core Chain as a network on Metamask, or switch to Core Chain if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Core Chain',\n            nativeCurrency: {\n              name: 'Core',\n              symbol: 'CORE',\n              decimals: 18,\n            },\n            rpcUrls: ['https://rpc.coredao.org/', 'https://rpc.archerswap.finance'],\n            blockExplorerUrls: ['https://scan.coredao.org/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the Core Chain on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  isXBOW?: boolean\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  &:focus:not(:disabled) {\n    box-shadow: rgb(14 22 34) 0px 0px 0px 1px, rgb(68 68 68 / 60%) 0px 0px 0px 4px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -30px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  isXBOW = false,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative', marginBottom: '16px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {t('Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && !isXBOW && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'bow',\n    address: '0xb5e184BF5cE631fE8B428dA866C0f4D4124Ad398',\n    isActive: false,\n    isPrivate: true,\n    name: 'The Best AMM+NFT DEX on Core Chain',\n    description:\n      \"ArcherSwap is a crypto world for users to trade, earn, and game. It's the best choice for projects on Core Chain with features including AMM, NFT, and GameFi.\",\n    launchDate: 'Mar. 13',\n    launchTime: '12 PM GMT',\n    saleAmount: '200,000 BOW',\n    raiseAmount: '$50,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://archerswap.finance',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 18,\n    tokenSymbol: 'BOW',\n    releaseTime: 1678716000,\n    campaignId: '511080000',\n    maxDepositAmount: 2500,\n  },\n  {\n    id: 'bow',\n    address: '0x745B5b86493220E61CdEDa9FA1dC0Bf45a974BCE',\n    isActive: false,\n    isPrivate: false,\n    name: 'The Best AMM+NFT DEX on Core Chain',\n    description:\n      \"ArcherSwap is a crypto world for users to trade, earn, and game. It's the best choice for projects on Core Chain with features including AMM, NFT, and GameFi.\",\n    launchDate: 'Mar. 13',\n    launchTime: '3 PM GMT',\n    saleAmount: '400,000 BOW',\n    raiseAmount: '$100,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://archerswap.finance',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 18,\n    tokenSymbol: 'BOW',\n    releaseTime: 1678806000,\n    campaignId: '511080000',\n    maxDepositAmount: 2500,\n  },\n  {\n    id: 'hunter',\n    address: '0x7dBE86C6D0066Ff15FFBCF2B655B1aD977354686',\n    isActive: false,\n    isPrivate: true,\n    name: '$HUNT is a next-generation Core reward token on the Core Chain ecosystem.',\n    description:\n      '$HUNT is a next-generation CORE reward token on the Core Chain ecosystem. 2% of every transaction made with the $HUNT tokens, goes back to holders of $HUNT in Core Chain rewards.',\n    launchDate: 'Mar. 20',\n    launchTime: '12 PM GMT',\n    saleAmount: '200,000 HUNT',\n    raiseAmount: '$72,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://archerswap.finance',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 18,\n    tokenSymbol: 'HUNT',\n    releaseTime: 1678916830,\n    campaignId: '511080000',\n    maxDepositAmount: 1500,\n  },\n  {\n    id: 'hunter',\n    address: '0x082D048107BE772Ec8e38502169fC8C2316D8320',\n    isActive: false,\n    isPrivate: false,\n    name: '$HUNT is a next-generation Core reward token on the Core Chain ecosystem.',\n    description:\n      '$HUNT is a next-generation CORE reward token on the Core Chain ecosystem. 2% of every transaction made with the $HUNT tokens, goes back to holders of $HUNT in Core Chain rewards.',\n    launchDate: 'Mar. 20',\n    launchTime: '3 PM GMT',\n    saleAmount: '300,000 HUNT',\n    raiseAmount: '$120,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://archerswap.finance',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 18,\n    tokenSymbol: 'HUNT',\n    releaseTime: 1678916830,\n    campaignId: '511080000',\n    maxDepositAmount: 2500,\n  },\n  {\n    id: 'miidas',\n    address: '0xE91A4D72b032a302EBa0C9a9Ea5f560833290Ade',\n    isActive: false,\n    isPrivate: true,\n    name: \"The world's multichain NFT marketplace, launchpad and staking pool for both digital and physical assets.\",\n    description:\n      \"Miidas is the world's first and fastest growing NFT Marketplace for both digital and physical assets. It is also the largest NFT platforms in Malaysia, providing an all-in-one multichain platform including a marketplace, launchpad and staking pool for the creators and investors of both physical and digital assets. Miidas NFT is a project verified by CoreDAO, the official decentralized organization developing the Satoshi Plus ecosystem. Miidas currently has over 40k members, 35k NFTs and $900,000.00 volume traded since May 2022.\",\n    launchDate: 'Mar. 27',\n    launchTime: '12 PM GMT',\n    saleAmount: '280,000,000 Miidas',\n    raiseAmount: '$40,040',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://core.miidas.com',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 6,\n    tokenSymbol: 'Miidas',\n    releaseTime: 1679875778,\n    campaignId: '511080000',\n    maxDepositAmount: 150,\n  },\n  {\n    id: 'miidas',\n    address: '0x6438c1ed87d921e152441A2aeC3C6b0986d746aA',\n    isActive: true,\n    isPrivate: false,\n    name: \"The world's multichain NFT marketplace, launchpad and staking pool for both digital and physical assets.\",\n    description:\n      \"Miidas is the world's first and fastest growing NFT Marketplace for both digital and physical assets. It is also the largest NFT platforms in Malaysia, providing an all-in-one multichain platform including a marketplace, launchpad and staking pool for the creators and investors of both physical and digital assets. Miidas NFT is a project verified by CoreDAO, the official decentralized organization developing the Satoshi Plus ecosystem. Miidas currently has over 40k members, 35k NFTs and $900,000.00 volume traded since May 2022.\",\n    launchDate: 'Mar. 28',\n    launchTime: '1 AM GMT',\n    saleAmount: '200,000,000 Miidas',\n    raiseAmount: '$30,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://core.miidas.com',\n    currency: 'WCORE',\n    currencyAddress: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n    currencyDecimals: 18,\n    tokenDecimals: 6,\n    tokenSymbol: 'Miidas',\n    releaseTime: 1679961600,\n    campaignId: '511080000',\n    maxDepositAmount: 100,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { allTimeVolumeQuery } from '../../apollo/queries'\nimport { bowClient } from '../../apollo/client'\nimport { AllTimeState } from '../types'\n\nconst initialState: AllTimeState = { untrackedVolumeUSD: 0 }\n\nexport const allTimeVolumeSlice = createSlice({\n  name: 'AllTimeVolume',\n  initialState,\n  reducers: {\n    setAllTimeVolumePublicData: (state, action) => {\n      state.untrackedVolumeUSD = parseFloat(action.payload)\n    },\n  },\n})\n\n// Actions\nexport const { setAllTimeVolumePublicData } = allTimeVolumeSlice.actions\n\n// Thunks\nexport const fetchAllTimeVolumePublicDataAsync = () => async (dispatch) => {\n  const result = await bowClient.query({\n    query: allTimeVolumeQuery,\n    variables: {},\n    fetchPolicy: 'no-cache',\n  })\n\n  if (result?.data?.uniswapFactories[0]?.untrackedVolumeUSD) {\n    dispatch(setAllTimeVolumePublicData(result?.data?.uniswapFactories[0]?.untrackedVolumeUSD))\n  }\n}\n\nexport default allTimeVolumeSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport dayjs from 'dayjs'\nimport { GET_BLOCKS, TOTAL_VOLUME_DATA } from '../../apollo/queries'\nimport { blockClient, bowClient } from '../../apollo/client'\nimport { OneDayState } from '../types'\n\nconst initialState: OneDayState = { oneDayVolumeUSD: 0 }\n\nexport const oneDayVolumeSlice = createSlice({\n  name: 'OneDayVolume',\n  initialState,\n  reducers: {\n    setOneDayVolumePublicData: (state, action) => {\n      state.oneDayVolumeUSD = parseFloat(action.payload)\n    },\n  },\n})\n\n// Actions\nexport const { setOneDayVolumePublicData } = oneDayVolumeSlice.actions\n\nexport async function splitQuery(query, localClient, vars, list) {\n  let fetchedData = {}\n  const skip = 0\n  const end = list.length\n  const sliced = list.slice(skip, end)\n  const result = await localClient.query({\n    query: query(...vars, sliced),\n    fetchPolicy: 'cache-first',\n  })\n  fetchedData = {\n    ...fetchedData,\n    ...result.data,\n  }\n\n  return fetchedData\n}\n\n// Thunks\nexport const fetchOneDayVolumePublicDataAsync = () => async (dispatch) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n\n  const fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], [utcOneDayBack])\n\n  const blocks = []\n  if (fetchedData) {\n    Object.keys(fetchedData).forEach((key) => {\n      if (fetchedData[key].length > 0) {\n        blocks.push({\n          timestamp: key.split('t')[1],\n          number: fetchedData[key][0].number,\n        })\n      }\n    })\n  }\n  const result = await bowClient.query({\n    query: TOTAL_VOLUME_DATA(),\n    fetchPolicy: 'cache-first',\n  })\n\n  // fetch the historical data\n  const oneDayResult = await bowClient.query({\n    query: TOTAL_VOLUME_DATA(blocks[0]?.number),\n    fetchPolicy: 'cache-first',\n  })\n\n  if (result?.data?.uniswapFactories[0]?.totalVolumeUSD && oneDayResult?.data?.uniswapFactories[0]?.totalVolumeUSD) {\n    dispatch(\n      setOneDayVolumePublicData(\n        Number(result?.data?.uniswapFactories[0]?.totalVolumeUSD) -\n          Number(oneDayResult?.data?.uniswapFactories[0]?.totalVolumeUSD),\n      ),\n    )\n  }\n}\n\nexport default oneDayVolumeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Block } from '../types'\n\nconst initialState: Block = { blockNumber: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const data = await request(\n      profileSubgraphApi,\n      gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n    )\n    return data.user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from 'archerswap-uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 20000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n// import { getWeb3NoAccount } from 'utils/web3'\n// import { AbiItem } from 'web3-utils'\n// import UniV2LPABI from 'config/abi/UniV2LP.json'\n// import BigNumber from 'bignumber.js'\n\n// const web3 = getWeb3NoAccount()\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const tempData = {\n    prices: {\n      spirit: 0,\n    },\n    update_at: null,\n  }\n\n  // const dexData = await bowClient.query({\n  //   query: allPricesQuery,\n  //   variables: {},\n  //   fetchPolicy: 'no-cache',\n  // })\n\n  // if (dexData?.data) {\n  //   const tokens = dexData.data.tokens\n  //   for (let i = 0; i < tokens.length; i++) {\n  //     if (tokens[i].tokenDayData.length > 0) {\n  //       tempData.prices[tokens[i].symbol.toLowerCase()] = tokens[i].tokenDayData[0].priceUSD\n  //     }\n  //   }\n  // }\n  const data = tempData as PriceApiResponse\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from 'archerswap-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${  uri.substr(4)}`, uri]\n    case 'ipfs':\n      // eslint-disable-next-line\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      // eslint-disable-next-line\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from 'archerswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n\nconst StyledTag = styled(Tag)`\n  font-weight: 500;\n`\n\nconst CoreTag = (props) => {\n  const { t } = useTranslation()\n  return (\n    <StyledTag variant=\"text\" outline startIcon={<VerifiedIcon />} {...props}>\n      {t('Core')}\n    </StyledTag>\n  )\n}\n\nconst CommunityTag = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"text\" outline startIcon={<CommunityIcon />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag = (props) => (\n  <Tag variant=\"text\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, DualTag }\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = 'https://archerswap.finance'\nexport const LS_KEY = 'archerswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState, Language } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { ChainId } from 'archerswap-sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x40fcd694c9ebbc46a2230ad498fbde11ae0111a8', // TODO\n  [ChainId.BSCTESTNET]: '0x40fcd694c9ebbc46a2230ad498fbde11ae0111a8',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getBowContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getMutiContract,\n  getAnyswapV5RouterContract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getArcherswapStrategyContract,\n  getArcherswapVaultContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getXbowContract,\n  getErc721Contract,\n  getNftMarketplaceContract,\n  getWcoreContract,\n  getHunterContract,\n  getKyudoNftContract,\n} from 'utils/contractHelpers'\n// exchange imports\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from 'archerswap-sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport CREATE_LP_ABI from '../constants/abis/createLpAbi.json'\nimport LP_TOKEN_ABI from '../constants/abis/lpTokenAbi.json'\n\nimport SWAP_MINING_ABI from '../constants/abis/swapMining.json'\nimport { SWAP_MINING_ADDRESS } from '../constants'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport { getContract } from '../utils'\nimport { useActiveWeb3React } from './index'\nimport lpTokens from '../constants/lpToken/index.json'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\nexport const useWcore = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getWcoreContract(web3), [web3])\n}\nexport const useBow = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBowContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = (lotteryType: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3, lotteryType), [web3, lotteryType])\n}\n\nexport const useLotteryTicket = (lotteryType: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3, lotteryType), [web3, lotteryType])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useMuti = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMutiContract(web3), [web3])\n}\n\nexport const useAnyswapV5 = (routerAddress: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getAnyswapV5RouterContract(web3, routerAddress), [web3, routerAddress])\n}\n\nexport const useArcherswapStrategy = (strategyAddress: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getArcherswapStrategyContract(web3, strategyAddress), [web3, strategyAddress])\n}\n\nexport const useArcherswapVault = (vaultAddress: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getArcherswapVaultContract(web3, vaultAddress), [web3, vaultAddress])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useXbow = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getXbowContract(web3), [web3])\n}\n\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useMarketplace = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getNftMarketplaceContract(web3), [web3])\n}\n\nexport const useHunter = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getHunterContract(web3), [web3])\n}\n\nexport const useKyudoNft = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getKyudoNftContract(web3), [web3])\n}\n\n\n// exchange hooks\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport const useZapContract = (zapAddress?: string, withSignerIfPossible?: boolean) => {\n  return useContract(zapAddress, CREATE_LP_ABI, withSignerIfPossible)\n}\n\nexport const useLpTokenFromSymbol = (symbol: string, withSignerIfPossible?: boolean) => {\n  return useContract(lpTokens.archerswap[symbol].lpAddresses, LP_TOKEN_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.BSCTESTNET:\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n\nexport function useSwapMiningContract(): Contract | null {\n  return useContract(SWAP_MINING_ADDRESS, SWAP_MINING_ABI, true)\n}\n","import { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as any, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B'\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from 'archerswap-sdk'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst SCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1116: '',\n  1115: '',\n}\n\nexport function getSnowtraceLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\n  const prefix = `https://${SCAN_PREFIXES[chainId] || SCAN_PREFIXES[ChainId.MAINNET]}scan.coredao.org`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[3] }\n}\n\nexport default parseENSAddress\n","import farmsConfig from './farms'\nimport vaultsConfig from './vaults'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\nconst communityVaults = vaultsConfig.filter((vault) => vault.isCommunity).map((vault) => vault.token.symbol)\n\nexport { farmsConfig, communityFarms }\nexport { vaultsConfig, communityVaults }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_ABI }\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  fetchVaultUserDataAsync,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest, harvestVault } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef, useArcherswapStrategy } from './useContract'\nimport useGasBoost from './useGasBoost'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account, gasBoostedPrice)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract, gasBoostedPrice])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account, gasBoostedPrice)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract, gasBoostedPrice])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleHarvest = useCallback(async () => {\n    if ([0, 8].includes(sousId)) {\n      await harvest(masterChefContract, sousId, account, gasBoostedPrice)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account, gasBoostedPrice)\n    } else {\n      await soushHarvest(sousChefContract, account, gasBoostedPrice)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, gasBoostedPrice])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useVaultHarvest = (strategyAddress: string) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const archerswapStrategyContract = useArcherswapStrategy(strategyAddress)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvestVault(archerswapStrategyContract, account, gasBoostedPrice)\n    dispatch(fetchVaultUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, archerswapStrategyContract, gasBoostedPrice])\n\n  return { onReward: handleHarvest }\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      } \n        return `ipns://${toB58String(cid.multihash)}`\n      \n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\n// bakeryswap defaultTokenJson\nimport { DEFAULT_TOKEN_LIST_URL } from '../constants/lists'\nimport defaultTokenJson from '../constants/token/archerswap.json'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>\n): Promise<TokenList> {\n  if (listUrl === DEFAULT_TOKEN_LIST_URL) {\n    return defaultTokenJson\n  }\n  const parsedENS = parseENSAddress(listUrl)\n\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32'\n      }\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32'\n      }\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from 'archerswap-sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getNetworkLibrary, NETWORK_CHAIN_ID } from '../connectors'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\nimport { useActiveWeb3React } from './index'\n\nexport function useFetchListCallback(): (listUrl: string) => Promise<TokenList> {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (!library || chainId !== ChainId.MAINNET) {\n        if (NETWORK_CHAIN_ID === ChainId.MAINNET) {\n          const networkLibrary = getNetworkLibrary()\n          if (networkLibrary) {\n            return resolveENSContentHash(ensName, networkLibrary)\n          }\n        }\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library]\n  )\n\n  return useCallback(\n    async (listUrl: string) => {\n      const requestId = nanoid()\n      dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          throw error\n        })\n    },\n    [dispatch, ensResolver]\n  )\n}\n\nexport default useFetchListCallback\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport {\n  fetchFarmUserDataAsync,\n  fetchVaultUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n} from 'state/actions'\nimport { stake, stakeVault, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport vaultsConfig from 'config/constants/vaults'\nimport { useMasterchef, useSousChef, useArcherswapVault } from './useContract'\nimport useGasBoost from './useGasBoost'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account, gasBoostedPrice)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, gasBoostedPrice],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if ([0, 8].includes(sousId)) {\n        await stake(masterChefContract, sousId, amount, account, gasBoostedPrice, decimals)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account, gasBoostedPrice)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account, gasBoostedPrice)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, gasBoostedPrice],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useStakeVault = (vaultAddress: string, tokenBalance: BigNumber) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const archerswapVaultContract = useArcherswapVault(vaultAddress)\n  const vaultInfo = vaultsConfig.find((v) => getAddress(v.vaultAddresses) === vaultAddress)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleStakeVault = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeVault(\n        vaultInfo.lpSymbol === 'CORE',\n        archerswapVaultContract,\n        amount,\n        account,\n        tokenBalance.isEqualTo(new BigNumber(amount).times(new BigNumber(10).pow(18))),\n        gasBoostedPrice,\n      )\n      dispatch(fetchVaultUserDataAsync(account))\n      return txHash\n    },\n    [account, vaultInfo, tokenBalance, dispatch, archerswapVaultContract, gasBoostedPrice],\n  )\n\n  return { onStake: handleStakeVault }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport {\n  fetchFarmUserDataAsync,\n  fetchVaultUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { getAddress } from 'utils/addressHelpers'\nimport { unstake, unstakeVault, sousUnstake } from 'utils/callHelpers'\nimport vaultsConfig from 'config/constants/vaults'\nimport { useMasterchef, useSousChef, useArcherswapVault } from './useContract'\nimport useGasBoost from './useGasBoost'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, gasBoostedPrice)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, gasBoostedPrice],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if ([0, 8].includes(sousId)) {\n        const txHash = await unstake(masterChefContract, sousId, amount, account, gasBoostedPrice, decimals)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account, gasBoostedPrice)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, masterChefContract, sousChefContract, sousId, gasBoostedPrice],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useUnstakeVault = (vaultAddress: string, stakedBalance: BigNumber) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const archerswapVaultContract = useArcherswapVault(vaultAddress)\n  const vaultInfo = vaultsConfig.find((v) => getAddress(v.vaultAddresses) === vaultAddress)\n  const { gasBoostedPrice } = useGasBoost()\n\n  const handleUnstakeVault = useCallback(\n    async (amount: string) => {\n      const txHash = await unstakeVault(\n        vaultInfo.lpSymbol === 'CORE',\n        archerswapVaultContract,\n        amount,\n        account,\n        stakedBalance.isEqualTo(new BigNumber(amount).times(new BigNumber(10).pow(18))),\n        gasBoostedPrice,\n      )\n      dispatch(fetchVaultUserDataAsync(account))\n      return txHash\n    },\n    [account, vaultInfo, stakedBalance, dispatch, archerswapVaultContract, gasBoostedPrice],\n  )\n\n  return { onUnstake: handleUnstakeVault }\n}\n\nexport default useUnstake\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Web3 from 'web3'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getBowAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getMultiAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getXbowAddress,\n  getFactoryAddress,\n  getNftMarketplaceAddress,\n  getWcoreAddress,\n  getHunterAddress,\n  getKyudoNftAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport bowAbi from 'config/abi/bow.json'\nimport ifoAbi from 'config/abi/ifo.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryCoreAbi from 'config/abi/lotteryCore.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport multi from 'config/abi/multiSender.json'\nimport anyswapV5Router from 'config/abi/anyswapV5Router.json'\nimport archerswapStrategy from 'config/abi/archerswapStrategy.json'\nimport archerswapVault from 'config/abi/archerswapVault.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport xbowAbi from 'config/abi/xbow.json'\nimport factoryAbi from 'config/abi/factory.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport nftMarketplaceAbi from 'config/abi/nftMarketplace.json'\nimport wcoreABI from 'config/abi/wcore.json'\nimport hunterABI from 'config/abi/hunter.json'\nimport nftABI from 'config/abi/NFT.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getIfoContract = (address: string, web3?: Web3) => {\n  return getContract(ifoAbi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.CORE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getBowContract = (web3?: Web3) => {\n  return getContract(bowAbi, getBowAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3, lotteryType?: string) => {\n  if (lotteryType === 'bow') return getContract(lotteryAbi, getLotteryAddress(lotteryType), web3)  \n  return getContract(lotteryCoreAbi, getLotteryAddress(lotteryType), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3, lotteryType?: string) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(lotteryType), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getMutiContract = (web3?: Web3) => {\n  return getContract(multi, getMultiAddress(), web3)\n}\nexport const getAnyswapV5RouterContract = (web3?: Web3, routerAddress?: string) => {\n  return getContract(anyswapV5Router, routerAddress, web3)\n}\nexport const getArcherswapStrategyContract = (web3?: Web3, strategyAddress?: string) => {\n  return getContract(archerswapStrategy, strategyAddress, web3)\n}\nexport const getArcherswapVaultContract = (web3?: Web3, vaultAddress?: string) => {\n  // const vaultInfo = vaultsConfig.find((v) => getAddress(v.vaultAddresses) === vaultAddress)\n  return getContract(archerswapVault, vaultAddress, web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getXbowContract = (web3?: Web3) => {\n  return getContract(xbowAbi, getXbowAddress(), web3)\n}\nexport const getFactoryContract = (web3?: Web3) => {\n  return getContract(factoryAbi, getFactoryAddress(), web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return address ? getContract(erc721Abi, address, web3) : null\n}\nexport const getNftMarketplaceContract = (web3?: Web3) => {\n  return getContract(nftMarketplaceAbi, getNftMarketplaceAddress(), web3)\n}\nexport const getWcoreContract = (web3?: Web3) => {\n  return getContract(wcoreABI, getWcoreAddress(), web3)\n}\nexport const getHunterContract = (web3?: Web3) => {\n  return getContract(hunterABI, getHunterAddress(), web3)\n}\nexport const getKyudoNftContract = (web3?: Web3) => {\n  return getContract(nftABI, getKyudoNftAddress(), web3)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from 'archerswap-uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner img=\"/logo.png\" size={75} />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getBowAddress, getLotteryAddress, getXbowAddress } from 'utils/addressHelpers'\nimport { useERC20, useBow } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = (lotteryType) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const bowContract = useBow()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await bowContract.methods.allowance(account, getLotteryAddress(lotteryType)).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, bowContract, fastRefresh, lotteryType])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n// Retrieve Xbow allowance\nexport const useXbowAllowance = (update: boolean): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const tokenContract = useERC20(getBowAddress())\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, getXbowAddress()).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    if (account) {\n      fetch()\n    }\n  }, [account, tokenContract, fastRefresh, update])\n\n  return allowance\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 50%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n    ${({ theme }) => theme.mediaQueries.xl} {\n      max-width: 30%;\n      min-width: 180px;\n    }\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js'\nimport { SECONDS_PER_YEAR, BOW_PER_BLOCK, VAULTS_DISTRIBUTION_PERCENTAGE } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerSecond Amount of new bow allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerSecond: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerSecond).times(SECONDS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param bowPriceUSD BOW price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApy = (\n  poolWeight: BigNumber,\n  bowPriceUSD: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  tokenPerSecond: BigNumber,\n): number => {\n  const yearlyCakeRewardAllocation = tokenPerSecond.times(SECONDS_PER_YEAR).times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(bowPriceUSD).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\nexport const compound = (r, p = 1, n = 365, t = 1) => (1 + (p * r) / (n * t)) ** (n * t) - 1\n\n/**\n * Get vault APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getVaultApy = (\n  poolWeight: BigNumber,\n  rewardPriceUSD: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  provider?: string,\n): number => {\n  const yearlyBowRewardAllocation = BOW_PER_BLOCK.times(SECONDS_PER_YEAR).times(poolWeight)\n  const _apy = yearlyBowRewardAllocation.times(rewardPriceUSD).div(poolLiquidityUsd).toString(10)\n  const apy = new BigNumber(compound(_apy, VAULTS_DISTRIBUTION_PERCENTAGE, 365, 1)).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","const tokens = {\n  core: {\n    symbol: 'CORE',\n    projectLink: 'https://coredao.org/',\n  },\n  bow: {\n    symbol: 'BOW',\n    address: {\n      1116: '0x1a639e150d2210a4be4a5f0857a9151b241e7ae4',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://archerswap.finance/',\n  },\n  xbow: {\n    symbol: 'xBOW',\n    address: {\n      1116: '0x236994dabb4e7ffb85bf76889cec8ff9ca543ba4',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://archerswap.finance/',\n  },\n  wcore: {\n    symbol: 'WCORE',\n    address: {\n      1116: '0x40375c92d9faf44d2f9db9bd9ba41a3317a2404f',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coredao.org/',\n  },\n  hunt: {\n    symbol: 'HUNT',\n    address: {\n      1116: '0x962D45C91e2e4f29DdC96C626976ECE600908Ba6',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://archerswap.finance/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      1116: '0x900101d06A7426441Ae63e9AB3B9b0F63Be145F1',\n      1115: '',\n    },\n    decimals: 6,\n    projectLink: 'https://tether.to/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      1116: '0xa4151B2B3e269645181dCcF2D426cE75fcbDeca9',\n      1115: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.centre.io/',\n  },\n  // dai: {\n  //   symbol: 'DAI',\n  //   address: {\n  //     1116: '0x6De33698e9e9b787e09d3Bd7771ef63557E148bb',\n  //     1115: '',\n  //   },\n  //   decimals: 18,\n  //   projectLink: 'https://makerdao.com/',\n  // },\n  eth: {\n    symbol: 'WETH',\n    address: {\n      1116: '0xeAB3aC417c4d6dF6b143346a46fEe1B847B50296',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://weth.io/',\n  },\n  fourToken: {\n    symbol: '4TOKEN',\n    address: {\n      1116: '0x98564E70c7fCC6d947fFE6d9EfeD5ba68b306F2E',\n      1115: '',\n    },\n    decimals: 18,\n    projectLink: 'https://4ignorefud.com',\n  },\n  // btc: {\n  //   symbol: 'WBTC',\n  //   address: {\n  //     1116: '0xad543f18cFf85c77E140E3E5E3c3392f6Ba9d5CA',\n  //     1115: '',\n  //   },\n  //   decimals: 18,\n  //   projectLink: 'https://www.wbtc.network/',\n  // },\n  // matic: {\n  //   symbol: 'MATIC',\n  //   address: {\n  //     1116: '0xdd90E5E87A2081Dcf0391920868eBc2FFB81a1aF',\n  //     1115: '',\n  //   },\n  //   decimals: 18,\n  //   projectLink: 'https://polygon.technology/',\n  // },\n  // bnb: {\n  //   symbol: 'WBNB',\n  //   address: {\n  //     1116: '0x7f27352D5F83Db87a5A3E00f4B07Cc2138D8ee52',\n  //     1115: '',\n  //   },\n  //   decimals: 18,\n  //   projectLink: 'https://www.binance.com/',\n  // },\n  // busd: {\n  //   symbol: 'BUSD',\n  //   address: {\n  //     1116: '0x4Bf769b05E832FCdc9053fFFBC78Ca889aCb5E1E',\n  //     1115: '',\n  //   },\n  //   decimals: 18,\n  //   projectLink: 'https://www.binance.com/',\n  // },\n}\n\nexport default tokens\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { fetchVaultsPublicDataAsync, fetchVaultUserDataAsync } from './vaults'\nexport { fetchAllTimeVolumePublicDataAsync } from './allTimeVolume'\nexport { fetchOneDayVolumePublicDataAsync } from './oneDayVolume'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account, gasBoostedPrice) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account, gasPrice: gasBoostedPrice })\n}\n\nexport const approveVault = async (lpContract, archerswapVaultContract, account, gasBoostedPrice) => {\n  return lpContract.methods\n    .approve(archerswapVaultContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account, gasPrice: gasBoostedPrice })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, gasBoostedPrice, decimals = 18) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(\n  //       new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n  //     )\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .deposit(\n      pid,\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account, gasBoostedPrice) => {\n  return sousChefContract.methods\n    .deposit(\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account, gasBoostedPrice) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gasPrice: gasBoostedPrice,\n      value: new BigNumber(amount).times(new BigNumber(10).pow(18)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, gasBoostedPrice, decimals = 18) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(\n  //       new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n  //     )\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(\n      pid,\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account, gasBoostedPrice) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0xFD919978845247e147364F0A1f1565AAC4Fcd472') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x8825a44182b94641f9299C32EF44D21235563EF7') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account, gasBoostedPrice) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account, gasBoostedPrice) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account, gasPrice: gasBoostedPrice })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account, gasBoostedPrice) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account, gasBoostedPrice) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0), gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvestVault = async (archerswapStrategyContract, account, gasBoostedPrice) => {\n  return archerswapStrategyContract.methods\n    .harvest()\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const stakeVault = async (\n  isCORE,\n  archerswapVaultContract,\n  amount,\n  account,\n  depositAll,\n  gasBoostedPrice,\n  decimals = 18,\n) => {\n  if (depositAll && !isCORE) {\n    return archerswapVaultContract.methods\n      .depositAll()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  if (isCORE) {\n    return archerswapVaultContract.methods\n      .depositBNB()\n      .send({\n        from: account,\n        value: new BigNumber(amount)\n          .times(new BigNumber(10).pow(decimals))\n          .integerValue(BigNumber.ROUND_FLOOR)\n          .toString(),\n        gasPrice: gasBoostedPrice,\n      })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return archerswapVaultContract.methods\n    .deposit(\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstakeVault = async (\n  isCORE,\n  archerswapVaultContract,\n  amount,\n  account,\n  withdrawAll,\n  gasBoostedPrice,\n  decimals = 18,\n) => {\n  if (withdrawAll && !isCORE) {\n    return archerswapVaultContract.methods\n      .withdrawAll()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  if (withdrawAll && isCORE) {\n    return archerswapVaultContract.methods\n      .withdrawAllBNB()\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  const pricePerFullShareWei = await archerswapVaultContract.methods.getPricePerFullShare().call()\n  const shares = new BigNumber(amount).times(new BigNumber(10).pow(decimals)).div(pricePerFullShareWei).toString()\n  if (isCORE) {\n    return archerswapVaultContract.methods\n      .withdrawBNB(\n        new BigNumber(shares).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n      )\n      .send({ from: account, gasPrice: gasBoostedPrice })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return archerswapVaultContract.methods\n    .withdraw(\n      new BigNumber(shares).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString(),\n    )\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const buyTickets = async (\n  lotteryContract,\n  lotteryId,\n  ticketAmount,\n  ticketPrice,\n  ticketNumbers,\n  account,\n  gasBoostedPrice,\n  lotteryType,\n) => {\n  return lotteryContract.methods\n    .batchBuyLottoTicket(lotteryId, ticketAmount, ticketNumbers)\n    .send({\n      from: account,\n      gasPrice: gasBoostedPrice,\n      value: lotteryType === 'core' ? new BigNumber(ticketPrice).times(1e18).toString(10) : undefined,\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimReward = async (lotteryContract, lotteryId, ticketIds, account, gasBoostedPrice) => {\n  return lotteryContract.methods\n    .batchClaimRewards(lotteryId, ticketIds)\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const xbowStake = async (xbowContract, amount, account, gasBoostedPrice, decimals = 18) => {\n  return xbowContract.methods\n    .enter(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString())\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const xbowUnstake = async (xbowContract, amount, account, gasBoostedPrice, decimals = 18) => {\n  return xbowContract.methods\n    .leave(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).integerValue(BigNumber.ROUND_FLOOR).toString())\n    .send({ from: account, gasPrice: gasBoostedPrice })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library.provider) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library.provider) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { BigNumber } from 'bignumber.js'\nimport web3NoAccount from 'utils/web3'\n\nimport { useState, useEffect } from 'react'\n\nconst GAS_MULTIPLIER = 1.5\nconst useGasBoost = () => {\n  const [gasBoostedPrice, setGasBoostedPrice] = useState(0)\n  const isGasBoostEnabled = window?.localStorage?.getItem('isGasBoostEnabled') || false\n\n  useEffect(() => {\n    const fetchWeb3GasPrice = async () => {\n      const web3GasPrice = await web3NoAccount.eth.getGasPrice()\n      setGasBoostedPrice(\n        isGasBoostEnabled === 'true'\n          ? parseInt(new BigNumber(web3GasPrice).multipliedBy(GAS_MULTIPLIER).toString())\n          : parseInt(new BigNumber(web3GasPrice).toString()),\n      )\n    }\n    fetchWeb3GasPrice()\n  }, [isGasBoostEnabled])\n\n  return { gasBoostedPrice }\n}\nexport default useGasBoost\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","const CACHE_KEY = 'IS_DARK'\n\nexport function getThemeCache(): boolean | null {\n  let cache = null\n  try {\n    const rawCache = localStorage.getItem(CACHE_KEY)\n    if (rawCache) {\n      cache = JSON.parse(rawCache)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  return cache\n}\n\nexport function setThemeCache(isDark: boolean) {\n  try {\n    localStorage.setItem(CACHE_KEY, JSON.stringify(isDark))\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from 'archerswap-uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport useBowInfo from 'hooks/useBowInfo'\nimport { getHunterCoreLPAddress, getHunterAddress } from 'utils/addressHelpers'\nimport multicall from 'utils/multicall'\nimport LpAbi from 'config/abi/UniV2LP.json'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchVaultsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchAllTimeVolumePublicDataAsync,\n  fetchOneDayVolumePublicDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport {\n  State,\n  Farm,\n  Pool,\n  Vault,\n  Block,\n  ProfileState,\n  TeamsState,\n  AchievementState,\n  AllTimeState,\n  OneDayState,\n} from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchVaultsPublicDataAsync())\n    dispatch(fetchAllTimeVolumePublicDataAsync())\n    dispatch(fetchOneDayVolumePublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm && farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm && farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm && farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm && farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Vaults\n\nexport const useValuts = (): Vault[] => {\n  const vaults = useSelector((state: State) => state.vaults.data)\n  return vaults\n}\n\nexport const useVaultFromPid = (pid, provider): Vault => {\n  const vault = useSelector((state: State) => state.vaults.data.find((f) => f.pid === pid && f.provider === provider))\n  return vault\n}\n\nexport const useVaultFromSymbol = (lpSymbol: string): Vault => {\n  const vault = useSelector((state: State) => state.vaults.data.find((f) => f.lpSymbol === lpSymbol))\n  return vault\n}\n\nexport const useVaultUser = (pid, provider) => {\n  const vault = useVaultFromPid(pid, provider)\n\n  return {\n    allowance: vault && vault.userData ? new BigNumber(vault.userData.allowance) : new BigNumber(0),\n    tokenBalance: vault && vault.userData ? new BigNumber(vault.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: vault && vault.userData ? new BigNumber(vault.userData.stakedBalance) : new BigNumber(0),\n    earnings: vault && vault.userData ? new BigNumber(vault.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// All Time Volume\n\nexport const useAllTimeVolume = (): AllTimeState => {\n  const data = useSelector((state: State) => state.allTimeVolume)\n  return data\n}\n\n// All Time Volume\n\nexport const useOneDayVolume = (): OneDayState => {\n  const data = useSelector((state: State) => state.oneDayVolume)\n  return data\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\n// Block\nexport const useBlock = (): Block => {\n  return useSelector((state: State) => state.block)\n}\n\nconst defaultFetcher = (url) => fetch(url).then((res) => res.json())\nexport function useCoingeckoPrices(url: string, defaultValue: number, symbol, fetcher = defaultFetcher) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [data, setData] = useState(defaultValue)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true)\n        const temp = await fetcher(url)\n        setData(temp[symbol].usd)\n      } catch (ex) {\n        console.error(ex)\n        setError(ex)\n      }\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [url, symbol, fetcher])\n\n  return [data, loading, error]\n}\n\n// Prices\nexport const usePriceCoreUsd = (): BigNumber => {\n  // const url = `https://api.coingecko.com/api/v3/simple/price?ids=coredaoorg&vs_currencies=usd`\n  // const [res, loading, error] = useCoingeckoPrices(url, 3, 'coredaoorg')\n  // return new BigNumber(res)\n  const pid = 4 // CORE-USDC LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBowUsd = (): BigNumber => {\n  const pid = 1 // BOW-CORE LP\n  const corePriceUSD = usePriceCoreUsd()\n  const farm = useFarmFromPid(pid)\n  const price = farm.tokenPriceVsQuote ? corePriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  return price.isZero() ? new BigNumber(0.25) : price\n}\n\nexport const usePriceEthUsd = (): BigNumber => {\n  // const url = `https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd`\n  // const [res, loading, error] = useCoingeckoPrices(url, 1500, 'ethereum')\n  // return new BigNumber(res)\n  const pid = 6 // WETH-USDT LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? farm.tokenPriceVsQuote : ZERO\n}\n\nexport const usePrice4TokenUsd = (): BigNumber => {\n  const pid = 10 // 4TOKEN-WCORE LP\n  const corePriceUSD = usePriceCoreUsd()\n  const farm = useFarmFromPid(pid)\n  const price = farm.tokenPriceVsQuote ? corePriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  return price\n}\n\nexport const useGetApiPrices = () => {\n  // const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  const corePriceUSD = usePriceCoreUsd()\n  const bowPriceUSD = usePriceBowUsd()\n  const ethPriceUSD = usePriceEthUsd()\n  const { xbowRatio } = useBowInfo()\n  const huntPriceUSD = usePriceHunterUsd()\n  const fourTokenPriceUSD = usePrice4TokenUsd()\n\n  return {\n    usdt: new BigNumber(1),\n    usdc: new BigNumber(1),\n    dai: new BigNumber(1),\n    busd: new BigNumber(1),\n    weth: ethPriceUSD,\n    wcore: corePriceUSD,\n    bow: bowPriceUSD,\n    xbow: bowPriceUSD.times(xbowRatio),\n    hunt: huntPriceUSD,\n    '4token': fourTokenPriceUSD,\n  }\n}\n\nexport const usePriceHunterUsd = (): BigNumber => {\n  const [priceInCore, setPriceInCore] = useState(new BigNumber(0))\n  const corePriceUSD = usePriceCoreUsd()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const calls = []\n      calls.push({ address: getHunterCoreLPAddress(), name: 'token0', params: [] })\n      calls.push({ address: getHunterCoreLPAddress(), name: 'getReserves', params: [] })\n\n      const data = await multicall(LpAbi, calls)\n\n      const token0 = data[0][0]\n      const reserve0 = data[1][0]\n      const reserve1 = data[1][1]\n      if (reserve0.gt(0)) {\n        if (token0.toLowerCase() === getHunterAddress().toLowerCase()) {\n          setPriceInCore(new BigNumber(reserve1.toString()).div(new BigNumber(reserve0.toString())))\n        } else {\n          setPriceInCore(new BigNumber(reserve0.toString()).div(new BigNumber(reserve1.toString())))\n        }\n      }\n    }\n\n    fetch()\n  }, [fastRefresh])\n\n  return priceInCore.gt(0) ? priceInCore.times(corePriceUSD) : new BigNumber(0.4)\n}\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getBalanceBigNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\n\nexport const getMultifyBigNumber = (balance: BigNumber, decimals = 18) => {\n  return balance.times(new BigNumber(10).pow(decimals))\n}\n","import { VaultConfig } from './types'\n\nconst vaults: VaultConfig[] = []\n\nexport default vaults\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from 'archerswap-sdk'\nimport { connectorLocalStorageKey } from 'archerswap-uikit'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey)\n      if (isAuthorized && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else if (isMobile && window.ethereum && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((e) => {\n          console.error('Failed to activate after chain changed', e)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((e) => {\n            console.error('Failed to activate after accounts changed', e)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.xbow,\n    earningToken: tokens.bow,\n    contractAddress: {\n      1115: '',\n      1116: '0xdbf74f167a4e0b97a072c7ed51df6c6e8ec0353b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerSecond: '0',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 1,\n    stakingToken: tokens.xbow,\n    earningToken: tokens.hunt,\n    contractAddress: {\n      1115: '',\n      1116: '0xCDbfc330f64b122205F29e9394233cD1ebffbCa0',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerSecond: '0.002893',\n    sortOrder: 1,\n    isFinished: false,\n    depositFee: 0,\n  },\n  {\n    sousId: 2,\n    stakingToken: tokens.xbow,\n    earningToken: tokens.wcore,\n    contractAddress: {\n      1115: '',\n      1116: '0x87bB2fE70b7129AA168FF7e6679e424eEF4261F0',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerSecond: '0.000964506',\n    sortOrder: 2,\n    isFinished: false,\n    depositFee: 0,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.hunt,\n    earningToken: tokens.bow,\n    contractAddress: {\n      1115: '',\n      1116: '0xdbf74f167a4e0b97a072c7ed51df6c6e8ec0353b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerSecond: '0',\n    sortOrder: 3,\n    isFinished: false,\n  },\n  {\n    sousId: 3,\n    stakingToken: tokens.xbow,\n    earningToken: tokens.fourToken,\n    contractAddress: {\n      1115: '',\n      1116: '0x05fB00a7F695473E166616C3c3Fc472dda95f2DA',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerSecond: '51.440329',\n    sortOrder: 4,\n    isFinished: false,\n    depositFee: 0,\n  },\n]\n\nexport default pools\n","import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string\n        success: boolean\n        summary?: string\n      }\n    }\n  | {\n      listUpdate: {\n        listUrl: string\n        oldList: TokenList\n        newList: TokenList\n        auto: boolean\n      }\n    }\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'app/addPopup'\n)\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl, { getNodeUrlFromChain } from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nconst getWeb3NoAccountFromChain = (chainId: string) => {\n  const httpProviderFromChain = new Web3.providers.HttpProvider(getNodeUrlFromChain(chainId), {\n    timeout: 10000,\n  } as HttpProviderOptions)\n  return new Web3(httpProviderFromChain)\n}\n\nexport { getWeb3NoAccount, getWeb3NoAccountFromChain }\nexport default web3NoAccount\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1]\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n"],"sourceRoot":""}