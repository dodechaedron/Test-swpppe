{"version":3,"sources":["state/transactions/hooks.tsx","components/CardNav/index.tsx","components/PageHeader/SlippageToleranceSetting.tsx","components/PageHeader/TransactionDeadlineSetting.tsx","components/PageHeader/SettingsModal.tsx","components/PageHeader/RecentTransactionsModal.tsx","components/PageHeader/index.tsx","hooks/useGetApiPrices.ts","hooks/useBalanceFromAddress.ts","hooks/useCreateLp.ts","views/Zapin/index.tsx"],"names":["useTransactionAdder","useActiveWeb3React","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","s","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","Object","keys","some","receipt","StyledNav","styled","div","TabContainer","TabItem","Link","props","active","theme","colors","tertiary","textSubtle","Bridge","a","Nav","activeIndex","React","useState","activeTab","TranslateString","useI18n","id","to","style","borderRadius","href","target","StyledSlippageToleranceSettings","Option","Options","mediaQueries","sm","Label","predefinedValues","label","value","SlippageToleranceSettings","translateString","useUserSlippageTolerance","userSlippageTolerance","setUserslippageTolerance","setValue","error","setError","useEffect","rawValue","Number","isNaN","fontWeight","QuestionHelper","text","mb","mr","map","predefinedValue","variant","onClick","alignItems","type","scale","step","min","placeholder","onChange","evt","inputValue","parseFloat","isWarning","fontSize","mt","color","StyledTransactionDeadlineSetting","Field","Input","Text","TransactionDeadlineSetting","useUserDeadline","deadline","setDeadline","parseInt","defaultOnDismiss","SettingsModal","onDismiss","title","SlippageToleranceSetting","newTransactionsFirst","b","RecentTransactionsModal","sortedRecentTransactions","values","filter","sort","justifyContent","flexDirection","bold","length","sortedRecentTransaction","status","icon","Loader","getRowStatus","getSnowtraceLink","HistoryIcon","width","height","viewBox","d","fill","StyledPageHeader","borderColor","Details","PageHeader","description","isShowSetting","children","useModal","onPresentSettings","onPresentRecentTransactions","useGetApiPrices","prices","setPrices","useWeb3React","usdcCoreContract","useLpTokenFromSymbol","getLpPrice","contract","baseTokenSymbol","price","lpPrice","BigNumber","token0","getReserves","result","totalSupply","addresses","tokens","find","t","symbol","toLowerCase","includes","address","_reserve0","_hex","times","_reserve1","toString","getPrices","usdcReserve","coreReserve","usdcCorePrice","wcore","interval","setInterval","clearInterval","web3","getWeb3NoAccount","useBalanceFromAddress","tokenBalance","setTokenBalance","tokenContract","useTokenContract","getCoreBalance","eth","getBalance","coreBalance","getTokenInfo","console","res","balanceOf","useCreateLpToken","params","pending","setPending","zapContract","useZapContract","onCreateLp","option","_fromTokenAddress","payableAmount","zapIn","_amountIn","_lpAddress","_token0Path","_token1Path","_minPoolTokens","_token0RouterAddress","_token1RouterAddress","_LPRouterAddress","CreateLpSelect","invertedContrast","input","shadows","inset","CoinPair","Zapin","lpTokenSymbol","setLpTokenSymbol","baseTokenBalance","setBaseTokenBalance","lpTokenBalance","lpContracts","archerswap","lpAddresses","routerAddress","receiveAmount","token0Path","token1Path","dp","toNumber","handleCreateLp","CardNav","AppBody","gap","Dropdown","Toggle","className","src","alt","Menu","Item","e","display","justify","padding","clickable","asset1","asset2","lpSymbol","key","Row","align","disabled","isGreaterThan","Spinner","animation","size","marginRight"],"mappings":"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","file":"static/js/34.8dd7e671.chunk.js","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } }\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {}\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\n    },\n    [dispatch, chainId, account]\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress]\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n// import { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNav = styled.div`\n  margin-bottom: 40px;\n`\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst TabItem = styled(Link)<{ active: boolean }>`\n  display: flex;\n  padding: 11px 57px;\n  background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\n  border-radius: 32px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\n  z-index: ${(props) => (props.active ? '1' : '0')};\n  margin: 32px -18px;\n  cursor: pointer;\n  \n  &:hover {\n    color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\n  }\n`\n\nconst Bridge = styled.a<{ active: boolean }>`\n  display: flex;\n  padding: 11px 57px;\n  background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\n  border-radius: 32px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\n  z-index: ${(props) => (props.active ? '1' : '0')};\n  margin: 32px -18px;\n  cursor: pointer;\n  \n  &:hover {\n    color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\n  }\n`\n\nfunction Nav({ activeIndex = 0 }: { activeIndex?: number }) {\n   /* eslint-disable @typescript-eslint/no-unused-vars */\n  const [activeTab, setActiveTab] = React.useState(activeIndex)\n  const TranslateString = useI18n()\n  return (\n    <StyledNav>\n      <TabContainer>\n        <TabItem active={activeTab === 0} id=\"swap-nav-link\" to=\"/swap\" style={{ borderRadius: '30px' }}>\n          {TranslateString(1142, 'Swap')}\n        </TabItem>\n        <TabItem active={activeTab === 1} id=\"pool-nav-link\" to=\"/pool\" style={{ borderRadius: '30px' }}>\n          {TranslateString(262, 'Liquidity')}\n        </TabItem>\n        <Bridge active={activeTab === 2} id=\"bridge-nav-link\" href=\"https://bridge.coredao.org/bridge\" style={{ borderRadius: '30px' }} target=\"_blank\">\n            {TranslateString(92, 'Bridge')}\n        </Bridge>\n        {/* <ButtonMenuItem id=\"zapin-nav-link\" to=\"/zap\" as={Link} style={{ borderRadius: '30px' }}>\n          {TranslateString(92, 'Zap')}\n        </ButtonMenuItem> */}\n      </TabContainer>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n\n\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, Text } from 'archerswap-uikit'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\n\nconst MAX_SLIPPAGE = 5000\nconst RISKY_SLIPPAGE_LOW = 50\nconst RISKY_SLIPPAGE_HIGH = 500\n\nconst StyledSlippageToleranceSettings = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Option = styled.div`\n  padding: 0 4px;\n`\n\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst predefinedValues = [\n  { label: '0.1%', value: 0.1 },\n  { label: '0.5%', value: 0.5 },\n  { label: '1%', value: 1 },\n]\n\ntype SlippageToleranceSettingsModalProps = {\n  translateString: (translationId: number, fallback: string) => (string)\n}\n\nconst SlippageToleranceSettings = ({ translateString }: SlippageToleranceSettingsModalProps) => {\n  const TranslateString = translateString\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [value, setValue] = useState(userSlippageTolerance / 100)\n  const [error, setError] = useState<string | null>(null)\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseFloat(inputValue))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 100\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue)\n        setError(null)\n      } else {\n        setError(TranslateString(1144, 'Enter a valid slippage percentage'))\n      }\n    } catch {\n      setError(TranslateString(1144, 'Enter a valid slippage percentage'))\n    }\n  }, [value, setError, setUserslippageTolerance, TranslateString])\n\n  // Notify user if slippage is risky\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError(TranslateString(1146, 'Your transaction may fail'))\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError(TranslateString(1148, 'Your transaction may be frontrun'))\n    }\n  }, [userSlippageTolerance, setError, TranslateString])\n\n  return (\n    <StyledSlippageToleranceSettings>\n      <Label>\n        <Text style={{ fontWeight: 600 }}>{TranslateString(88, 'Slippage tolerance')}</Text>\n        <QuestionHelper\n          text={TranslateString(\n            186,\n            'Your transaction will revert if the price changes unfavorably by more than this percentage.'\n          )}\n        />\n      </Label>\n      <Options>\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\n            const handleClick = () => setValue(predefinedValue)\n\n            return (\n              <Option key={predefinedValue}>\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\n                  {label}\n                </Button>\n              </Option>\n            )\n          })}\n        </Flex>\n        <Flex alignItems=\"center\">\n          <Option>\n            <Input\n              type=\"number\"\n              scale=\"lg\"\n              step={0.1}\n              min={0.1}\n              placeholder=\"5%\"\n              value={value}\n              onChange={handleChange}\n              isWarning={error !== null}\n            />\n          </Option>\n          <Option>\n            <Text fontSize=\"18px\">%</Text>\n          </Option>\n        </Flex>\n      </Options>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledSlippageToleranceSettings>\n  )\n}\n\nexport default SlippageToleranceSettings\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Text } from 'archerswap-uikit'\nimport { useUserDeadline } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\n\nconst StyledTransactionDeadlineSetting = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n\n  & > ${Text} {\n    font-size: 14px;\n    margin-left: 8px;\n  }\n`\n\ntype TransactionDeadlineSettingModalProps = {\n  translateString: (translationId: number, fallback: string) => (string)\n}\n\nconst TransactionDeadlineSetting = ({ translateString }: TransactionDeadlineSettingModalProps) => {\n  const TranslateString = translateString\n  const [deadline, setDeadline] = useUserDeadline()\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseInt(inputValue, 10))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 60\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue)\n        setError(null)\n      } else {\n        setError(TranslateString(1150, 'Enter a valid deadline'))\n      }\n    } catch {\n      setError(TranslateString(1150, 'Enter a valid deadline'))\n    }\n  }, [value, setError, setDeadline, TranslateString])\n\n  return (\n    <StyledTransactionDeadlineSetting>\n      <Label>\n        <Text style={{ fontWeight: 600 }}>{TranslateString(90, 'Transaction deadline')}</Text>\n        <QuestionHelper\n          text={TranslateString(188, 'Your transaction will revert if it is pending for more than this long.')}\n        />\n      </Label>\n      <Field>\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\n        <Text>Minutes</Text>\n      </Field>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledTransactionDeadlineSetting>\n  )\n}\n\nexport default TransactionDeadlineSetting\n","import React from 'react'\nimport { Modal } from 'archerswap-uikit'\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\n\ntype SettingsModalProps = {\n  onDismiss?: () => void,\n  translateString: (translationId: number, fallback: string) => (string)\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst SettingsModal = ({ onDismiss = defaultOnDismiss, translateString }: SettingsModalProps) => {\n  return (\n    <Modal title={translateString(1200, 'Settings')} onDismiss={onDismiss}>\n      <SlippageToleranceSetting translateString={translateString}/>\n      <TransactionDeadlineSetting translateString={translateString}/>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React, { useMemo } from 'react'\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from 'archerswap-uikit'\nimport { useActiveWeb3React } from 'hooks'\nimport { getSnowtraceLink } from 'utils'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport Loader from 'components/Loader'\n\ntype RecentTransactionsModalProps = {\n  onDismiss?: () => void\n  translateString: (translationId: number, fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\n\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\n  const { hash, receipt } = sortedRecentTransaction\n\n  if (!hash) {\n    return { icon: <Loader />, color: 'text' }\n  }\n\n  if (hash && receipt?.status === 1) {\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\n  }\n\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\n}\n\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, translateString }: RecentTransactionsModalProps) => {\n  const TranslateString = translateString\n  const { account, chainId } = useActiveWeb3React()\n  const allTransactions = useAllTransactions()\n\n  // Logic taken from Web3Status/index.tsx line 175\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  return (\n    <Modal title={TranslateString(1202, 'Recent transactions')} onDismiss={onDismiss}>\n      {!account && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            Please connect your wallet to view your recent transactions\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account && chainId && sortedRecentTransactions.length === 0 && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            No recent transactions\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account &&\n        chainId &&\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\n          const { hash, summary } = sortedRecentTransaction\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\n\n          return (\n            <>\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n                <LinkExternal href={getSnowtraceLink(chainId, hash, 'transaction')} color={color}>\n                  {summary ?? hash}\n                </LinkExternal>\n                {icon}\n              </Flex>\n            </>\n          )\n        })}\n    </Modal>\n  )\n}\n\nexport default RecentTransactionsModal\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, Text, Flex, useModal, CogIcon, Svg } from 'archerswap-uikit'\nimport useI18n from 'hooks/useI18n'\nimport SettingsModal from './SettingsModal'\nimport RecentTransactionsModal from './RecentTransactionsModal'\n\ninterface PageHeaderProps {\n  title: ReactNode\n  description?: ReactNode\n  isShowSetting?: boolean\n  children?: ReactNode\n}\n\nconst HistoryIcon = () => (\n  <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    <path\n      d=\"M13 3C8.03 3 4 7.03 4 12H1L4.89 15.89L4.96 16.03L9 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.07 19 9.32 18.21 8.06 16.94L6.64 18.36C8.27 19.99 10.51 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\"\n      fill=\"#EAAA08\"\n    />\n  </Svg>\n)\n\nconst StyledPageHeader = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding: 24px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst PageHeader = ({ title, description, isShowSetting = true, children }: PageHeaderProps) => {\n  const TranslateString = useI18n()\n  const [onPresentSettings] = useModal(<SettingsModal translateString={TranslateString} />)\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal translateString={TranslateString} />)\n\n  return (\n    <StyledPageHeader>\n      <Flex alignItems=\"center\">\n        <Details>\n          <Heading mb=\"8px\" color=\"text\">\n            {title}\n          </Heading>\n          {description && (\n            <Text color=\"textDisabled\" fontSize=\"14px\">\n              {description}\n            </Text>\n          )}\n        </Details>\n        {isShowSetting && (\n          <IconButton variant=\"text\" onClick={onPresentSettings} title={TranslateString(1200, 'Settings')}>\n            <CogIcon width=\"24px\" color=\"#EAAA08\" />\n          </IconButton>\n        )}\n        {isShowSetting && (\n          <IconButton\n            variant=\"text\"\n            onClick={onPresentRecentTransactions}\n            title={TranslateString(1202, 'Recent transactions')}\n          >\n            <HistoryIcon />\n          </IconButton>\n        )}\n      </Flex>\n      {children && <Text mt=\"16px\">{children}</Text>}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLpTokenFromSymbol } from './useContract'\nimport addresses from '../constants/token/archerswap.json'\n\nconst useGetApiPrices = () => {\n  const [prices, setPrices] = useState({})\n  const { account, chainId } = useWeb3React()\n  const usdcCoreContract: any = useLpTokenFromSymbol('usdc-core')\n  // const ethUsdcContract: any = useLpTokenFromSymbol('eth-usdc')\n  // const btcUsdcContract: any = useLpTokenFromSymbol('btc-usdc')\n\n  const getLpPrice = async (contract, baseTokenSymbol, price = 1) => {\n    let lpPrice = new BigNumber(0)\n    const token0 = await contract.token0()\n    const result = await contract.getReserves()\n    const totalSupply = await contract.totalSupply()\n    const address = await addresses.tokens\n      .find((t) => t.symbol.toLowerCase().includes(baseTokenSymbol.toLowerCase()))\n      ?.address.toLowerCase()\n    \n    if (token0.toLowerCase() === address) {\n      lpPrice = new BigNumber(result._reserve0._hex).times(price).times(2).div(new BigNumber(totalSupply._hex))\n    } else {\n      lpPrice = new BigNumber(result._reserve1._hex).times(price).times(2).div(new BigNumber(totalSupply._hex))\n    }\n    if ((baseTokenSymbol === 'usdc' || baseTokenSymbol === 'usdt') && baseTokenSymbol !== 'dai') {\n      lpPrice = lpPrice.times(10 ** 12)\n    }\n    if (baseTokenSymbol === 'btc') {\n      lpPrice = lpPrice.times(10 ** 2)\n    }\n    return lpPrice.toString()\n  }\n\n  // const getEthPrice = async () => {\n  //   let usdcReserve: any = 0\n  //   let ethReserve: any = 0\n  //   let price: any = 0\n\n  //   const token0 = await ethUsdcContract.token0()\n  //   const result = await ethUsdcContract.getReserves()\n\n  //   if (token0 === '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664') {\n  //     usdcReserve = result._reserve0.toString()\n  //     ethReserve = result._reserve1.toString()\n  //   } else {\n  //     usdcReserve = result._reserve1.toString()\n  //     ethReserve = result._reserve0.toString()\n  //   }\n  //   price = new BigNumber(usdcReserve)\n  //     .div(ethReserve)\n  //     .times(10 ** 12)\n  //     .toString()\n  //   return price\n  // }\n\n  // const getBtcPrice = async () => {\n  //   let usdcReserve: any = 0\n  //   let btcReserve: any = 0\n  //   let price: any = 0\n\n  //   const token0 = await btcUsdcContract.token0()\n  //   const result = await btcUsdcContract.getReserves()\n\n  //   if (token0 === '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664') {\n  //     usdcReserve = result._reserve0.toString()\n  //     btcReserve = result._reserve1.toString()\n  //   } else {\n  //     usdcReserve = result._reserve1.toString()\n  //     btcReserve = result._reserve0.toString()\n  //   }\n  //   price = new BigNumber(usdcReserve)\n  //     .div(btcReserve)\n  //     .times(10 ** 2)\n  //     .toString()\n  //   return price\n  // }\n\n  const getPrices = async () => {\n    let usdcReserve: any = 0\n    let coreReserve: any = 0\n    let price: any = 0\n\n    const token0 = await usdcCoreContract.token0()\n    const result = await usdcCoreContract.getReserves()\n\n    if (token0 === '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664') {\n      usdcReserve = result._reserve0.toString()\n      coreReserve = result._reserve1.toString()\n    } else {\n      usdcReserve = result._reserve1.toString()\n      coreReserve = result._reserve0.toString()\n    }\n    price = new BigNumber(usdcReserve)\n      .div(coreReserve)\n      .times(10 ** 12)\n      .toString()\n    const usdcCorePrice = await getLpPrice(usdcCoreContract, 'WCORE', price)\n\n    setPrices({\n      wcore: price,\n      'usdc-core': usdcCorePrice,\n      // eth: ethPrice\n    })\n  }\n\n  useEffect(() => {\n    if (account) {\n      getPrices()\n    }\n    const interval = setInterval(async () => {\n      if (account) {\n        getPrices()\n      }\n    }, 10 * 1000)\n    return () => clearInterval(interval)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, chainId])\n\n  return prices\n}\n\nexport default useGetApiPrices\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './index'\n\nconst web3 = getWeb3NoAccount()\n\nconst useBalanceFromAddress = (address) => {\n  const { chainId, account }: any = useActiveWeb3React()\n  const [tokenBalance, setTokenBalance] = useState(new BigNumber(0))\n  const tokenContract = useTokenContract(address)\n\n  const getCoreBalance = async () => {\n    const coreBalance = await web3.eth.getBalance(account)\n    setTokenBalance(new BigNumber(coreBalance))\n  }\n\n  useEffect(() => {\n    const getTokenInfo = async () => {\n      if (!tokenContract) {\n        console.error('contract is null')\n        return\n      }\n      try {\n        if (address === '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7') {\n          const res = await web3.eth.getBalance(account)\n          setTokenBalance(new BigNumber(res))\n        } else {\n          const res = await tokenContract.balanceOf(account)\n          setTokenBalance(new BigNumber(res._hex))\n        }\n      } catch (e) {\n        console.error('fetch token balance had error', e)\n      }\n    }\n    if (account && tokenContract && address) {\n      getTokenInfo()\n    } else if (account) {\n      getCoreBalance()\n    } else {\n      setTokenBalance(new BigNumber(0))\n    }\n    const interval = setInterval(async () => {\n      if (account && tokenContract && address) {\n        getTokenInfo()\n      } else if (account) {\n        getCoreBalance()\n      } else {\n        setTokenBalance(new BigNumber(0))\n      }\n    }, 5000)\n\n    return () => clearInterval(interval)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, chainId, tokenContract, address, web3.eth])\n\n  return tokenBalance\n}\n\nexport default useBalanceFromAddress;\n","import { useState, useCallback } from 'react'\nimport { useActiveWeb3React } from './index'\nimport { useZapContract } from './useContract'\n\nconst ZERO = '0x0000000000000000000000000000000000000000'\nconst ZAP_ADDRESS = '0x3264D31DeE00d298D956d0C98B0B7354a042bD0A'\n\nconst useCreateLpToken = (params) => {\n  const [pending, setPending] = useState(false)\n  const { account }: any = useActiveWeb3React()\n  const zapContract = useZapContract(ZAP_ADDRESS)\n\n  const handleCreateLp = useCallback(async () => {\n    try {\n      setPending(true)\n      const option: any = {\n        from: account,\n      }\n      if (params._fromTokenAddress === ZERO) {\n        option.value = params.payableAmount\n      }\n      if (!zapContract) {\n        console.error('contract is null')\n        return\n      }\n      await zapContract.zapIn(\n        params._fromTokenAddress,\n        params._amountIn,\n        params._lpAddress,\n        params._token0Path,\n        params._token1Path,\n        `${params._minPoolTokens}`,\n        params._token0RouterAddress,\n        params._token1RouterAddress,\n        params._LPRouterAddress,\n        option\n      )\n      setPending(false)\n    } catch (e) {\n      setPending(false)\n    }\n  }, [account, zapContract, params])\n\n  return { onCreateLp: handleCreateLp, pending }\n}\n\nexport default useCreateLpToken;","import React, { useState } from 'react'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text, Input } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Dropdown, Spinner } from 'react-bootstrap'\nimport { AutoColumn } from 'components/Column'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { ArrowWrapper, BottomGrouping, Wrapper } from 'components/swap/styleds'\n\nimport useI18n from 'hooks/useI18n'\nimport useGetApiPrices from 'hooks/useGetApiPrices'\nimport useBalanceFromAddress from 'hooks/useBalanceFromAddress'\nimport useCreateLpToken from 'hooks/useCreateLp'\nimport PageHeader from 'components/PageHeader'\nimport lpContracts from 'constants/lpToken/index.json'\nimport AppBody from '../AppBody'\n\nconst CreateLpSelect = styled.div`\n  width: 100%;\n\n  img {\n    width: 32px;\n    margin-right: 4px;\n  }\n\n  .dropdown {\n    width: 100%;\n    button {\n      width: 100%;\n      border: ${({ theme }) => theme.colors.invertedContrast} !important;\n      background-color: ${({ theme }) => theme.colors.input} !important;\n      box-shadow: ${({ theme }) => theme.shadows.inset};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &::after {\n        color: ${({ theme }) => theme.colors.text};\n      }\n    }\n    .create-lp-select-item {\n      display: flex;\n      align-items: center;\n      color: ${({ theme }) => theme.colors.text};\n    }\n    .dropdown-menu {\n      width: 100% !important;\n      height: 200px;\n      overflow: auto;\n      background-color: ${({ theme }) => theme.colors.invertedContrast};\n      .dropdown-item {\n        color: ${({ theme }) => theme.colors.text};\n      }\n    }\n  }\n`\nconst CoinPair = styled.div`\n  img {\n    border-radius: 50%;\n  }\n  img:nth-child(2) {\n    margin-left: -16px;\n  }\n`\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Text} {\n    cursor: pointer;\n    margin-left: 8px;\n  }\n`\n\nconst ZERO = '0x0000000000000000000000000000000000000000'\n\nconst Zapin = () => {\n  const TranslateString = useI18n()\n\n  const [lpTokenSymbol, setLpTokenSymbol] = useState('usdc-core')\n  const [baseTokenBalance, setBaseTokenBalance] = useState('')\n\n  const tokenBalance = useBalanceFromAddress(null)\n  const lpTokenBalance = useBalanceFromAddress(\n    lpContracts.archerswap[lpTokenSymbol]\n      ? lpContracts.archerswap[lpTokenSymbol].lpAddresses\n      : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].lpAddresses\n  )\n  const prices: any = useGetApiPrices()\n  const routerAddress = '0x74f56a7560ef0c72cf6d677e3f5f51c2d579ff15'\n\n  const receiveAmount = prices[lpTokenSymbol]\n    ? new BigNumber(prices.wcore || 0).times(baseTokenBalance || 0).div(prices[lpTokenSymbol])\n    : new BigNumber(0)\n\n  const { onCreateLp, pending } = useCreateLpToken({\n    payableAmount: new BigNumber(baseTokenBalance || 0).times(10 ** 18).toString(10),\n    _fromTokenAddress: ZERO,\n    _amountIn: 0,\n    _lpAddress: lpContracts.archerswap[lpTokenSymbol]\n      ? lpContracts.archerswap[lpTokenSymbol].lpAddresses\n      : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].lpAddresses,\n    _token0Path: lpContracts.archerswap[lpTokenSymbol]\n      ? lpContracts.archerswap[lpTokenSymbol].token0Path\n      : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].token0Path,\n    _token1Path: lpContracts.archerswap[lpTokenSymbol]\n      ? lpContracts.archerswap[lpTokenSymbol].token1Path\n      : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].token1Path,\n    _minPoolTokens: receiveAmount\n      .times(0.9)\n      .times(10 ** 18)\n      .dp(0, 0)\n      .toNumber(),\n    _token0RouterAddress: routerAddress,\n    _token1RouterAddress: routerAddress,\n    _LPRouterAddress: routerAddress,\n  })\n\n  const handleCreateLp = async () => {\n    onCreateLp()\n  }\n  return (\n    <>\n      <CardNav activeIndex={2} />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <PageHeader\n            title={TranslateString(90, 'Create LP')}\n            description={TranslateString(91, 'One Click LP Creator')}\n            isShowSetting={false}\n          />\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <CreateLpSelect>\n                <Dropdown>\n                  <Dropdown.Toggle className=\"create-lp-select-toggle\">\n                    <div className=\"create-lp-select-item\">\n                      <img src=\"/images/coins/core.png\" alt=\"\" />\n                      <p>CORE</p>\n                      <img className=\"ml-auto\" src=\"/assets/images/chevron-down.svg\" alt=\"\" />\n                    </div>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"create-lp-menu\">\n                    <Dropdown.Item>\n                      <div className=\"create-lp-select-item\">\n                        <img src=\"/images/coins/core.png\" alt=\"\" />\n                        <p>CORE</p>\n                      </div>\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </CreateLpSelect>\n              <Field>\n                <Input\n                  type=\"number\"\n                  value={baseTokenBalance}\n                  step=\"any\"\n                  placeholder=\"0\"\n                  onChange={(e: any) => setBaseTokenBalance(e.target.value.toString())}\n                />\n                <Text onClick={() => setBaseTokenBalance(new BigNumber(tokenBalance).div(10 ** 18).toString(10))}>\n                  MAX\n                </Text>\n              </Field>\n              <div className=\"create-lp-balance\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <p>Balance</p>\n                <p>{tokenBalance.div(10 ** 18).toString(10)}</p>\n              </div>\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify=\"center\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <IconButton variant=\"tertiary\" style={{ borderRadius: '50%' }} scale=\"sm\">\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                </AutoRow>\n              </AutoColumn>\n              <CreateLpSelect>\n                <Dropdown>\n                  <Dropdown.Toggle className=\"create-lp-select-toggle\">\n                    <div className=\"create-lp-select-item\">\n                      <CoinPair>\n                        <img\n                          src={\n                            lpContracts.archerswap[lpTokenSymbol]\n                              ? lpContracts.archerswap[lpTokenSymbol].asset1\n                              : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].asset1\n                          }\n                          alt=\"token\"\n                        />\n                        <img\n                          src={\n                            lpContracts.archerswap[lpTokenSymbol]\n                              ? lpContracts.archerswap[lpTokenSymbol].asset2\n                              : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].asset2\n                          }\n                          alt=\"token\"\n                        />\n                      </CoinPair>\n                      <p>\n                        {lpContracts.archerswap[lpTokenSymbol]\n                          ? lpContracts.archerswap[lpTokenSymbol].lpSymbol\n                          : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].lpSymbol}\n                      </p>\n                      <img className=\"ml-auto\" src=\"/assets/images/chevron-down.svg\" alt=\"\" />\n                    </div>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"create-lp-menu\">\n                    {Object.keys(lpContracts.archerswap).map((key) => (\n                      <Dropdown.Item key={key} onClick={() => setLpTokenSymbol(key)}>\n                        <div className=\"create-lp-select-item\">\n                          <CoinPair>\n                            <img\n                              src={\n                                lpContracts.archerswap[key]\n                                  ? lpContracts.archerswap[key].asset1\n                                  : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].asset1\n                              }\n                              alt=\"token\"\n                            />\n                            <img\n                              src={\n                                lpContracts.archerswap[key]\n                                  ? lpContracts.archerswap[key].asset2\n                                  : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].asset2\n                              }\n                              alt=\"token\"\n                            />\n                          </CoinPair>\n                          <p>{lpContracts.archerswap[key].lpSymbol}</p>\n                        </div>\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </CreateLpSelect>\n              <RowBetween align=\"center\">\n                <Text fontSize=\"14px\">Balance</Text>\n                <Text fontSize=\"14px\">{(lpTokenBalance || new BigNumber(0)).div(10 ** 18).toString(10)}</Text>\n              </RowBetween>\n              <RowBetween align=\"center\">\n                <Text fontWeight=\"bold\" fontSize=\"14px\">\n                  You Receive\n                </Text>\n                <Text fontWeight=\"bold\" fontSize=\"14px\">\n                  <p>≈ {receiveAmount.toString(10)} LP</p>\n                </Text>\n              </RowBetween>\n              <RowBetween align=\"center\">\n                <Text fontSize=\"14px\">Slippage Tolerance</Text>\n                <Text fontSize=\"14px\">10.00%</Text>\n              </RowBetween>\n              <RowBetween align=\"center\">\n                <Text fontSize=\"14px\">Min.Received</Text>\n                <Text fontSize=\"14px\">{receiveAmount.times(0.9).toString(10)} LP</Text>\n              </RowBetween>\n            </AutoColumn>\n            <BottomGrouping>\n              <Button\n                disabled={\n                  pending ||\n                  !baseTokenBalance ||\n                  new BigNumber(baseTokenBalance).isGreaterThan(new BigNumber(tokenBalance).div(10 ** 18))\n                }\n                width=\"100%\"\n                onClick={handleCreateLp}\n              >\n                {pending && <Spinner animation=\"border\" size=\"sm\" style={{ marginRight: 5 }} />}\n                Get{' '}\n                {lpContracts.archerswap[lpTokenSymbol]\n                  ? lpContracts.archerswap[lpTokenSymbol].lpSymbol\n                  : lpContracts.archerswap[Object.keys(lpContracts.archerswap)[0]].lpSymbol}{' '}\n                LP\n              </Button>\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n    </>\n  )\n}\n\nexport default Zapin\n"],"sourceRoot":""}