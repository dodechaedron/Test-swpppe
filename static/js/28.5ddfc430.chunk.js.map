{"version":3,"sources":["hooks/useTokenBalance.ts","views/Farms/components/Tooltip/Tooltip.tsx","components/Bridge/Select/Select.tsx","components/Bridge/TokenModal/TokenModal.tsx","components/Svg/Swap.tsx","views/Bridge/Bridge.tsx","hooks/useAnyswapV5Router.ts"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","Promise","all","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","TooltipContent","styled","div","theme","tooltip","background","text","zIndices","modal","Container","Tooltip","content","children","DropDownHeader","colors","ChainIcon","img","DropDownListContainer","dropdown","mediaQueries","sm","DropDownContainer","props","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","inputSecondary","Select","options","selectedValue","onChange","containerRef","useRef","dropdownRef","setIsOpen","width","height","containerSize","setContainerSize","toggling","onOptionClicked","option","current","offsetWidth","offsetHeight","ref","onClick","src","image","alt","label","color","map","TokenContainer","SuvTokenContainer","Title","Amount","Image","TicketsList","StyledButton","Button","spacing","TokenModal","serverData","setSelectedToken","onDismiss","tokenBalances","setTokenBalance","fetchData","temp","index","length","originUnderlying","getBalanceBigNumber","toFormat","title","data","logoUrl","variant","rotate","keyframes","StyledPath","path","Icon","xmlns","fill","viewBox","cx","cy","r","transform","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Background","CardContainer","card","ButtonContainer","ThemeButton","active","Powered","ChainsContainer","md","ChainContainer","ChainTitle","isDark","ChainImg","CoinContainer","input","Input","UIKitInput","SubCoinContainer","CoinSelect","CoinSelected","DescContainer","SwapContainer","DescSubContainer","valid","min","StyledPage","Page","DescInfo","BalanceContainer","ButtonsContainer","InputContainer","StyledThemeButton","Bridge","useTheme","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","validAmount","setValidAmount","isLargeThanMin","setIsLargeThanMin","isSmallThanMax","setIsSmallThanMax","txhash","setTxhash","bridgeAmount","setBridgeAmount","needApprove","setNeedApprove","chains","fromChain","setFromChain","toChain","setToChain","selectedToken","setServerData","router","tokenBalance","tokenBalanceTo","underlying","setHash","pending","setPending","routerContract","useAnyswapV5","onAnySwapOutUnderlying","anyToken","to","amount","toChainID","anySwapOutUnderlying","on","hash","result","useAnySwapOutUnderlying","useModal","onPresentChainModal","axios","get","then","response","msg","clearInterval","interval","setInterval","gt","lt","gte","MinimumSwap","lte","MaximumSwap","provider","window","ethereum","_chainId","parseInt","request","method","params","console","error","changeNetwork","headers","status","resultArray","Object","keys","personNamedIndex","tempServerData","i","destChains","push","originAddress","originAnyToken","handlePercetajeButtons","p","multipliedBy","onSendETH","getMultifyBigNumber","dp","Banner","mobileSrc","value","Swap","maxLength","type","placeholder","e","target","className","style","display","MinimumSwapFee","BigValueThreshold"],"mappings":"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","file":"static/js/28.5ddfc430.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getBowContract, getFactoryContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nexport const useETHBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useWcoreBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.allowance(account, targetAddress).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && targetAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\n\n  return allowance\n}\n\nexport const useApprove = () => {\n  const [approvePending, setApprovePending] = useState(false)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(\n    async (targetAddress: string, contractAddress: string) => {\n      try {\n        setApprovePending(true)\n        const contract = getBep20Contract(contractAddress, web3)\n        const tx = await contract.methods\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\n          .send({ from: account })\n        setApprovePending(false)\n        return tx\n      } catch (e) {\n        setApprovePending(false)\n        return false\n      }\n    },\n    [web3, account],\n  )\n\n  return { onApprove: handleApprove, approvePending }\n}\n\nexport const useTokenSymbol = (tokenAddress: string) => {\n  const [symbol, setSymbol] = useState('')\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.symbol().call()\n      setSymbol(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return symbol\n}\n\nexport const useTokenDecimal = (tokenAddress: string) => {\n  const [decimal, setDecimal] = useState(0)\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.decimals().call()\n      setDecimal(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return decimal\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = getWeb3NoAccountFromChain(chainId)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && chainId) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const bowContract = getBowContract()\n      const supply = await bowContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useCirculatingBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const bowContract = getBowContract()\n      const [tRes, res0, res1, res2] = await Promise.all([\n        bowContract.methods.totalSupply().call(),\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\n      ])\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\n    }\n\n    fetchBalance()\n  }, [web3, fastRefresh])\n\n  return balance\n}\n\nexport const usePairsLength = () => {\n  const [pairsLength, setPairsLength] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchPairsLength = async () => {\n      const contract = getFactoryContract(web3)\n      const res = await contract.methods.allPairsLength().call()\n      setPairsLength(res)\n    }\n\n    fetchPairsLength()\n  }, [web3, slowRefresh])\n\n  return pairsLength\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface TooltipProps {\n  content: React.ReactNode\n}\n\nconst TooltipContent = styled.div`\n  background: ${({ theme }) => theme.tooltip.background};\n  padding: 16px;\n  border-radius: 16px;\n  color: ${({ theme }) => theme.tooltip.text};\n  width: max-content;\n  display: none;\n  padding: 16px;\n  max-height: 500px;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n  position: absolute;\n  bottom: calc(100% + 16px);\n  transform: translate(34px, 0);\n  right: 0;\n  max-width: 250px;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\n    bottom: 0;\n    position: absolute;\n    transform: translate(-34px, 9px);\n    right: 0;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\n    display: block;\n  }\n`\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\n  return (\n    <Container>\n      {children}\n      <TooltipContent>{content}</TooltipContent>\n    </Container>\n  )\n}\n\nexport default Tooltip\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon } from 'archerswap-uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 52px;\n  display: flex;\n  align-items: center;\n  padding: 0px 20px;\n  border: 1px solid #3960c1;\n  box-sizing: border-box;\n  border-radius: 8px;\n  transition: border-radius 0.15s;\n  & h4 {\n    user-select: none;\n    padding-left: 13px;\n    padding-right: 43px;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 24px;\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\nconst ChainIcon = styled.img`\n  height: 20px;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  width: 100%;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n    @media (max-width: 767px) {\n      min-width: 60px;\n    }\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  border-radius: 8px;\n  height: 52px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid 1px solid #3960c1;\n        box-sizing: border-box;\n        border-radius: 8px 8px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid #3960c1;\n        box-sizing: border-box;\n        border-top-width: 0;\n        border-radius: 0 0 8px 8px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  padding: 8px 16px;\n  & h4 {\n    user-select: none;\n    padding-left: 18px;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 18px;\n    line-height: 24px;\n    color: ${({ theme }) => theme.colors.text};\n  }\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface OptionProps {\n  label: string\n  value: string\n  chainId: string\n  image: string\n}\n\nexport interface SelectProps {\n  options: OptionProps[]\n  selectedValue: OptionProps\n  onChange: (option: OptionProps) => void\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, selectedValue, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    onChange(option)\n    setIsOpen(false)\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <ChainIcon src={selectedValue.image} alt=\"from\" />\n          <h4>{selectedValue.label}</h4>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedValue.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <ChainIcon src={option.image} alt=\"from\" />\n                <h4>{option.label}</h4>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState, useEffect } from 'react'\nimport { Button, Modal } from 'archerswap-uikit'\nimport styled from 'styled-components'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getBalanceBigNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport BigNumber from 'bignumber.js'\n\ninterface UserTicketsModalProps {\n  serverData: any\n  setSelectedToken: (token: any) => void\n  onDismiss?: () => void\n}\n\nconst TokenModal: React.FC<UserTicketsModalProps> = ({ serverData, setSelectedToken, onDismiss }) => {\n  const web3 = useWeb3()\n  const { account } = useWeb3React()\n\n  const [tokenBalances, setTokenBalance] = useState<string[]>([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const temp: string[] = []\n      for (let index = 0; index < serverData.length; index++) {\n        const contract = getBep20Contract(serverData[index].originUnderlying.address, web3)\n        // eslint-disable-next-line no-await-in-loop\n        const res = await contract.methods.balanceOf(account).call()\n        temp[index] = getBalanceBigNumber(new BigNumber(res), serverData[index].originUnderlying.decimals).toFormat(3)\n      }\n      setTokenBalance(temp)\n    }\n    if (web3 && account && serverData && serverData.length > 0) {\n      fetchData()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [web3, account, serverData])\n\n  return (\n    <Modal title=\"Select a Token\" onDismiss={onDismiss}>\n      <TicketsList>\n        {serverData &&\n          serverData.map((data, index) => {\n            return (\n              <TokenContainer\n                key={index.toString()}\n                onClick={() => {\n                  setSelectedToken(data)\n                  onDismiss()\n                }}\n              >\n                <SuvTokenContainer>\n                  <Image src={data.logoUrl} alt=\"\" />\n                  <Title>{data.originUnderlying.symbol}</Title>\n                </SuvTokenContainer>\n                <Amount>{tokenBalances.length > index ? tokenBalances[index] : ''}</Amount>\n              </TokenContainer>\n            )\n          })}\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        Close\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst TokenContainer = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: #0000003f;\n  }\n`\nconst SuvTokenContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst Title = styled.div`\n  padding-left: 30px;\n  color: ${({ theme }) => theme.colors.text};\n`\nconst Amount = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.text};\n`\nconst Image = styled.img`\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n`\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default TokenModal\n","import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  0% {\n    transform: matrix(1.00,0.00,0.00,1.00,0,0);\n  }\n\n  1%{\n    transform: matrix(0.8,0.00,0.00,1.00,0,0);\n  }\n\n  2% {\n    transform:matrix(1.1,0.00,0.00,1.00,0,0);\n  }\n\n  3% {\n    transform: matrix(0.90,0.00,0.00,1.00,0,0);\n  }\n\n  4%{\n    transform: matrix(1.00,0.00,0.00,1.00,0,0);\n  }\n`\n\nconst StyledPath = styled.path`\n  width: 100%;\n  animation: ${rotate} 10s linear infinite;\n`\n\nfunction Icon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" fill=\"none\" viewBox=\"0 0 46 46\">\n      <circle cx=\"23\" cy=\"23\" r=\"23\" fill=\"#E7F9F7\" transform=\"rotate(-90 23 23)\" />\n      <StyledPath\n        stroke=\"#3960C1\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n        d=\"M15 22.59h15.908M27.5 19.182l3.408 3.409L27.5 26\"\n      />\n    </svg>\n  )\n}\n\nexport default Icon\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\n\nimport Page from 'components/layout/Page'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceBigNumber, getMultifyBigNumber } from 'utils/formatBalance'\nimport useTokenBalance, { useTokenAllowance, useApprove, useTokenBalanceFromChain } from 'hooks/useTokenBalance'\nimport { useAnySwapOutUnderlying } from 'hooks/useAnyswapV5Router'\nimport { HelpIcon, useWalletModal, Input as UIKitInput, useModal, Button as ThemeButton } from 'archerswap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport Banner from 'components/Banner'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Bridge/Select/Select'\nimport TokenModal from 'components/Bridge/TokenModal'\nimport SwapIcon from '../../components/Svg/Swap'\nimport 'react-multi-carousel/lib/styles.css'\nimport Tooltip from '../Farms/components/Tooltip/Tooltip'\nimport chains from './chain.json'\n\nconst Background = styled.div<any>`\n  width: 100%;\n`\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\nconst CardContainer = styled.div`\n  background: ${({ theme }) => theme.colors.card};\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\n  border-radius: 16px;\n  max-width: 600px;\n  width: 100%;\n  margin: 15px 0px;\n  padding: 30px 40px;\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n`\nconst Button = styled(ThemeButton)<{ active?: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 52px;\n  border-radius: 8px;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  cursor: ${(props) => (props.active ? 'pointer' : 'not-allowed')};\n`\nconst Powered = styled.div`\n  text-align: center;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n  color: #999999;\n`\n\nconst ChainsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n  justify-content: space-between;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst ChainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\nconst ChainTitle = styled.div<any>`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: ${({ isDark }) => (isDark ? '#fff' : '#2A4AA6')};\n`\nconst ChainImg = styled.img`\n  margin-top: 25px;\n  margin-bottom: 31px;\n  @media (max-width: 767px) {\n    width: 50px;\n  }\n`\nconst CoinContainer = styled.div`\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 7px;\n  margin-top: 24px;\n  padding: 16px;\n  & .balance {\n    text-align: right;\n  }\n`\nconst Input = styled(UIKitInput)`\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  box-shadow: none;\n  border: 0px solid;\n  background: transparent;\n  text-align: right;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  width: 100%;\n  margin-right: -20px;\n  color: ${({ theme }) => theme.colors.text};\n  outline: none;\n  :focus-visible {\n    border: none;\n  }\n`\nconst SubCoinContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst CoinSelect = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 48px;\n  background: #efefef;\n  cursor: pointer;\n  border-radius: 8px;\n  gap: 16px;\n  max-width: 200px;\n  padding: 16px;\n`\nconst CoinSelected = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  gap: 5px;\n  height: 48px;\n  left: 599px;\n  top: 640px;\n  background: #efefef;\n  cursor: pointer;\n  border-radius: 8px;\n  & img {\n    width: 30px;\n    height: 30px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 16px;\n  }\n`\nconst DescContainer = styled.div`\n  padding: 24px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n  max-width: 600px;\n`\nconst SwapContainer = styled.div`\n  max-width: 46px;\n  transform: rotate(90deg);\n  ${({ theme }) => theme.mediaQueries.md} {\n    transform: none;\n  }\n`\nconst DescSubContainer = styled.div<{ valid: boolean; min?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  color: ${({ valid, min }) => (valid ? '#000' : min ? '#2A4AA6' : '#F00')};\n`\nconst StyledPage = styled(Page)`\n  min-height: calc(100vh - 300px);\n`\nconst DescInfo = styled.div`\n  color: rgba(153, 153, 153, 1);\n`\nconst BalanceContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 300px;\n  margin-left: auto;\n  margin-bottom: 4px;\n`\n\nconst ButtonsContainer = styled.div`\n  gap: 10px;\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  flex-wrap: wrap;\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 12px;\n  }\n`\nconst InputContainer = styled.div`\n  border-radius: 8px;\n  padding: 16px;\n  width: 100%;\n`\nconst StyledThemeButton = styled(ThemeButton)`\n  height: 30px;\n  padding: 0 8px;\n  background-color: rgba(231, 249, 247, 1);\n  color: rgba(5, 94, 86, 1);\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 0 21px;\n  }\n`\n\nconst Bridge: React.FC = () => {\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  const { account, chainId } = useWeb3React()\n  const { onApprove, approvePending } = useApprove()\n\n  const [validAmount, setValidAmount] = useState<boolean>(true)\n  const [isLargeThanMin, setIsLargeThanMin] = useState<boolean>(false)\n  const [isSmallThanMax, setIsSmallThanMax] = useState<boolean>(false)\n\n  const [txhash, setTxhash] = useState<any>()\n  const [bridgeAmount, setBridgeAmount] = useState<string>()\n  const [needApprove, setNeedApprove] = useState<boolean>(false)\n\n  const [fromChain, setFromChain] = useState<OptionProps>(chains[0])\n  const [toChain, setToChain] = useState<OptionProps>(chains[1])\n\n  const [selectedToken, setSelectedToken] = useState<any>()\n  const [serverData, setServerData] = useState<any[]>()\n\n  const allowance = useTokenAllowance(selectedToken?.originUnderlying.address, selectedToken?.router)\n  const tokenBalance = useTokenBalance(selectedToken?.originUnderlying.address)\n  const tokenBalanceTo = useTokenBalanceFromChain(selectedToken?.underlying.address, toChain.chainId)\n\n  const { onAnySwapOutUnderlying, pending } = useAnySwapOutUnderlying(selectedToken?.router, setTxhash)\n\n  const [onPresentChainModal] = useModal(<TokenModal serverData={serverData} setSelectedToken={setSelectedToken} />)\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (txhash) {\n      axios.get(`https://bridgeapi.anyswap.exchange/v2/history/details?params=${txhash}`).then((response: any) => {\n        if (response.data.msg === 'Success') {\n          clearInterval(interval)\n          setTxhash(null)\n        }\n      })\n      const interval = setInterval(async () => {\n        axios.get(`https://bridgeapi.anyswap.exchange/v2/history/details?params=${txhash}`).then((response: any) => {\n          if (response.data.msg === 'Success') {\n            clearInterval(interval)\n            setTxhash(null)\n          }\n        })\n      }, 1000)\n      return () => clearInterval(interval)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [txhash])\n\n  useEffect(() => {\n    if (new BigNumber(bridgeAmount).gt(new BigNumber(0)) && allowance.lt(new BigNumber(bridgeAmount))) {\n      setNeedApprove(true)\n    } else {\n      setNeedApprove(false)\n    }\n  }, [allowance, bridgeAmount])\n\n  useEffect(() => {\n    if (new BigNumber(bridgeAmount).gt(0) && tokenBalance.gte(new BigNumber(bridgeAmount))) {\n      setValidAmount(true)\n    } else {\n      setValidAmount(false)\n    }\n  }, [tokenBalance, bridgeAmount])\n\n  useEffect(() => {\n    if (selectedToken && bridgeAmount) {\n      if (new BigNumber(bridgeAmount).gte(new BigNumber(selectedToken.MinimumSwap))) {\n        setIsLargeThanMin(true)\n      } else {\n        setIsLargeThanMin(false)\n      }\n      if (new BigNumber(bridgeAmount).lte(new BigNumber(selectedToken.MaximumSwap))) {\n        setIsSmallThanMax(true)\n      } else {\n        setIsSmallThanMax(false)\n      }\n    }\n  }, [bridgeAmount, selectedToken])\n\n  useEffect(() => {\n    const changeNetwork = async () => {\n      const provider = (window as WindowChain).ethereum\n      if (provider) {\n        const _chainId = parseInt(fromChain.chainId, 10)\n        try {\n          await provider.request({\n            method: 'wallet_switchEthereumChain',\n            params: [\n              {\n                chainId: `0x${_chainId.toString(16)}`,\n              },\n            ],\n          })\n          // await provider.request({\n          //   method: 'wallet_addEthereumChain',\n          //   params: [\n          //     {\n          //       chainId: `0x${chainId.toString(16)}`,\n          //       rpcUrls: [fromChain.rpc],\n          //     },\n          //   ],\n          // })\n          return true\n        } catch (error) {\n          console.error(error)\n          return false\n        }\n      } else {\n        console.error(\"Can't setup the Core Chain on metamask because window.ethereum is undefined\")\n        return false\n      }\n    }\n\n    changeNetwork()\n  }, [fromChain])\n\n  useEffect(() => {\n    if (toChain) {\n      const fetchData = async () => {\n        const response = await axios.get<any>(\n          `https://bridgeapi.anyswap.exchange/v3/serverinfoV3?chainId=${fromChain.chainId}&version=STABLEV3`,\n          {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        )\n\n        if (response && response.status) {\n          const resultArray: any[] = Object.keys(response.data).map((personNamedIndex) => {\n            const person = response.data[personNamedIndex]\n            // do something with person\n            return person\n          })\n\n          const tempServerData: any[] = []\n          for (let i = 0; i < resultArray.length; i++) {\n            if (\n              resultArray[i].destChains[toChain.chainId] &&\n              resultArray[i].destChains[toChain.chainId].underlying &&\n              resultArray[i].underlying\n            ) {\n              tempServerData.push({\n                ...resultArray[i].destChains[toChain.chainId],\n                router: resultArray[i].router,\n                logoUrl: resultArray[i].logoUrl,\n                originAddress: resultArray[i].address,\n                originUnderlying: resultArray[i].underlying,\n                originAnyToken: resultArray[i].anyToken,\n              })\n            }\n          }\n          setServerData(tempServerData)\n        }\n      }\n\n      fetchData()\n    }\n  }, [toChain, fromChain])\n\n  const handlePercetajeButtons = (p: number) => {\n    setBridgeAmount(\n      getBalanceBigNumber(\n        tokenBalance.multipliedBy(new BigNumber(p)),\n        selectedToken.originUnderlying.decimals,\n      ).toString(),\n    )\n  }\n\n  const onSendETH = async () => {\n    const amount: BigNumber = getMultifyBigNumber(new BigNumber(bridgeAmount), selectedToken.originUnderlying.decimals)\n\n    if (!selectedToken || bridgeAmount === '' || amount.gt(tokenBalance)) {\n      return\n    }\n    // console.log('Send to router ============>')\n    // console.log('Router contract: ', selectedToken.originAnyToken.address)\n    // console.log('Amount: ', amount.dp(0).toString(10))\n    // console.log('From -> to: ', fromChain.label, toChain.label)\n    onAnySwapOutUnderlying(selectedToken.originAnyToken.address, account, amount.dp(0).toString(10), toChain.chainId)\n  }\n\n  return (\n    <Background isDark={isDark}>\n      <Banner\n        src=\"/images/assets/banners/bridge_banner.png\"\n        mobileSrc=\"/images/assets/banners/mobile_bridge_banner.png\"\n        alt=\"bridge_banner\"\n        title=\"Bridge\"\n        text=\"Bridge your tokens with no additional fees\"\n      />\n      <StyledPage>\n        <Container>\n          <CardContainer>\n            <ChainsContainer>\n              <ChainContainer>\n                <ChainTitle isDark={isDark}>From Chain</ChainTitle>\n                <ChainImg src={fromChain.image} alt=\"from\" />\n                <Select\n                  options={chains}\n                  selectedValue={fromChain}\n                  onChange={(value) => {\n                    setBridgeAmount('0')\n                    setSelectedToken(null)\n                    if (value === toChain) {\n                      setToChain(fromChain)\n                    }\n                    setFromChain(value)\n                  }}\n                />\n              </ChainContainer>\n              <SwapContainer>\n                <SwapIcon />\n              </SwapContainer>\n              <ChainContainer>\n                <ChainTitle isDark={isDark}>To Chain</ChainTitle>\n                <ChainImg src={toChain.image} alt=\"from\" />\n                <Select\n                  options={chains}\n                  selectedValue={toChain}\n                  onChange={(value) => {\n                    setBridgeAmount('0')\n                    setSelectedToken(null)\n                    if (value === fromChain) {\n                      setFromChain(toChain)\n                    }\n                    setToChain(value)\n                  }}\n                />\n              </ChainContainer>\n            </ChainsContainer>\n            <CoinContainer>\n              <SubCoinContainer>\n                {selectedToken ? (\n                  <CoinSelected\n                    onClick={() => {\n                      if (chainId.toString() === fromChain.chainId) {\n                        onPresentChainModal()\n                      }\n                    }}\n                  >\n                    <img src={selectedToken.logoUrl} alt=\"dwon\" />\n                    <div>{selectedToken.originUnderlying.symbol}</div>\n                  </CoinSelected>\n                ) : (\n                  <CoinSelect\n                    onClick={() => {\n                      if (chainId && chainId.toString() === fromChain.chainId) {\n                        onPresentChainModal()\n                      }\n                    }}\n                  >\n                    <p>Select a currency</p>\n                    <img src=\"/images/assets/icon/down.png\" alt=\"down\" />\n                  </CoinSelect>\n                )}\n                <InputContainer>\n                  <Input\n                    value={bridgeAmount}\n                    maxLength={18}\n                    type=\"number\"\n                    placeholder=\"0.0\"\n                    onChange={(e: any) => {\n                      const { value } = e.target\n                      setBridgeAmount(value)\n                    }}\n                  />\n                </InputContainer>\n              </SubCoinContainer>\n\n              {selectedToken && (\n                <div>\n                  <ButtonsContainer>\n                    <StyledThemeButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        handlePercetajeButtons(0.25)\n                      }}\n                    >\n                      25%\n                    </StyledThemeButton>\n                    <StyledThemeButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        handlePercetajeButtons(0.5)\n                      }}\n                    >\n                      50%\n                    </StyledThemeButton>\n                    <StyledThemeButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        handlePercetajeButtons(0.75)\n                      }}\n                    >\n                      75%\n                    </StyledThemeButton>\n                    <StyledThemeButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        handlePercetajeButtons(1)\n                      }}\n                    >\n                      100%\n                    </StyledThemeButton>\n                  </ButtonsContainer>\n                  <BalanceContainer className=\"balance\">\n                    <p>Balance on {fromChain.label}: </p>\n                    <p>{getBalanceBigNumber(tokenBalance, selectedToken.originUnderlying.decimals).toFormat(3)}</p>\n                  </BalanceContainer>\n                  <BalanceContainer className=\"balance\">\n                    <p>Balance on {toChain.label}: </p>\n                    <p>{getBalanceBigNumber(tokenBalanceTo, selectedToken.underlying.decimals).toFormat(3)}</p>\n                  </BalanceContainer>\n                </div>\n              )}\n            </CoinContainer>\n\n            <ButtonContainer>\n              {!account ? (\n                <Button\n                  active\n                  onClick={() => {\n                    onPresentConnectModal()\n                  }}\n                >\n                  {t('Connect Wallet')}\n                </Button>\n              ) : needApprove ? (\n                <Button\n                  active={!approvePending && selectedToken}\n                  variant={selectedToken ? 'primary' : 'disabled'}\n                  onClick={() => {\n                    if (selectedToken) {\n                      onApprove(selectedToken.router, selectedToken.originUnderlying.address)\n                    }\n                  }}\n                >\n                  {approvePending ? 'Pending...' : 'Approve'}\n                </Button>\n              ) : (\n                <Button\n                  active={validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax}\n                  onClick={() => {\n                    if (validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax) {\n                      onSendETH()\n                    }\n                  }}\n                  variant={validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax ? 'primary' : 'disabled'}\n                >\n                  {pending ? 'Pending...' : 'Confirm'}\n                </Button>\n              )}\n            </ButtonContainer>\n            <Powered>Powered by Multichain Network</Powered>\n            <div />\n          </CardContainer>\n          {selectedToken && (\n            <DescContainer>\n              {/* <DescSubContainer\n                  valid={isLargeThanMin}\n                >\n                  <div>Current Bridgeable Range</div>\n                  <div>\n                    {new BigNumber(selectedToken.MinimumSwap).toFormat(3)}-Pool Balance {selectedToken.underlying.symbol}\n                  </div>\n                </DescSubContainer> */}\n              <DescSubContainer valid={isSmallThanMax}>\n                <div>Max Bridge Amount</div>\n                <div>\n                  {new BigNumber(selectedToken.MaximumSwap).toFormat(3)} {selectedToken.originUnderlying.symbol}\n                </div>\n              </DescSubContainer>\n              <DescSubContainer valid={isLargeThanMin} min>\n                <div>Min Bridge Amount</div>\n                <div>\n                  {new BigNumber(selectedToken.MinimumSwap).gte(0.001)\n                    ? new BigNumber(selectedToken.MinimumSwap).toFormat(3)\n                    : new BigNumber(selectedToken.MinimumSwap).toFormat(4)}{' '}\n                  {selectedToken.originUnderlying.symbol}\n                </div>\n              </DescSubContainer>\n              <DescSubContainer valid>\n                <div style={{ display: 'flex' }}>\n                  <div>{'Minimum Fee '}</div>\n                  <Tooltip\n                    content={`Fee of 0.001 with a minimum fee of ${selectedToken.originUnderlying.symbol} and a maximum fee of 1,000 ${selectedToken.originUnderlying.symbol}. The fee is charged by Multichain, ArcherSwap charges no additional fee.`}\n                  >\n                    <HelpIcon color=\"textSubtle\" />\n                  </Tooltip>\n                </div>\n                <div>\n                  {new BigNumber(selectedToken.MinimumSwapFee).gte(0.001)\n                    ? new BigNumber(selectedToken.MinimumSwapFee).toFormat(3)\n                    : new BigNumber(selectedToken.MinimumSwapFee).toFormat(5)}{' '}\n                  {selectedToken.originUnderlying.symbol}\n                </div>\n              </DescSubContainer>\n              <DescSubContainer valid>\n                <DescInfo>\n                  Amounts greater than {new BigNumber(selectedToken.BigValueThreshold).toFormat(0)}{' '}\n                  {selectedToken.originUnderlying.symbol} could take up to 12 hours\n                </DescInfo>\n              </DescSubContainer>\n            </DescContainer>\n          )}\n        </Container>\n      </StyledPage>\n    </Background>\n  )\n}\n\nexport default Bridge\n","import { useState, useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n// import BigNumber from 'bignumber.js'\nimport { useAnyswapV5 } from './useContract'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useAnySwapOutUnderlying = (router: string, setHash: (hash: string) => void) => {\n  const [pending, setPending] = useState(false)\n  const { account } = useWeb3React()\n  const routerContract = useAnyswapV5(router)\n\n  const anySwapOutUnderlying = useCallback(\n    async (anyToken: string, to: string, amount: string, toChainID: string) => {\n      try {\n        setPending(true)\n        const tx = await routerContract.methods\n          .anySwapOutUnderlying(anyToken, to, amount, toChainID)\n          .send({ from: account })\n          .on('error', () => {\n            setPending(false)\n            return null\n          })\n          .on('transactionHash', (hash) => {\n            setHash(hash)\n            return hash\n          })\n          .on('receipt', (result) => {\n            setPending(false)\n            return result\n          })\n        return tx\n      } catch (e) {\n        setPending(false)\n        return false\n      }\n    },\n    [routerContract.methods, account, setHash],\n  )\n\n  return { onAnySwapOutUnderlying: anySwapOutUnderlying, pending }\n}\n"],"sourceRoot":""}