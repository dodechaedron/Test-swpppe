{"version":3,"sources":["components/Column/index.tsx","components/Row/index.tsx","contexts/Localisation/translationsContext.ts","hooks/useI18n.ts","state/multicall/hooks.ts","hooks/Tokens.ts","components/QuestionHelper/index.tsx","state/lists/hooks.ts","state/user/hooks.tsx","components/swap/styleds.tsx","components/Loader/index.tsx","views/AppBody.tsx","components/Popover/index.tsx","components/Tooltip/index.tsx"],"names":["Column","styled","div","ColumnCenter","AutoColumn","gap","justify","Row","Box","align","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useI18n","useContext","translationId","fallback","data","length","foundTranslation","find","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","Object","keys","forEach","dataKey","templateKey","RegExp","replace","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","useEffect","callKeys","parse","key","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","address","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","addresses","useSingleCallResult","useAllTokens","userAddedTokens","useUserAddedTokens","allTokens","useSelectedTokenList","reduce","tokenMap","token","useIsUserAddedToken","currency","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","parseBytes32String","useToken","tokenAddress","tokens","isAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","Token","useCurrency","currencyId","isCORE","toUpperCase","ETHER","QuestionWrapper","theme","colors","invertedContrast","textSubtle","QuestionHelper","useState","show","setShow","open","useCallback","close","style","marginLeft","onClick","onMouseEnter","onMouseLeave","src","alt","WrappedTokenInfo","tokenInfo","tags","name","this","logoURI","EMPTY_LIST","ChainId","MAINNET","BSCTESTNET","listCache","WeakMap","useTokenList","url","lists","byUrl","current","list","get","tagId","id","Error","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedListInfo","selectedUrl","listsByUrl","pending","pendingUpdate","loadingRequestId","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSlippageTolerance","userSlippageTolerance","slippageTolerance","updateUserSlippageTolerance","useUserDeadline","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","useRemoveUserAddedToken","removeSerializedToken","serializedTokensMap","values","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","getAddress","useTrackedTokenPairs","pinnedPairs","PINNED_PAIRS","generatedPairs","flatMap","BASES_TO_TRACK_LIQUIDITY_FOR","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","memo","sorted","sortsBefore","Wrapper","ArrowWrapper","clickable","css","SectionBreak","tertiary","BottomGrouping","ErrorText","Text","severity","failure","binance","StyledBalanceMaxMini","button","Dots","span","SwapCallbackErrorInner","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","size","SwapShowAcceptChanges","primary","rotate","keyframes","StyledSVG","svg","stroke","Loader","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","BodyWrapper","Card","AppBody","children","PopoverContainer","props","background","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","offset","element","styles","update","attributes","updateCallback","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","MouseoverTooltip"],"mappings":"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","file":"static/js/1.8edb7f17.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? []\n      ),\n    [calls]\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      // @ts-ignore\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        const data = result?.data && result?.data !== '0x' ? result.data : null\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.error('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from 'archerswap-sdk'\nimport { useMemo } from 'react'\nimport { useSelectedTokenList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './index'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n  const allTokens = useSelectedTokenList()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: Token }>(\n          (tokenMap, token) => {\n            tokenMap[token.address] = token\n            return tokenMap\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          { ...allTokens[chainId] }\n        )\n    )\n  }, [chainId, userAddedTokens, allTokens])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency): boolean {\n  const userAddedTokens = useUserAddedTokens()\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : bytes32 && BYTES32_REGEX.test(bytes32)\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isCORE = currencyId?.toUpperCase() === 'CORE'\n  const token = useToken(isCORE ? undefined : currencyId)\n  return isCORE ? ETHER : token\n}\n","import React, { useCallback, useState } from 'react'\n// import { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Tooltip from '../Tooltip'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\n  color: ${({ theme }) => theme.colors.textSubtle};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nexport default function QuestionHelper({ text }: { text: string }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          {/* <Question size={16} /> */}\n          <img src=\"/images/question.svg\" alt=\"help\" />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n","import { ChainId, Token } from 'archerswap-sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.BSCTESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token,\n        },\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(url: string | undefined): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  return useMemo(() => {\n    if (!url) return EMPTY_LIST\n    const current = lists[url]?.current\n    if (!current) return EMPTY_LIST\n    try {\n      return listToTokenMap(current)\n    } catch (error) {\n      console.error('Could not show token list due to error', error)\n      return EMPTY_LIST\n    }\n  }, [lists, url])\n}\n\nexport function useSelectedListUrl(): string | undefined {\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>((state) => state.lists.selectedListUrl)\n}\n\nexport function useSelectedTokenList(): TokenAddressMap {\n  return useTokenList(useSelectedListUrl())\n}\n\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\n  const selectedUrl = useSelectedListUrl()\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\n  return {\n    current: list?.current ?? null,\n    pending: list?.pendingUpdate ?? null,\n    loading: list?.loadingRequestId !== null,\n  }\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map((url) => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n","import { ChainId, Pair, Token } from 'archerswap-sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\n\nimport { useActiveWeb3React } from '../../hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  muteAudio,\n  unmuteAudio,\n} from './actions'\nimport { setThemeCache } from '../../utils/theme'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { userDarkMode } }) => ({\n      userDarkMode,\n    }),\n    shallowEqual\n  )\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    setThemeCache(!userDarkMode)\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\n  }, [userDarkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserDeadline(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Archerswap LPs', 'Archer-LP')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { transparentize } from 'polished'\nimport React from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { Text } from 'archerswap-uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from '../Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const SectionBreak = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n\nexport const BottomGrouping = styled.div`\n  margin-top: 1rem;\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.binance\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n    outline: none;\n  }\n`\n\n// styles\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <AlertTriangle size={24} />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from 'archerswap-uikit'\n\nexport const BodyWrapper = styled(Card)`\n  position: relative;\n  max-width: 436px;\n  width: 100%;\n  z-index: 5;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks/useInterval'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.colors.background};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    if (update) {\n      update()\n    }\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n"],"sourceRoot":""}