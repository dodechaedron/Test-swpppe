{"version":3,"sources":["hooks/useTokenBalance.ts","views/Disperse/Disperse.tsx","hooks/useMultiTransfer.ts"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","Promise","all","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","Background","styled","div","Container","img","Title","props","theme","colors","text","Description","TabContainer","TabItem","active","tertiary","textSubtle","InputContainer","TokenInput","input","borderColor","InputButton","Balance","AddressInput","textarea","CardContainer","background","Confirm","bow","TableContainer","TableItem","TableTitle","TableContent","ItemContainer","Item","ItemTitle","textDisabled","ItemTitle1","ButtonContainer","MultiTransfer","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","tempTokenAddress","setTempTokenAddress","setTokenAddress","ethBalance","tokenBalance","getMultiAddress","pending","setPending","mutiContract","useMuti","useToast","toastError","toastSuccess","onMultiTransfer","addresses","amounts","totalAmount","disperseEther","value","useMutiTransfer","pendingToken","setPendingToken","onTokenMultiTransfer","token","disperseToken","useTokenMutiTransfer","isToken","setIsToken","validAddress","setValidAddress","needApprove","setNeedApprove","inputedText","setInputedText","addressArray","setAddressArray","amountArray","setAmountArray","setTotalAmount","validAmount","setValidAmount","useTheme","isDark","gte","gt","lt","tempAddress","tempAmount","tempTAmount","arrayText","split","i","length","data","addressStartIndex","getAddressIndex","amountData","substring","amountStartIndex","getAmountIndex","amount","parseFloat","push","getMultifyBigNumber","start","startIndex","indexOf","Web3","utils","isAddress","charAt","Banner","src","mobileSrc","alt","title","white","Page","onClick","style","width","maxWidth","onChange","e","target","getBalanceBigNumber","toFormat","color","placeholder","map","index","getFullDisplayBalance","disabled"],"mappings":"mkBASaA,EAAgB,WAC3B,MAA8BC,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QACFE,EAAOC,cACLC,EAAgBC,cAAhBD,YAaR,OAXAE,qBAAU,WAMJN,GALc,uCAAG,4BAAAO,EAAA,sEACDL,EAAKM,IAAIC,WAAWT,GADnB,OACbU,EADa,OAEnBX,EAAW,IAAIF,IAAUa,IAFN,2CAAH,oDAMhBC,KAED,CAACX,EAASE,EAAME,IAEZN,GAGIc,EAAkB,WAC7B,MAA8BhB,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QACFE,EAAOC,cACLC,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJN,GANc,uCAAG,8BAAAO,EAAA,6DACbM,EAAWC,YAAiBC,IAAOC,MAAMC,QAAQ,MAAOf,GAD3C,SAEDW,EAASK,QAAQC,UAAUnB,GAASoB,OAFnC,OAEbV,EAFa,OAGnBX,EAAW,IAAIF,IAAUa,IAHN,2CAAH,oDAOhBC,KAED,CAACX,EAASE,EAAME,IAEZN,GAGIuB,EAAoB,SAACC,EAAsBC,GACtD,MAAkC3B,mBAAS,IAAIC,IAAU,IAAzD,mBAAO2B,EAAP,KAAkBC,EAAlB,KACQzB,EAAYC,cAAZD,QACFE,EAAOC,cACLC,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJN,GAAWsB,GAAgBC,GANb,uCAAG,8BAAAhB,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQM,UAAUxB,EAASuB,GAAeH,OAFlD,OAEbV,EAFa,OAGnBe,EAAa,IAAI5B,IAAUa,IAHR,2CAAH,oDAOhBC,KAED,CAACX,EAASsB,EAAcpB,EAAME,EAAamB,IAEvCC,GAGIE,EAAa,WACxB,MAA4C9B,oBAAS,GAArD,mBAAO+B,EAAP,KAAuBC,EAAvB,KACQ5B,EAAYC,cAAZD,QACFE,EAAOC,cAoBb,MAAO,CAAE0B,UAlBaC,sBAAW,uCAC/B,WAAOP,EAAuBQ,GAA9B,iBAAAxB,EAAA,sEAEIqB,GAAkB,GACZf,EAAWC,YAAiBiB,EAAiB7B,GAHvD,SAIqBW,EAASK,QACvBc,QAAQT,EAAe,IAAI1B,IAAU,GAAGoC,IAAI,KAAKC,MAAM,GAAGC,SAAS,KACnEC,KAAK,CAAEC,KAAMrC,IANpB,cAIUsC,EAJV,OAOIV,GAAkB,GAPtB,kBAQWU,GARX,yCAUIV,GAAkB,GAVtB,mBAWW,GAXX,0DAD+B,wDAe/B,CAAC1B,EAAMF,IAG0B2B,mBAGxBY,EAAiB,SAACjB,GAC7B,MAA4B1B,mBAAS,IAArC,mBAAO4C,EAAP,KAAeC,EAAf,KACMvC,EAAOC,cACLC,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJgB,GANc,uCAAG,8BAAAf,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQsB,SAASpB,OAFzB,OAEbV,EAFa,OAGnB+B,EAAU/B,GAHS,2CAAH,oDAOhBC,KAED,CAACW,EAAcpB,EAAME,IAEjBoC,GAGIE,EAAkB,SAACpB,GAC9B,MAA8B1B,mBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACM1C,EAAOC,cACLC,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJgB,GANc,uCAAG,8BAAAf,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQ2B,WAAWzB,OAF3B,OAEbV,EAFa,OAGnBkC,EAAWlC,GAHQ,2CAAH,oDAOhBC,KAED,CAACW,EAAcpB,EAAME,IAEjBuC,GAwBIG,EAA2B,SAACxB,EAAsByB,GAC7D,MAA8BnD,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QACFE,EAAO8C,YAA0BD,GAC/B3C,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJN,GAAWsB,GAAgByB,GANb,uCAAG,8BAAAxC,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQC,UAAUnB,GAASoB,OAFnC,OAEbV,EAFa,OAGnBX,EAAW,IAAIF,IAAUa,IAHN,2CAAH,oDAOhBC,KAED,CAACX,EAASsB,EAAcpB,EAAME,EAAa2C,IAEvCjD,GAoBImD,EAAmB,SAAC3B,GAC/B,MAA8B1B,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQK,EAAgBC,cAAhBD,YACFF,EAAOC,cAYb,OAVAG,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQC,UAAU,8CAA8CC,OAFxE,OAEbV,EAFa,OAGnBX,EAAW,IAAIF,IAAUa,IAHN,2CAAH,qDAMlBC,KACC,CAACT,EAAMoB,EAAclB,IAEjBN,GAGIoD,EAAwB,WACnC,MAA8BtD,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQK,EAAgBC,cAAhBD,YACFF,EAAOC,cAkBb,OAhBAG,qBAAU,YACU,uCAAG,0CAAAC,EAAA,6DACb4C,EAAcC,cADD,SAEoBC,QAAQC,IAAI,CACjDH,EAAYjC,QAAQqC,cAAcnC,OAClC+B,EAAYjC,QAAQC,UAAU,8CAA8CC,OAC5E+B,EAAYjC,QAAQC,UAAU,8CAA8CC,OAC5E+B,EAAYjC,QAAQC,UAAU,8CAA8CC,SAN3D,mCAEZoC,EAFY,KAENC,EAFM,KAEAC,EAFA,KAEMC,EAFN,KAQbC,EAAgB,IAAI/D,IAAU4D,GAAMI,KAAKH,GAAMG,KAAKF,GAC1D5D,EAAW,IAAIF,IAAU2D,GAAMtB,MAAM0B,IATlB,4CAAH,qDAYlBjD,KACC,CAACT,EAAME,IAEHN,GAGIgE,EAAiB,WAC5B,MAAsClE,mBAAS,GAA/C,mBAAOmE,EAAP,KAAoBC,EAApB,KACQC,EAAgB5D,cAAhB4D,YACF/D,EAAOC,cAYb,OAVAG,qBAAU,YACc,uCAAG,8BAAAC,EAAA,6DACjBM,EAAWqD,YAAmBhE,GADb,SAELW,EAASK,QAAQiD,iBAAiB/C,OAF7B,OAEjBV,EAFiB,OAGvBsD,EAAetD,GAHQ,2CAAH,qDAMtB0D,KACC,CAAClE,EAAM+D,IAEHF,GAGMM,IAvHS,SAAC/C,GACvB,MAA8B1B,mBAAS,IAAIC,IAAU,IAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QACFE,EAAOC,cACLC,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJN,GAAWsB,GANG,uCAAG,8BAAAf,EAAA,6DACbM,EAAWC,YAAiBQ,EAAcpB,GAD7B,SAEDW,EAASK,QAAQC,UAAUnB,GAASoB,OAFnC,OAEbV,EAFa,OAGnBX,EAAW,IAAIF,IAAUa,IAHN,2CAAH,oDAOhBC,KAED,CAACX,EAASsB,EAAcpB,EAAME,IAE1BN,I,yWCnIHwE,EAAaC,UAAOC,IAAV,4CAIVC,GADOF,UAAOG,IAAV,0BACQH,UAAOC,IAAV,8HAMTG,EAAQJ,UAAOC,IAAV,uJAKA,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAGnCC,EAAcT,UAAOC,IAAV,mJAIN,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAInCE,GAAeV,UAAOC,IAAV,0EAIZU,GAAUX,UAAOC,IAAV,kRAGG,SAACI,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAMC,MAAMC,OAAOM,YAM/D,SAACR,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAMC,MAAMC,OAAOO,cACxD,SAACT,GAAD,OAAYA,EAAMO,OAAS,IAAM,OAIxCG,GAAiBf,UAAOC,IAAV,kHAMde,GAAahB,UAAOiB,MAAV,sNAKL,SAACZ,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,cACzB,SAACT,GAAD,OAAWA,EAAMC,MAAMC,OAAOM,YAExB,SAACR,GAAD,OAAWA,EAAMC,MAAMC,OAAOW,eAG9CC,GAAcnB,UAAOC,IAAV,8XAgBXmB,GAAUpB,UAAOC,IAAV,iIAIF,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,cAGnCO,GAAerB,UAAOsB,SAAV,4SAOP,SAACjB,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,cACzB,SAACT,GAAD,OAAWA,EAAMC,MAAMC,OAAOM,YAExB,SAACR,GAAD,OAAWA,EAAMC,MAAMC,OAAOW,eAGvC,SAACb,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,cAGrCS,GAAgBvB,UAAOC,IAAV,gNACH,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOiB,cAQxCC,GAAUzB,UAAOC,IAAV,iIAKF,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOmB,OAEnCC,GAAiB3B,UAAOC,IAAV,mHACJ,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOM,YAKxCe,GAAY5B,UAAOC,IAAV,qGAKT4B,GAAa7B,UAAOC,IAAV,sGAGL,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAGnCsB,GAAe9B,UAAOC,IAAV,yFAKZ8B,GAAgB/B,UAAOC,IAAV,kDAGb+B,GAAOhC,UAAOC,IAAV,wGAKJgC,GAAYjC,UAAOC,IAAV,0GAIJ,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAO2B,gBAEnCC,GAAanC,UAAOC,IAAV,0GAIL,SAACI,GAAD,OAAYA,EAAMO,OAASP,EAAMC,MAAMC,OAAO2B,aAAe,SAElEE,GAAkBpC,UAAOC,IAAV,oHAiTNoC,GA1SiB,WAC9B,IAAQC,EAAMC,cAAND,EACR,EAA0BE,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,EAAgDtH,qBAAhD,mBAAOwH,EAAP,KAAyBC,EAAzB,KACA,EAAwCzH,qBAAxC,mBAAO0B,EAAP,KAAqBgG,EAArB,KACQtH,EAAYC,cAAZD,QACFuH,EAAa5H,cACb6H,EAAenD,YAAgB/C,GAC/BkB,EAASD,YAAejB,GACxBqB,EAAUD,YAAgBpB,GAC1BE,EAAYH,YAAkBC,EAAcmG,eAClD,ECnM6B,WAC7B,MAA8B7H,oBAAS,GAAvC,mBAAO8H,EAAP,KAAgBC,EAAhB,KACQ3H,EAAYC,cAAZD,QACF4H,EAAeC,cACrB,EAAqCC,cAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAqBpB,MAAO,CAAEC,gBAnBWnG,sBAAW,uCAC7B,WAAOoG,EAAqBC,EAAmBC,GAA/C,eAAA7H,EAAA,sEAEIoH,GAAW,GAFf,SAGqBC,EAAa1G,QAC3BmH,cAAcH,EAAWC,GACzB/F,KAAK,CAAEC,KAAMrC,EAASsI,MAAOF,EAAYjG,aALhD,cAGUG,EAHV,OAMI0F,EAAa,UAAW,oBACxBL,GAAW,GAPf,kBAQWrF,GARX,yCAUIyF,EAAW,QAAS,sBACpBJ,GAAW,GAXf,mBAYW,GAZX,0DAD6B,0DAgB7B,CAACC,EAAc5H,EAASgI,EAAcD,IAGDL,WD0KFa,GAA7BN,EAAR,EAAQA,gBAAiBP,EAAzB,EAAyBA,QACzB,ECvKkC,WAClC,MAAwC9H,oBAAS,GAAjD,mBAAO4I,EAAP,KAAqBC,EAArB,KACQzI,EAAYC,cAAZD,QACF4H,EAAeC,cACrB,EAAqCC,cAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAmBpB,MAAO,CAAEU,qBAjBW5G,sBAAW,uCAC7B,WAAO6G,EAAeT,EAAqBC,GAA3C,eAAA5H,EAAA,sEAEIkI,GAAgB,GAFpB,SAGqBb,EAAa1G,QAAQ0H,cAAcD,EAAOT,EAAWC,GAAS/F,KAAK,CAAEC,KAAMrC,IAHhG,cAGUsC,EAHV,OAII0F,EAAa,UAAW,oBACxBS,GAAgB,GALpB,kBAMWnG,GANX,yCAQIyF,EAAW,QAAS,sBACpBU,GAAgB,GATpB,mBAUW,GAVX,0DAD6B,0DAc7B,CAACb,EAAc5H,EAASgI,EAAcD,IAGIS,gBDgJGK,GAAvCH,EAAR,EAAQA,qBAAsBF,EAA9B,EAA8BA,aAC9B,EAAsC9G,cAA9BG,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,eAEnB,EAA8B/B,oBAAkB,GAAhD,mBAAOkJ,EAAP,KAAgBC,GAAhB,KACA,GAAwCnJ,oBAAkB,GAA1D,qBAAOoJ,GAAP,MAAqBC,GAArB,MACA,GAAsCrJ,oBAAkB,GAAxD,qBAAOsJ,GAAP,MAAoBC,GAApB,MAEA,GAAsCvJ,qBAAtC,qBAAOwJ,GAAP,MAAoBC,GAApB,MACA,GAAwCzJ,mBAAmB,IAA3D,qBAAO0J,GAAP,MAAqBC,GAArB,MACA,GAAsC3J,mBAAmB,IAAzD,qBAAO4J,GAAP,MAAoBC,GAApB,MACA,GAAsC7J,mBAAoB,IAAIC,IAAU,IAAxE,qBAAOuI,GAAP,MAAoBsB,GAApB,MACA,GAAsC9J,oBAAkB,GAAxD,qBAAO+J,GAAP,MAAoBC,GAApB,MACmBC,cAAXC,OAERxJ,qBAAU,WACHwI,EAQCtB,EAAauC,IAAI3B,IACnBwB,IAAe,GAEfA,IAAe,GAVbrC,EAAWwC,IAAI3B,IACjBwB,IAAe,GAEfA,IAAe,KAUlB,CAACrC,EAAYa,GAAaZ,EAAcsB,IAE3CxI,qBAAU,WACRiJ,GAAgB,IAChBE,GAAe,IACfC,GAAe,IAAI7J,IAAU,MAE5B,CAACiJ,IAEJxI,qBAAU,WACJwI,GACEV,GAAY4B,GAAG,IAAInK,IAAU,KAAO2B,EAAUyI,GAAG7B,IACnDe,IAAe,GAKjBA,IAAe,KAEhB,CAAC3H,EAAW4G,GAAaU,IAE5BxI,qBAAU,WACR,GAAI8I,GAAa,CAKf,IAJA,IAAMc,EAAc,GACdC,EAAa,GACfC,EAAc,IAAIvK,IAAU,GAC1BwK,EAAYjB,GAAYkB,MAAM,MAC3BC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAK,CACzC,IAAME,EAAOJ,EAAUE,GACvB,GAAIE,GAAQA,EAAKD,OApED,GAoEyB,CACvC,IAAME,EAAoBC,GAAgBF,EAAM,GAC1CG,EAAaH,EAAKI,UAAUH,EAtEpB,IAuERI,EAAmBC,GAAeH,GAClCI,EAASJ,EAAWC,UAAUC,GAChCG,WAAWD,KACbd,EAAYgB,KAAKT,EAAKI,UAAUH,EAAmBA,EA1EvC,GA0E2E,IACvFP,EAAWe,KAAKC,YAAoB,IAAItL,IAAUoL,WAAWD,IAAUlC,EAAUnG,EAAU,IAAIR,YAC/FiI,EAAcA,EAAYvG,KACxBsH,YAAoB,IAAItL,IAAUoL,WAAWD,IAAUlC,EAAUnG,EAAU,OAKnF4G,GAAgBW,GAChBT,GAAeU,GACfT,GAAeU,QAEfb,GAAgB,IAChBE,GAAe,MAGhB,CAACL,KAEJ,IAAMuB,GAAkB,SAAlBA,EAAmBF,EAAcW,GACrC,IAAMC,EAAaZ,EAAKa,QAAQ,KAAMF,GAEtC,OAAoB,IAAhBC,EACKA,EAELA,EAlGgB,GAkGaZ,EAAKD,QAC5B,EAGae,IAAKC,MAAMC,UAAUhB,EAAKI,UAAUQ,EAAYA,EAtGnD,GAsGgF,IAE3FA,EAEFV,EAAgBF,EAAMY,EAAa,IAGtCN,GAAiB,SAACN,GACtB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAKD,OAAQD,IAC/B,GAAIE,EAAKiB,OAAOnB,IAAM,KAAOE,EAAKiB,OAAOnB,IAAM,IAC7C,OAAOA,EAGX,OAAQ,GAeV,OACE,eAACjG,EAAD,WACE,cAACqH,EAAA,EAAD,CACEC,IAAI,gDACJC,UAAU,uDACVC,IAAI,kBACJC,MAAOlF,EAAE,0BACT9B,KAAM8B,EAAE,mDACRmF,OAAK,IAEP,cAACC,EAAA,EAAD,UACE,eAACxH,EAAD,WACE,eAACQ,GAAD,WACE,cAACC,GAAD,CACEC,QAAS2D,EACToD,QAAS,WACPnD,IAAW,IAHf,kBAQA,cAAC7D,GAAD,CACEC,OAAQ2D,EACRoD,QAAS,WACPnD,IAAW,IAHf,SAMGlC,EAAE,cAGNiC,EACC,sBAAKqD,MAAO,CAAEC,MAAO,OAAQC,SAAU,KAAvC,UACE,cAAC1H,EAAD,UAAQkC,EAAE,mBACV,eAACvB,GAAD,WACE,cAACC,GAAD,CACE+C,MAAOlB,EACPkF,SAAU,SAACC,GACTlF,EAAoBkF,EAAEC,OAAOlE,UAGjC,cAAC5C,GAAD,CACEwG,QAAS,WACgBX,IAAKC,MAAMC,UAAUrE,IAE1C6B,IAAgB,GAChB3B,EAAgBF,IAEhB6B,IAAgB,IAPtB,SAWGpC,EAAE,aAGNmC,IAAgBrG,EAAU,EACzB,cAACgD,GAAD,UACGkB,EAAE,qBAAsB,CACvB/G,QAAQ,GAAD,OAAK2M,YAAoBjF,EAAc7E,GAAS+J,SACrD,GADK,YAEFlK,EAFE,qBAEiBG,EAFjB,0CAOX,cAACgD,GAAD,CAASwG,MAAO,CAAEQ,MAAO,WAAzB,SAAuC9F,EAAE,0BAI7C,cAAClB,GAAD,UAAUkB,EAAE,0BAA2B,CAAE/G,QAAS2M,YAAoBlF,GAAYmF,SAAS,OAE7F,cAAC/H,EAAD,UAAQkC,EAAE,4BACV,cAAC7B,EAAD,UACG6B,EAAE,+EAAgF,CACjFrE,OAAQsG,EAAU,QAAU,WAIhC,cAAClD,GAAD,CACEgH,YAAY,oJACZtE,MAAOc,GACPkD,SAAU,SAACC,GAAD,OAAOlD,GAAekD,EAAEC,OAAOlE,UAG3C,eAACxC,GAAD,WACE,cAACE,GAAD,UAAUa,EAAE,aACZ,eAACX,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,UAAaS,EAAE,aACf,cAACT,GAAD,UAAaS,EAAE,eAEhByC,GAAauD,KAAI,SAAC5L,EAAS6L,GAC1B,OACE,eAAC3G,GAAD,WACE,cAACE,GAAD,UAAepF,IACf,eAACoF,GAAD,WACG0G,YAAsB,IAAIlN,IAAU2J,GAAYsD,IAAShE,EAAUnG,EAAU,IAAK,IAClFmG,EAAUtG,EAAS,YAJRsK,EAAM3K,kBAU5B,eAACmE,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,UAAYK,EAAE,WACd,eAACL,GAAD,WACGiG,YAAoBrE,GAAaU,EAAUnG,EAAU,IAAI+J,SAAS,GADrE,IAC0E5D,EAAUtG,EAAS,aAG/F,eAAC+D,GAAD,WACE,cAACC,GAAD,UAAYK,EAAE,kBACd,eAACL,GAAD,WACGiG,YAAoB3D,EAAUtB,EAAeD,EAAYuB,EAAUnG,EAAU,IAAI+J,SAAS,GAAI,IAC9F5D,EAAUtG,EAAS,aAGxB,eAAC+D,GAAD,WACE,cAACG,GAAD,CAAYvB,OAAQwE,GAApB,SAAkC9C,EAAE,eACpC,eAACH,GAAD,CAAYvB,OAAQwE,GAApB,UACG8C,YACC3D,EAAUtB,EAAatF,MAAMkG,IAAeb,EAAWrF,MAAMkG,IAC7DU,EAAUnG,EAAU,IACpB+J,SAAS,GAAI,IACd5D,EAAUtG,EAAS,gBAI1B,cAACmE,GAAD,UACE,cAAC,IAAD,CACEyF,MAAM,OACNY,SACEtF,GACAc,GACA7G,GACwB,IAAxB2H,GAAakB,QACU,IAAvBhB,GAAYgB,SACXb,GAEHuC,QAAS,WACFlM,EAEM2J,KAAgBjC,IAxJrCoB,EACEI,GACFrH,EAAU4F,cAAmBnG,GAE7BoH,EAAqBpH,EAAcgI,GAAcE,IAGnDvB,EAAgBqB,GAAcE,GAAapB,KAgJ7BlB,KAZN,SAkBIlH,EAEE0H,GAAWc,GAAgB7G,EAA3B,UACGkF,EAAE,WADL,OAGAA,EADAqC,GACE,UACFJ,EACE,iBACA,iBAPFjC,EAAE","file":"static/js/33.497dfb56.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getBowContract, getFactoryContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nexport const useETHBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useWcoreBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.allowance(account, targetAddress).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && targetAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\n\n  return allowance\n}\n\nexport const useApprove = () => {\n  const [approvePending, setApprovePending] = useState(false)\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(\n    async (targetAddress: string, contractAddress: string) => {\n      try {\n        setApprovePending(true)\n        const contract = getBep20Contract(contractAddress, web3)\n        const tx = await contract.methods\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\n          .send({ from: account })\n        setApprovePending(false)\n        return tx\n      } catch (e) {\n        setApprovePending(false)\n        return false\n      }\n    },\n    [web3, account],\n  )\n\n  return { onApprove: handleApprove, approvePending }\n}\n\nexport const useTokenSymbol = (tokenAddress: string) => {\n  const [symbol, setSymbol] = useState('')\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.symbol().call()\n      setSymbol(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return symbol\n}\n\nexport const useTokenDecimal = (tokenAddress: string) => {\n  const [decimal, setDecimal] = useState(0)\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.decimals().call()\n      setDecimal(res)\n    }\n\n    if (tokenAddress) {\n      fetchBalance()\n    }\n  }, [tokenAddress, web3, fastRefresh])\n\n  return decimal\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = getWeb3NoAccountFromChain(chainId)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && tokenAddress && chainId) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const bowContract = getBowContract()\n      const supply = await bowContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useCirculatingBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const bowContract = getBowContract()\n      const [tRes, res0, res1, res2] = await Promise.all([\n        bowContract.methods.totalSupply().call(),\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\n      ])\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\n    }\n\n    fetchBalance()\n  }, [web3, fastRefresh])\n\n  return balance\n}\n\nexport const usePairsLength = () => {\n  const [pairsLength, setPairsLength] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchPairsLength = async () => {\n      const contract = getFactoryContract(web3)\n      const res = await contract.methods.allPairsLength().call()\n      setPairsLength(res)\n    }\n\n    fetchPairsLength()\n  }, [web3, slowRefresh])\n\n  return pairsLength\n}\n\nexport default useTokenBalance\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from 'react'\nimport Web3 from 'web3'\nimport styled from 'styled-components'\nimport Page from 'components/layout/Page'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBalanceBigNumber, getMultifyBigNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport useTokenBalance, {\n  useETHBalance,\n  useTokenAllowance,\n  useApprove,\n  useTokenSymbol,\n  useTokenDecimal,\n} from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMutiTransfer, useTokenMutiTransfer } from 'hooks/useMultiTransfer'\nimport { getMultiAddress } from 'utils/addressHelpers'\nimport { useWalletModal, Button } from 'archerswap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport Banner from '../../components/Banner'\nimport 'react-multi-carousel/lib/styles.css'\nimport useTheme from '../../hooks/useTheme'\n\nconst Background = styled.div`\n  width: 100%;\n`\nconst Icon = styled.img``\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\nconst Title = styled.div`\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 28px;\n  color: ${(props) => props.theme.colors.text};\n  padding-top: 32px;\n`\nconst Description = styled.div`\n  text-align: center;\n  font-size: 20px;\n  line-height: 24px;\n  color: ${(props) => props.theme.colors.text};\n  padding-top: 16px;\n  opacity: 0.8;\n`\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\nconst TabItem = styled.div<{ active: boolean }>`\n  display: flex;\n  padding: 11px 57px;\n  background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\n  border-radius: 32px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\n  z-index: ${(props) => (props.active ? '1' : '0')};\n  margin: 32px -18px;\n  cursor: pointer;\n`\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`\nconst TokenInput = styled.input`\n  margin: 16px 0px;\n  max-width: 800px;\n  width: 100%;\n  font-size: 14px;\n  color: ${(props) => props.theme.colors.textSubtle};\n  background: ${(props) => props.theme.colors.tertiary};\n  padding: 14px 32px;\n  border: solid 1px ${(props) => props.theme.colors.borderColor};\n  border-radius: 10px;\n`\nconst InputButton = styled.div`\n  background: linear-gradient(265.22deg, #ed952e 0%, #f7ce47 100%);\n  border-radius: 8px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 32px;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: #ffffff;\n  margin: 0 10px;\n  cursor: pointer;\n`\nconst Balance = styled.div`\n  text-align: center;\n  font-size: 24px;\n  line-height: 24px;\n  color: ${(props) => props.theme.colors.textSubtle};\n  font-weight: 500;\n`\nconst AddressInput = styled.textarea`\n  margin: 16px 0px;\n  max-width: 800px;\n  width: 100%;\n  min-height: 120px;\n  font-size: 14px;\n  line-height: 22px;\n  color: ${(props) => props.theme.colors.textSubtle};\n  background: ${(props) => props.theme.colors.tertiary};\n  padding: 10px 15px;\n  border: solid 1px ${(props) => props.theme.colors.borderColor};\n  border-radius: 10px;\n  &::placeholder {\n    color: ${(props) => props.theme.colors.textSubtle};\n  }\n`\nconst CardContainer = styled.div`\n  background: ${(props) => props.theme.colors.background};\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\n  border-radius: 16px;\n  max-width: 800px;\n  width: 100%;\n  margin: 15px 0px;\n  padding: 32px 24px;\n`\nconst Confirm = styled.div`\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 28px;\n  color: ${(props) => props.theme.colors.bow};\n`\nconst TableContainer = styled.div`\n  background: ${(props) => props.theme.colors.tertiary};\n  border-radius: 7px;\n  margin-top: 24px;\n  padding: 32px 26px;\n`\nconst TableItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 2px 0px;\n`\nconst TableTitle = styled.div`\n  font-size: 16px;\n  line-height: 24px;\n  color: ${(props) => props.theme.colors.text};\n  opacity: 0.8;\n`\nconst TableContent = styled.div`\n  font-size: 12px;\n  line-height: 18px;\n  color: #999999;\n`\nconst ItemContainer = styled.div`\n  padding: 10px 0px;\n`\nconst Item = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 26px;\n`\nconst ItemTitle = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${(props) => props.theme.colors.textDisabled};\n`\nconst ItemTitle1 = styled.div<{ active: boolean }>`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${(props) => (props.active ? props.theme.colors.textDisabled : 'red')};\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px;\n`\n\nconst MultiTransfer: React.FC = () => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n  const addressLength = 43\n  const [tempTokenAddress, setTempTokenAddress] = useState<string>()\n  const [tokenAddress, setTokenAddress] = useState<string>()\n  const { account } = useWeb3React()\n  const ethBalance = useETHBalance()\n  const tokenBalance = useTokenBalance(tokenAddress)\n  const symbol = useTokenSymbol(tokenAddress)\n  const decimal = useTokenDecimal(tokenAddress)\n  const allowance = useTokenAllowance(tokenAddress, getMultiAddress())\n  const { onMultiTransfer, pending } = useMutiTransfer()\n  const { onTokenMultiTransfer, pendingToken } = useTokenMutiTransfer()\n  const { onApprove, approvePending } = useApprove()\n\n  const [isToken, setIsToken] = useState<boolean>(false)\n  const [validAddress, setValidAddress] = useState<boolean>(false)\n  const [needApprove, setNeedApprove] = useState<boolean>(false)\n\n  const [inputedText, setInputedText] = useState<string>()\n  const [addressArray, setAddressArray] = useState<string[]>([])\n  const [amountArray, setAmountArray] = useState<string[]>([])\n  const [totalAmount, setTotalAmount] = useState<BigNumber>(new BigNumber(0))\n  const [validAmount, setValidAmount] = useState<boolean>(true)\n  const { isDark } = useTheme()\n\n  useEffect(() => {\n    if (!isToken) {\n      if (ethBalance.gte(totalAmount)) {\n        setValidAmount(true)\n      } else {\n        setValidAmount(false)\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (tokenBalance.gte(totalAmount)) {\n        setValidAmount(true)\n      } else {\n        setValidAmount(false)\n      }\n    }\n  }, [ethBalance, totalAmount, tokenBalance, isToken])\n\n  useEffect(() => {\n    setAddressArray([])\n    setAmountArray([])\n    setTotalAmount(new BigNumber(0))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isToken])\n\n  useEffect(() => {\n    if (isToken) {\n      if (totalAmount.gt(new BigNumber(0)) && allowance.lt(totalAmount)) {\n        setNeedApprove(true)\n      } else {\n        setNeedApprove(false)\n      }\n    } else {\n      setNeedApprove(false)\n    }\n  }, [allowance, totalAmount, isToken])\n\n  useEffect(() => {\n    if (inputedText) {\n      const tempAddress = []\n      const tempAmount = []\n      let tempTAmount = new BigNumber(0)\n      const arrayText = inputedText.split('\\n')\n      for (let i = 0; i < arrayText.length; i++) {\n        const data = arrayText[i]\n        if (data && data.length > addressLength) {\n          const addressStartIndex = getAddressIndex(data, 0)\n          const amountData = data.substring(addressStartIndex + addressLength)\n          const amountStartIndex = getAmountIndex(amountData)\n          const amount = amountData.substring(amountStartIndex)\n          if (parseFloat(amount)) {\n            tempAddress.push(data.substring(addressStartIndex, addressStartIndex + addressLength - 1))\n            tempAmount.push(getMultifyBigNumber(new BigNumber(parseFloat(amount)), isToken ? decimal : 18).toString())\n            tempTAmount = tempTAmount.plus(\n              getMultifyBigNumber(new BigNumber(parseFloat(amount)), isToken ? decimal : 18),\n            )\n          }\n        }\n      }\n      setAddressArray(tempAddress)\n      setAmountArray(tempAmount)\n      setTotalAmount(tempTAmount)\n    } else {\n      setAddressArray([])\n      setAmountArray([])\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputedText])\n\n  const getAddressIndex = (data: string, start: number) => {\n    const startIndex = data.indexOf('0x', start)\n\n    if (startIndex === -1) {\n      return startIndex\n    }\n    if (startIndex + addressLength > data.length) {\n      return -1\n    }\n\n    const isValidAddress = Web3.utils.isAddress(data.substring(startIndex, startIndex + addressLength - 1))\n    if (isValidAddress) {\n      return startIndex\n    }\n    return getAddressIndex(data, startIndex + 2)\n  }\n\n  const getAmountIndex = (data: string) => {\n    for (let i = 0; i < data.length; i++) {\n      if (data.charAt(i) >= '0' && data.charAt(i) <= '9') {\n        return i\n      }\n    }\n    return -1\n  }\n\n  const onSendETH = () => {\n    if (isToken) {\n      if (needApprove) {\n        onApprove(getMultiAddress(), tokenAddress)\n      } else {\n        onTokenMultiTransfer(tokenAddress, addressArray, amountArray)\n      }\n    } else {\n      onMultiTransfer(addressArray, amountArray, totalAmount)\n    }\n  }\n\n  return (\n    <Background>\n      <Banner\n        src=\"/images/assets/banners/multisender_banner.png\"\n        mobileSrc=\"/images/assets/banners/mobile_multisender_banner.png\"\n        alt=\"disperse_banner\"\n        title={t('Free Token Multisender')}\n        text={t('Distribute CORE or tokens to multiple addresses')}\n        white\n      />\n      <Page>\n        <Container>\n          <TabContainer>\n            <TabItem\n              active={!isToken}\n              onClick={() => {\n                setIsToken(false)\n              }}\n            >\n              CORE\n            </TabItem>\n            <TabItem\n              active={isToken}\n              onClick={() => {\n                setIsToken(true)\n              }}\n            >\n              {t('Token')}\n            </TabItem>\n          </TabContainer>\n          {isToken ? (\n            <div style={{ width: '100%', maxWidth: 800 }}>\n              <Title>{t('Token Address')}</Title>\n              <InputContainer>\n                <TokenInput\n                  value={tempTokenAddress}\n                  onChange={(e) => {\n                    setTempTokenAddress(e.target.value)\n                  }}\n                />\n                <InputButton\n                  onClick={() => {\n                    const isValidAddress = Web3.utils.isAddress(tempTokenAddress)\n                    if (isValidAddress) {\n                      setValidAddress(true)\n                      setTokenAddress(tempTokenAddress)\n                    } else {\n                      setValidAddress(false)\n                    }\n                  }}\n                >\n                  {t('LOAD')}\n                </InputButton>\n              </InputContainer>\n              {validAddress && decimal > 0 ? (\n                <Balance>\n                  {t('You have %balance%', {\n                    balance: `${getBalanceBigNumber(tokenBalance, decimal).toFormat(\n                      5,\n                    )} ${symbol} (ERC 20, ${decimal}{' '}\n                  Decimals)`,\n                  })}\n                </Balance>\n              ) : (\n                <Balance style={{ color: '#6E7B9B' }}>{t('Incorrect address')}</Balance>\n              )}\n            </div>\n          ) : (\n            <Balance>{t('You have %balance% CORE', { balance: getBalanceBigNumber(ethBalance).toFormat(5) })}</Balance>\n          )}\n          <Title>{t('Recipients and amounts')}</Title>\n          <Description>\n            {t('Enter one address and amounts in %symbol% on each line, supports any format.', {\n              symbol: isToken ? 'Token' : 'CORE',\n            })}\n          </Description>\n\n          <AddressInput\n            placeholder=\"0xD6170A12b133005fAbCf877d636340a4B183b16585123&#10;0xD6170A12b133005fAbCf877d636340a4B183b1658-123&#10;0xD6170A12b133005fAbCf877d636340a4B183b1658=123\"\n            value={inputedText}\n            onChange={(e) => setInputedText(e.target.value)}\n          />\n\n          <CardContainer>\n            <Confirm>{t('Confirm')}</Confirm>\n            <TableContainer>\n              <TableItem>\n                <TableTitle>{t('Address')}</TableTitle>\n                <TableTitle>{t('Amount')}</TableTitle>\n              </TableItem>\n              {addressArray.map((address, index) => {\n                return (\n                  <TableItem key={index.toString()}>\n                    <TableContent>{address}</TableContent>\n                    <TableContent>\n                      {getFullDisplayBalance(new BigNumber(amountArray[index]), isToken ? decimal : 18)}{' '}\n                      {isToken ? symbol : 'CORE'}\n                    </TableContent>\n                  </TableItem>\n                )\n              })}\n            </TableContainer>\n            <ItemContainer>\n              <Item>\n                <ItemTitle>{t('Total')}</ItemTitle>\n                <ItemTitle>\n                  {getBalanceBigNumber(totalAmount, isToken ? decimal : 18).toFormat(5)} {isToken ? symbol : 'CORE'}\n                </ItemTitle>\n              </Item>\n              <Item>\n                <ItemTitle>{t('Your balance')}</ItemTitle>\n                <ItemTitle>\n                  {getBalanceBigNumber(isToken ? tokenBalance : ethBalance, isToken ? decimal : 18).toFormat(5)}{' '}\n                  {isToken ? symbol : 'CORE'}\n                </ItemTitle>\n              </Item>\n              <Item>\n                <ItemTitle1 active={validAmount}>{t('Remaining')}</ItemTitle1>\n                <ItemTitle1 active={validAmount}>\n                  {getBalanceBigNumber(\n                    isToken ? tokenBalance.minus(totalAmount) : ethBalance.minus(totalAmount),\n                    isToken ? decimal : 18,\n                  ).toFormat(5)}{' '}\n                  {isToken ? symbol : 'CORE'}\n                </ItemTitle1>\n              </Item>\n            </ItemContainer>\n            <ButtonContainer>\n              <Button\n                width=\"100%\"\n                disabled={\n                  pending ||\n                  pendingToken ||\n                  approvePending ||\n                  addressArray.length === 0 ||\n                  amountArray.length === 0 ||\n                  !validAmount\n                }\n                onClick={() => {\n                  if (!account) {\n                    onPresentConnectModal()\n                  } else if (validAmount && !pending) {\n                    onSendETH()\n                  }\n                }}\n              >\n                {!account\n                  ? t('Connect Wallet')\n                  : pending || pendingToken || approvePending\n                  ? `${t('Pending')}...`\n                  : needApprove\n                  ? t('Approve')\n                  : isToken\n                  ? t('Disperse Token')\n                  : t('Disperse CORE')}\n              </Button>\n            </ButtonContainer>\n          </CardContainer>\n        </Container>\n      </Page>\n    </Background>\n  )\n}\n\nexport default MultiTransfer\n","import { useState, useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useToast } from 'state/hooks'\nimport { useMuti } from './useContract'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useMutiTransfer = () => {\n  const [pending, setPending] = useState(false)\n  const { account } = useWeb3React()\n  const mutiContract = useMuti()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleMulti = useCallback(\n    async (addresses: string[], amounts: string[], totalAmount: BigNumber) => {\n      try {\n        setPending(true)\n        const tx = await mutiContract.methods\n          .disperseEther(addresses, amounts)\n          .send({ from: account, value: totalAmount.toString() })\n        toastSuccess('Success', 'Multi send done!')\n        setPending(false)\n        return tx\n      } catch (e) {\n        toastError('Error', 'Multi send failed.')\n        setPending(false)\n        return false\n      }\n    },\n    [mutiContract, account, toastSuccess, toastError],\n  )\n\n  return { onMultiTransfer: handleMulti, pending }\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useTokenMutiTransfer = () => {\n  const [pendingToken, setPendingToken] = useState(false)\n  const { account } = useWeb3React()\n  const mutiContract = useMuti()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleMulti = useCallback(\n    async (token: string, addresses: string[], amounts: string[]) => {\n      try {\n        setPendingToken(true)\n        const tx = await mutiContract.methods.disperseToken(token, addresses, amounts).send({ from: account })\n        toastSuccess('Success', 'Multi send done!')\n        setPendingToken(false)\n        return tx\n      } catch (e) {\n        toastError('Error', 'Multi send failed.')\n        setPendingToken(false)\n        return false\n      }\n    },\n    [mutiContract, account, toastSuccess, toastError],\n  )\n\n  return { onTokenMultiTransfer: handleMulti, pendingToken }\n}\n"],"sourceRoot":""}