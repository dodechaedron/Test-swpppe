{"version":3,"sources":["components/Marketplace/CategoryTab/index.tsx","components/Marketplace/CustomImg/CustomImg.module.css","components/Marketplace/AnalyticHead/index.tsx","components/Marketplace/Sidebar/Traits/Select/Select.tsx","components/Marketplace/Sidebar/Traits/Option/Option.tsx","components/Marketplace/Sidebar/Traits/Traits.tsx","components/Marketplace/SortButtons/index.tsx","components/Marketplace/CustomImg/CustomImg.tsx","components/Marketplace/NftCard/index.tsx","components/Marketplace/NftList/index.tsx","components/Marketplace/CollectionInfo/index.tsx","views/Marketplace/CollectionDetail.tsx"],"names":["CategoryTabContainer","styled","div","theme","colors","card","text","CategoryTab","onActivityListing","useState","button","setButton","title","map","e","index","className","onClick","role","module","exports","AnalyticHeadContainer","AnalyticHead","to","Select","select","isChecked","onChange","Box","sx","display","justifyContent","alignItems","mb","xs","gap","Checkbox","checked","Typography","fontSize","fontWeight","color","label","textAlign","amount","percentage","Option","options","traitFilter","onChangeTraits","traits","setTraits","indexes","setIndexes","useEffect","option","i","maxHeight","includes","overflow","filter","sort","a","b","findIndex","t","values","v","optionItem","traitIndex","type","push","attributeIndex","splice","length","handleChange","target","Button","disableElevation","borderRadius","paddingY","md","paddingX","boxShadow","width","_i","indexOf","TraitButtonWrap","props","textDisabled","TraitListWrap","background","TemporaryDrawer","collectionInfo","attributeInfo","top","left","bottom","right","state","setState","setOptions","attributeCategories","_options","totalSupply","attr","value","count","BigNumber","times","dp","toString","anchor","toggleDrawer","open","event","key","ListItem","style","padding","cursor","src","alt","ListItemText","primary","Drawer","transitionDuration","enter","exit","onClose","PaperProps","position","my","mx","maxWidth","onKeyDown","Divider","py","variant","SortButtonsContainer","SortButtons","tabType","onSort","sorts","setSorts","sortType","setSortType","CustomImg","imgRef","useRef","loaded","setLoaded","onLoad","current","complete","styles","imgContent","CircularProgress","height","marginRight","ref","nftImg","join","NftCardWrap","StyledCard","Card","MarketCard","tokenHighestBids","latestSoldTokens","token","tokenListing","isMyNFT","alias","tokenId","CardActionArea","pt","thumbnailCdnUrl","CardContent","flexGrow","name","rarityRank","pb","find","isZero","valueNum","NftListContainer","_tokens","NftList","isToggle","page","tokensInfo","totalCount","loadMore","onMyNftToggle","setIsMyNFT","tokens","setTokens","_t","pageStart","hasMore","loader","Grid","container","spacing","item","sm","lg","xl","NftCard","CollectionInfoContainer","InfoWrap","bow","InfoDetail","CollectionInfo","floor","onSearch","href","address","rel","websiteUrl","totalVolume","placeholder","Background","CollectionHeader","sidebar","CollectionDetail","isDark","useTheme","filters","tokenCountInput","setTokenCountInput","setTraitFilter","tokenIds","setTokenIds","setTotalCount","searchNumber","setSearchNumber","setPage","isShowMyNft","setIsShowMyNft","setTabType","setLatestSoldTokens","params","useParams","useCollection","useCollectionAttributes","tokenCountInfo","useERC721TokenCount","pageSize","useERC721Tokens","soldTokens","useERC721RecentEventsLite","chainId","tokenAddress","events","limit","totalListingNum","useNumTokenListings","useTokenListings","myTokenIds","useGetMyTokenIds","useNumTokenWithBids","totalTokenBid","getTokenWithBids","useTokenHighestBids","getTokenHighestBids","isGreaterThan","isLessThan","tl","_latestSoldToken","lt","timestamp","_tokenIds","_","idx","setTimeout","orderBy","direction","traitData"],"mappings":"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","file":"static/js/25.9880b139.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst CategoryTabContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  border-top: 1px solid #f0f0f0;\n  background: ${({ theme }) => theme.colors.card};\n\n  .tab-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 100%;\n    font-weight: 500;\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.text};\n    cursor: pointer;\n\n    @media (max-width: 768px) {\n      width: 60px;\n      font-size: 14px;\n    }\n\n    &:not(:last-child) {\n      margin-right: 40px;\n      @media (max-width: 768px) {\n        margin-right: 12px;\n      }\n    }\n  }\n\n  .active-tab {\n    color: ${({ theme }) => theme.colors.text};\n    border-bottom: 4px solid #3960c1;\n  }\n`\nconst CategoryTab = ({ onActivityListing }: any) => {\n  const [button, setButton] = useState(0)\n  const buttons = [\n    {\n      title: 'All',\n    },\n    {\n      title: 'Listing',\n    },\n    {\n      title: 'Offers',\n    },\n    {\n      title: 'Sold',\n    },\n  ]\n\n  return (\n    <CategoryTabContainer>\n      {buttons.map((e, index) => {\n        return (\n          <div\n            key={e.title}\n            className={`tab-item ${index === button ? 'active-tab' : ''}`}\n            onClick={() => {\n              setButton(index)\n              onActivityListing(e.title)\n            }}\n            role=\"presentation\"\n          >\n            {e.title}\n          </div>\n        )\n      })}\n    </CategoryTabContainer>\n  )\n}\n\nexport default CategoryTab\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContent\":\"CustomImg_imgContent__xjhqT\",\"nftImg\":\"CustomImg_nftImg__njSdd\"};","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'archerswap-uikit'\nimport { Link } from 'react-router-dom'\n\nconst AnalyticHeadContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  // a {\n  //   margin-right: 24px;\n  // }\n`\nconst AnalyticHead = () => {\n  return (\n    <AnalyticHeadContainer>\n      <Link to=\"/my-nfts\">\n        <Button>My NFTs</Button>\n      </Link>\n      {/* <ActivityBar />\n      <SearchBar /> */}\n    </AnalyticHeadContainer>\n  )\n}\n\nexport default AnalyticHead\n","import React from 'react'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Checkbox from '@mui/material/Checkbox'\n\nconst Select = ({ select, isChecked, onChange }: any) => {\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: { xs: '10px' },\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            gap: '16px',\n          }}\n        >\n          <Checkbox checked={isChecked} onClick={onChange} />\n          <Typography\n            sx={{\n              fontSize: '18px',\n              fontWeight: 400,\n              color: 'rgba(51, 51, 51, 1)',\n            }}\n          >\n            {select.label || 'None'}\n          </Typography>\n        </Box>\n        <Box sx={{ textAlign: 'right' }}>\n          <Typography\n            sx={{\n              fontSize: '14px',\n              fontWeight: 400,\n              color: 'rgba(51, 51, 51, 1)',\n            }}\n          >\n            {select.amount}\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: '12px',\n              fontWeight: 400,\n              color: 'rgba(133, 133, 133, 1)',\n            }}\n          >\n            {select.percentage}%\n          </Typography>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default Select\n","import React, { useState, useEffect } from 'react'\nimport Box from '@mui/material/Box'\nimport Typography from '@mui/material/Typography'\nimport Button from '@mui/material/Button'\n\nimport Select from '../Select/Select'\n\nconst Option = ({ options, traitFilter, onChangeTraits }: any) => {\n  const [traits, setTraits] = useState<any>(traitFilter)\n  const [indexes, setIndexes] = useState<any>([])\n\n  useEffect(() => {\n    setTraits(traitFilter)\n  }, [traitFilter])\n\n  const handleChange = (isChecked: any, option: any, optionItem: any) => {\n    const traitIndex = traits.findIndex((t: any) => t.type === option.label)\n    if (traitIndex === -1 && isChecked) {\n      traits.push({\n        type: option.label,\n        values: [optionItem.label],\n      })\n    }\n\n    if (traitIndex > -1) {\n      const attributeIndex = traits[traitIndex].values.findIndex((a: any) => a === optionItem.label)\n      if (attributeIndex === -1 && isChecked) {\n        traits[traitIndex].values.push(optionItem.label)\n      }\n      if (attributeIndex > -1 && !isChecked) {\n        traits[traitIndex].values.splice(attributeIndex, 1)\n        if (traits[traitIndex].values.length === 0) {\n          traits.splice(traitIndex, 1)\n        }\n      }\n    }\n    setTraits([...traits])\n    onChangeTraits(traits)\n  }\n\n  return (\n    <>\n      {options.map((option: any, i: any) => {\n        return (\n          <Box sx={{ mb: '24px' }} key={option.label}>\n            <Typography\n              sx={{\n                fontWeight: 600,\n                fontSize: '16px',\n                color: '#1D123F',\n                mb: '10px',\n              }}\n            >\n              {option.label}\n            </Typography>\n            <Box\n              sx={{\n                maxHeight: indexes.includes(i) ? '100%' : '250px',\n                overflow: 'hidden',\n              }}\n            >\n              {option.select\n                .filter((select: any) => select.amount)\n                .sort((a: any, b: any) => {\n                  if (a.label < b.label) {\n                    return -1\n                  }\n                  if (a.label > b.label) {\n                    return 1\n                  }\n                  return 0\n                })\n                .map((select: any, index: any) => {\n                  return (\n                    <Select\n                      select={select}\n                      isChecked={\n                        traits.findIndex((t: any) => t.values.findIndex((a: any) => a === select.label) !== -1) !== -1\n                      }\n                      key={select.label}\n                      onChange={(v: any) => handleChange(v.target.checked, option, select)}\n                    />\n                  )\n                })}\n            </Box>\n            {option.select.length >= 5 && (\n              <>\n                {indexes.includes(i) ? (\n                  <Button\n                    disableElevation\n                    sx={{\n                      borderRadius: '12px',\n                      paddingY: { xs: '8px', md: '12.5px' },\n                      paddingX: '24px',\n                      boxShadow: 'none',\n                      width: '100%',\n                      color: '#1976d2',\n                    }}\n                    onClick={() => {\n                      const _i: any = indexes.indexOf(i)\n                      if (_i > -1) {\n                        indexes.splice(_i, 1)\n                        setIndexes([...indexes])\n                      }\n                    }}\n                  >\n                    Show Less\n                  </Button>\n                ) : (\n                  <Button\n                    disableElevation\n                    sx={{\n                      borderRadius: '12px',\n                      paddingY: { xs: '8px', md: '12.5px' },\n                      paddingX: '24px',\n                      boxShadow: 'none',\n                      width: '100%',\n                      color: '#1976d2',\n                    }}\n                    onClick={() => {\n                      if (!indexes.includes(i)) {\n                        indexes.push(i)\n                        setIndexes([...indexes])\n                      }\n                    }}\n                  >\n                    Show All\n                  </Button>\n                )}\n              </>\n            )}\n          </Box>\n        )\n      })}\n    </>\n  )\n}\n\nexport default Option\n","import React, { useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport Box from '@mui/material/Box'\nimport Drawer from '@mui/material/Drawer'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport Button from '@mui/material/Button'\n\nimport Option from './Option/Option'\n\ntype Anchor = 'top' | 'left' | 'bottom' | 'right'\n\nconst TraitButtonWrap = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.textDisabled};\n  border-radius: 24px;\n  background: ${({ theme }) => theme.colors.card};\n  color: ${({ theme }) => theme.colors.text};\n`\n\nconst TraitListWrap = styled(Box)`\n  span,\n  p,\n  div {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .bottom-btn-wrap {\n    background: ${({ theme }) => theme.colors.background};\n  }\n`\n\nexport default function TemporaryDrawer({ collectionInfo, attributeInfo, traitFilter, onChangeTraits }: any) {\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  })\n  const [options, setOptions] = useState([])\n\n  useEffect(() => {\n    if (collectionInfo && attributeInfo && attributeInfo.attributeCategories) {\n      const _options: any = []\n      const totalSupply = collectionInfo.totalSupply\n      attributeInfo.attributeCategories.map((attr: any) => {\n        _options.push({\n          label: attr.type,\n          select: [\n            ...attr.values.map((v: any) => ({\n              label: v.value,\n              amount: v.count,\n              percentage: new BigNumber(v.count).div(totalSupply).times(100).dp(2, 1).toString(),\n            })),\n          ],\n        })\n        return true\n      })\n      setOptions(_options)\n    }\n  }, [collectionInfo, attributeInfo])\n\n  const toggleDrawer = (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return\n    }\n\n    setState({ ...state, [anchor]: open })\n  }\n\n  const list = (anchor: Anchor) => (\n    <TraitListWrap\n      sx={{\n        width: {\n          xs: '100%',\n          md: anchor === 'top' || anchor === 'bottom' ? 'auto' : 600,\n        },\n\n        gap: '16px',\n        position: 'relative',\n      }}\n      role=\"presentation\"\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          my: '18px',\n          mx: '32px',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n          <Box sx={{ maxWidth: '40px', display: 'flex', alignItems: 'center' }}>\n            <img src=\"/images/nfts/marketplace/traits.svg\" alt=\"traits\" />\n          </Box>\n          <Typography sx={{ fontSize: '28px', fontWeight: '600', color: '#3960C1' }}>Traits</Typography>\n        </Box>\n        <Box onClick={toggleDrawer(anchor, false)} onKeyDown={toggleDrawer(anchor, false)} sx={{ cursor: 'pointer' }}>\n          <img src=\"/images/nfts/marketplace/close.svg\" alt=\"close\" />\n        </Box>\n      </Box>\n      <Divider sx={{ mb: '24px' }} />\n      <Box\n        sx={{\n          width: '90%',\n          mx: 'auto',\n        }}\n      >\n        <Option options={options} traitFilter={traitFilter} onChangeTraits={onChangeTraits} />\n      </Box>\n      <Box\n        className=\"bottom-btn-wrap\"\n        sx={{\n          position: 'sticky',\n          bottom: 0,\n          py: '15px',\n        }}\n      >\n        <Box\n          sx={{\n            width: '80%',\n            mx: 'auto',\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '24px',\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n            sx={{\n              borderRadius: '12px',\n              paddingY: { xs: '8px', md: '12.5px' },\n              paddingX: '24px',\n              boxShadow: 'none',\n              width: '100%',\n              background: '#2a4aa6',\n            }}\n            onClick={() => {\n              onChangeTraits([])\n            }}\n          >\n            Clear all filters\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n            sx={{\n              borderRadius: '12px',\n              paddingY: { xs: '8px', md: '12.5px' },\n              paddingX: '24px',\n              boxShadow: 'none',\n              width: '100%',\n              background: '#2a4aa6',\n            }}\n            onClick={toggleDrawer(anchor, false)}\n          >\n            Done\n          </Button>\n        </Box>\n      </Box>\n    </TraitListWrap>\n  )\n\n  return (\n    <TraitButtonWrap>\n      {['Traits'].map((text, index) => (\n        <ListItem\n          onClick={toggleDrawer('right', true)}\n          button\n          key={text}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            padding: '6px 24px',\n            fontWeight: 500,\n            fontSize: 14,\n            borderRadius: 24,\n            cursor: 'pointer',\n          }}\n        >\n          <img src=\"/images/nfts/marketplace/traits.svg\" alt=\"traits\" />\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n      <Drawer\n        transitionDuration={{ enter: 400, exit: 400 }}\n        anchor=\"right\"\n        open={state.right}\n        onClose={toggleDrawer('right', false)}\n        PaperProps={{ sx: { width: { xs: '100%', md: 'auto' } } }}\n      >\n        {list('right')}\n      </Drawer>\n    </TraitButtonWrap>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Traits from 'components/Marketplace/Sidebar/Traits/Traits'\n\nconst SortButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.colors.card};\n  padding: 24px 85px;\n\n  @media (max-width: 768px) {\n    padding: 24px;\n    flex-direction: column;\n  }\n\n  .sort-wrap {\n    display: flex;\n    align-items: center;\n\n    @media (max-width: 768px) {\n      flex-wrap: wrap;\n    }\n\n    .sort-by {\n      font-weight: 400;\n      font-size: 12px;\n      color: ${({ theme }) => theme.colors.text};\n      margin-right: 16px;\n\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    .sort-item {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background: ${({ theme }) => theme.colors.card};\n      border: 1px solid ${(props) => props.theme.colors.textDisabled};\n      border-radius: 24px;\n      font-weight: 500;\n      font-size: 14px;\n      color: ${({ theme }) => theme.colors.text};\n      cursor: pointer;\n      padding: 6px 24px;\n      margin: 4px 8px;\n    }\n\n    .active-sort {\n      color: #3960c1;\n    }\n  }\n\n  .traits-btn {\n    @media (max-width: 768px) {\n      margin-top: 24px;\n    }\n    img {\n      margin-right: 12px;\n    }\n  }\n`\nconst SortButtons = ({ tabType, collectionInfo, attributeInfo, traitFilter, onSort, onChangeTraits }) => {\n  const [sorts, setSorts] = useState<any>([\n    { label: 'Token ID - Lowest', value: 'lowest' },\n    { label: 'Token ID - Highest', value: 'highest' },\n    { label: 'Rarity - Rare', value: 'rare' },\n    { label: 'Rarity - Common', value: 'common' },\n  ])\n  const [sortType, setSortType] = useState('')\n\n  useEffect(() => {\n    if (tabType === 'All') {\n      setSorts([\n        { label: 'Token ID - Lowest', value: 'lowest' },\n        { label: 'Token ID - Highest', value: 'highest' },\n        { label: 'Rarity - Rare', value: 'rare' },\n        { label: 'Rarity - Common', value: 'common' },\n      ])\n    } else if (tabType === 'Listing' || tabType === 'Offers') {\n      setSorts([\n        { label: 'Price - Lowest', value: 'price_lowest' },\n        { label: 'Price - Highest', value: 'price_highest' },\n        { label: 'Rarity - Rare', value: 'rare' },\n        { label: 'Rarity - Common', value: 'common' },\n      ])\n    } else if (tabType === 'Sold') {\n      setSorts([\n        { label: 'Sold - Latest', value: 'sold_latest' },\n        { label: 'Price - Lowest', value: 'price_lowest' },\n        { label: 'Price - Highest', value: 'price_highest' },\n        { label: 'Rarity - Rare', value: 'rare' },\n        { label: 'Rarity - Common', value: 'common' },\n      ])\n    }\n    setSortType('')\n  }, [tabType])\n\n  return (\n    <SortButtonsContainer>\n      <div className=\"sort-wrap\">\n        <div className=\"sort-by\">SORT BY</div>\n        {sorts.map((sort: any, index: any) => (\n          <div\n            key={sort.value}\n            className={`sort-item ${sortType === sort.value ? 'active-sort' : ''}`}\n            onClick={() => {\n              onSort(sort.value)\n              setSortType(sort.value)\n            }}\n            role=\"presentation\"\n          >\n            {sort.label}\n          </div>\n        ))}\n      </div>\n      <div className=\"traits-btn\">\n        <Traits\n          collectionInfo={collectionInfo}\n          attributeInfo={attributeInfo}\n          traitFilter={traitFilter}\n          onChangeTraits={onChangeTraits}\n        />\n      </div>\n    </SortButtonsContainer>\n  )\n}\n\nexport default SortButtons\n","import React, { useRef, useState, useEffect } from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport styles from './CustomImg.module.css'\n\nexport default function CustomImg({ className = '', src = '' }) {\n  const imgRef = useRef<HTMLImageElement>(null)\n  const [loaded, setLoaded] = useState(false)\n\n  const onLoad = () => {\n    setLoaded(true)\n  }\n\n  useEffect(() => {\n    if (imgRef && imgRef.current?.complete) {\n      onLoad()\n    }\n  }, [])\n\n  return (\n    <div className={styles.imgContent}>\n      {!loaded && (\n        <CircularProgress\n          style={{\n            width: 20,\n            height: 20,\n            marginRight: 6,\n            color: 'red',\n          }}\n          color=\"secondary\"\n        />\n      )}\n      <img\n        ref={imgRef}\n        className={[styles.nftImg, className].join(' ')}\n        style={loaded ? {} : { display: 'none' }}\n        src={src}\n        onLoad={onLoad}\n        alt=\"nft\"\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport CardContent from '@mui/material/CardContent'\nimport Button from '@mui/material/Button'\nimport { CardActionArea } from '@mui/material'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Divider from '@mui/material/Divider'\nimport CustomImg from '../CustomImg/CustomImg'\n\nconst NftCardWrap = styled.div`\n  background: ${({ theme }) => theme.colors.card};\n\n  span,\n  a,\n  p {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst StyledCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.background} !important;\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\n`\n\nconst MarketCard = ({\n  tabType = 'All',\n  tokenHighestBids = [],\n  latestSoldTokens = [],\n  collectionInfo,\n  token,\n  tokenListing,\n  isMyNFT,\n}: any) => {\n  return (\n    <NftCardWrap>\n      <Link to={`/marketplace/${collectionInfo.alias}/${token.tokenId}`}>\n        <StyledCard\n          sx={{\n            boxShadow: '0px 6px 20px rgba(67, 86, 134, 0.1)',\n          }}\n        >\n          <CardActionArea>\n            <Box\n              sx={{\n                position: 'relative',\n                width: '100%',\n                pt: '100%',\n              }}\n            >\n              <CustomImg src={token?.thumbnailCdnUrl || ''} />\n            </Box>\n\n            <CardContent sx={{ flexGrow: 1, py: '8px' }}>\n              <Typography mb=\"5px\" sx={{ fontSize: '12px', color: '#858585' }}>\n                Token ID #{token?.tokenId || ''}\n              </Typography>\n              <Typography mb=\"5px\" sx={{ fontSize: '16px', fontWeight: 'bold' }}>\n                {collectionInfo?.name || ''}\n              </Typography>\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                }}\n              >\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '5px',\n                  }}\n                >\n                  <Typography sx={{ fontSize: '12px', color: '#666666' }}>Rarity rank</Typography>\n                </Box>\n                <Typography sx={{ fontSize: '12px', color: '#666666' }}># {token?.rarityRank || 0}</Typography>\n              </Box>\n            </CardContent>\n            <Divider />\n            {!isMyNFT ? (\n              <CardContent sx={{ flexGrow: 1, pt: '8px', pb: '5px' }}>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Typography sx={{ fontSize: '12px', color: '#666666' }}>\n                    {(tabType === 'All' || tabType === 'Listing') && 'Price'}\n                    {tabType === 'Offers' && 'Highest bid'}\n                    {tabType === 'Sold' && 'Last sell'}\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '5px',\n                    }}\n                  >\n                    {(tabType === 'All' || tabType === 'Listing') && (\n                      <Typography sx={{ fontSize: '14px', color: '#333333' }}>\n                        {new BigNumber(\n                          tokenListing.find((t: any) => t.tokenId.toString(10) === token.tokenId)?.value.toString(10) ||\n                            0,\n                        ).isZero()\n                          ? 'Not for sale'\n                          : new BigNumber(\n                              tokenListing\n                                .find((t: any) => t.tokenId.toString(10) === token.tokenId)\n                                ?.value.toString(10) || 0,\n                            )\n                              .div(10 ** 18)\n                              .toString(10)}\n                      </Typography>\n                    )}\n                    {tabType === 'Offers' && (\n                      <Typography sx={{ fontSize: '14px', color: '#333333' }}>\n                        {new BigNumber(\n                          tokenHighestBids\n                            .find((t: any) => t.tokenId.toString(10) === token.tokenId)\n                            ?.value.toString(10) || 0,\n                        )\n                          .div(10 ** 18)\n                          .toString(10)}\n                      </Typography>\n                    )}\n                    {tabType === 'Sold' && (\n                      <Typography sx={{ fontSize: '14px', color: '#333333' }}>\n                        {new BigNumber(\n                          latestSoldTokens.find((t: any) => t.tokenId.toString(10) === token.tokenId)?.valueNum || 0,\n                        ).toString(10)}\n                      </Typography>\n                    )}\n                  </Box>\n                </Box>\n              </CardContent>\n            ) : (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-around',\n                  mb: '5px',\n                }}\n              >\n                <Link to={`/marketplace/${collectionInfo.alias}/${token.tokenId}`}>\n                  <Button>List</Button>\n                </Link>\n                <Link to={`/marketplace/${collectionInfo.alias}/${token.tokenId}?transfer=Open`}>\n                  <Button>Transfer</Button>\n                </Link>\n              </Box>\n            )}\n          </CardActionArea>\n        </StyledCard>\n      </Link>\n    </NftCardWrap>\n  )\n}\n\nexport default MarketCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport Grid from '@mui/material/Grid'\nimport NftCard from 'components/Marketplace/NftCard'\n\nconst NftListContainer = styled.div`\n  background: ${({ theme }) => theme.colors.card};\n  padding: 0px 85px;\n\n  @media (max-width: 768px) {\n    padding: 0px 24px;\n  }\n\n  .list-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 30px;\n\n    .total-supply {\n      font-size: 14px;\n      font-weight: 500;\n      color: ${({ theme }) => theme.colors.text};\n    }\n\n    .my-nfts-toggle {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n      font-weight: 500;\n      color: ${({ theme }) => theme.colors.text};\n\n      .toggle-wrap {\n        display: flex;\n        align-items: center;\n        margin-left: 24px;\n        background: ${({ theme }) => theme.colors.card};\n        border-radius: 32px;\n\n        .toggle-item {\n          padding: 4px 23px;\n          border-radius: 32px;\n          font-size: 16px;\n          font-weight: 600;\n          color: ${({ theme }) => theme.colors.text};\n          cursor: pointer;\n        }\n\n        .toggle-active {\n          color: white;\n          background-color: #2a4aa6;\n        }\n      }\n    }\n  }\n`\nlet _tokens = []\n\nconst NftList = ({\n  isToggle = true,\n  tabType,\n  page,\n  collectionInfo,\n  tokensInfo,\n  tokenListing,\n  tokenHighestBids = [],\n  latestSoldTokens = [],\n  totalCount,\n  loadMore,\n  onMyNftToggle,\n}: any) => {\n  const [isMyNFT, setIsMyNFT] = useState('off')\n  const [tokens, setTokens] = useState<any>([])\n\n  useEffect(() => {\n    if (page === 1) {\n      _tokens = []\n    }\n    const nftTokens = tokensInfo?.tokens || []\n    nftTokens.map((t: any) => {\n      if (_tokens.findIndex((_t: any) => _t.tokenId === t.tokenId) === -1) {\n        _tokens.push(t)\n      }\n      return true\n    })\n    setTokens(_tokens)\n  }, [page, tokensInfo])\n\n  return (\n    <NftListContainer>\n      <div className=\"list-header\">\n        <div className=\"total-supply\">{totalCount || 0} Results</div>\n        {isToggle && (\n          <div className=\"my-nfts-toggle\">\n            My NFTs\n            <div className=\"toggle-wrap\">\n              <div\n                className={`toggle-item ${isMyNFT === 'off' ? 'toggle-active' : ''}`}\n                onClick={() => {\n                  setIsMyNFT('off')\n                  onMyNftToggle('off')\n                }}\n                role=\"presentation\"\n              >\n                Off\n              </div>\n              <div\n                className={`toggle-item ${isMyNFT === 'on' ? 'toggle-active' : ''}`}\n                onClick={() => {\n                  setIsMyNFT('on')\n                  onMyNftToggle('on')\n                }}\n                role=\"presentation\"\n              >\n                On\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      {totalCount ? (\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={loadMore}\n          hasMore={tokens.length !== (totalCount || 0)}\n          loader={\n            <div className=\"nft-loader\" key={0}>\n              Loading ...\n            </div>\n          }\n        >\n          <Grid container spacing={4} sx={{ pb: 11 }}>\n            {tokens.map((token: any) => (\n              <Grid item key={token.tokenId} xs={12} sm={6} lg={3} xl={2.4}>\n                <NftCard\n                  tabType={tabType}\n                  tokenHighestBids={tokenHighestBids}\n                  latestSoldTokens={latestSoldTokens}\n                  collectionInfo={collectionInfo}\n                  token={token}\n                  tokenListing={tokenListing}\n                  isMyNFT={isMyNFT === 'on'}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </InfiniteScroll>\n      ) : (\n        ''\n      )}\n    </NftListContainer>\n  )\n}\n\nexport default NftList\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst CollectionInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 42px 85px;\n  background: ${({ theme }) => theme.colors.card};\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 24px;\n  }\n`\n\nconst InfoWrap = styled.div`\n  .name {\n    font-size: 32px;\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.bow};\n    margin-bottom: 16px;\n  }\n\n  .description {\n    display: flex;\n    align-items: center;\n\n    img {\n      margin-right: 16px;\n    }\n\n    .rarity-desc {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${({ theme }) => theme.colors.text};\n      span {\n        font-weight: bold;\n        color: ${({ theme }) => theme.colors.text};\n      }\n    }\n  }\n\n  .link-wrap {\n    margin-top: 32px;\n    img {\n      width: 40px;\n      height: 40px;\n      background: ${({ theme }) => theme.colors.primary};\n      padding: 11px;\n      border-radius: 50%;\n      cursor: pointer;\n    }\n    a {\n      margin-right: 28px;\n    }\n  }\n`\n\nconst InfoDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 24px;\n  }\n\n  .summary-wrap {\n    display: flex;\n    align-items: center;\n    background: ${({ theme }) => theme.colors.card};\n    border: 0.5px solid #d7d9e0;\n    box-sizing: border-box;\n    border-radius: 16px;\n    padding: 20px 16px;\n    margin-bottom: 28px;\n\n    .summary-item {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin: 0 29px;\n\n      .label {\n        font-size: 12px;\n        font-weight: 400;\n        color: ${({ theme }) => theme.colors.text};\n        margin-bottom: 4px;\n      }\n      .value {\n        font-size: 16px;\n        font-weight: 600;\n        color: ${({ theme }) => theme.colors.text};\n      }\n    }\n  }\n\n  .search-input-wrap {\n    max-width: 276px;\n    display: flex;\n    align-items: center;\n    background: ${({ theme }) => theme.colors.card};\n    border: 1px solid #d7d9e0;\n    box-sizing: border-box;\n    border-radius: 24px;\n    padding: 8px 16px;\n\n    input {\n      width: 100%;\n      font-weight: 400;\n      font-size: 14px;\n      background: ${({ theme }) => theme.colors.card};\n      color: ${({ theme }) => theme.colors.text};\n      border: none;\n      outline: none;\n      margin-left: 16px;\n    }\n  }\n`\n\nconst CollectionInfo = ({ collectionInfo, floor, onSearch }) => {\n  return (\n    <CollectionInfoContainer>\n      <InfoWrap>\n        <div className=\"name\">{collectionInfo?.name || ''}</div>\n        <div className=\"description\">\n          <img src=\"/images/nfts/marketplace/wifi.svg\" alt=\"mint\" />\n          <div className=\"rarity-desc\">\n            <span>Mint</span> - Rarity rank will change as minting&apos;s live\n          </div>\n        </div>\n        <div className=\"link-wrap\">\n          {/* <img src=\"/images/nfts/marketplace/analytic_white.svg\" alt=\"analytic\" /> */}\n          <a href={`https://scan.coredao.org/address/${collectionInfo?.address}`} rel=\"noreferrer\" target=\"_blank\">\n            <img src=\"/images/nfts/marketplace/scan.svg\" alt=\"scan\" />\n          </a>\n          <a href={collectionInfo.websiteUrl} rel=\"noreferrer\" target=\"_blank\">\n            <img src=\"/images/nfts/marketplace/global.svg\" alt=\"global\" />\n          </a>\n        </div>\n      </InfoWrap>\n      <InfoDetail>\n        <div className=\"summary-wrap\">\n          <div className=\"summary-item\">\n            <div className=\"label\">Items</div>\n            <div className=\"value\">{collectionInfo?.totalSupply || 0}</div>\n          </div>\n          <div className=\"summary-item\">\n            <div className=\"label\">Volume traded</div>\n            <div className=\"value\">{collectionInfo?.totalVolume || 0}</div>\n          </div>\n          <div className=\"summary-item\">\n            <div className=\"label\">Floor price</div>\n            <div className=\"value\">{floor} CORE</div>\n          </div>\n        </div>\n        <div className=\"search-input-wrap\">\n          <img src=\"/images/nfts/marketplace/search.svg\" alt=\"search\" />\n          <input placeholder=\"Mint number\" type=\"number\" onChange={onSearch} />\n        </div>\n      </InfoDetail>\n    </CollectionInfoContainer>\n  )\n}\n\nexport default CollectionInfo\n","/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport useTheme from 'hooks/useTheme'\nimport { Link, useParams } from 'react-router-dom'\nimport CollectionInfo from 'components/Marketplace/CollectionInfo'\nimport CategoryTab from 'components/Marketplace/CategoryTab'\nimport SortButtons from 'components/Marketplace/SortButtons'\nimport NftList from 'components/Marketplace/NftList'\nimport AnalyticHead from 'components/Marketplace/AnalyticHead'\nimport {\n  useCollection,\n  useCollectionAttributes,\n  useERC721TokenCount,\n  useERC721Tokens,\n  useERC721RecentEventsLite,\n} from 'hooks/api'\nimport {\n  useNumTokenListings,\n  useTokenListings,\n  useGetMyTokenIds,\n  useNumTokenWithBids,\n  useTokenHighestBids,\n} from 'hooks/useNftMarketplace'\n\nconst Background = styled.div<any>`\n  width: 100%;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.card};\n`\n\nconst CollectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 25px 85px;\n  background-color: ${(props) => props.theme.colors.sidebar};\n\n  @media (max-width: 768px) {\n    padding: 24px;\n  }\n\n  .back-wrap {\n    display: flex;\n    align-items: center;\n    img {\n      margin-right: 20px;\n    }\n    > div {\n      font-weight: 500;\n      font-size: 16px;\n      color: ${({ theme }) => theme.colors.text};\n    }\n  }\n`\n\nconst CollectionDetail: React.FC = () => {\n  const { isDark } = useTheme()\n  const [tokenCountInput, setTokenCountInput] = useState<any>({\n    filters: {\n      traits: [],\n    },\n  })\n  const [traitFilter, setTraitFilter] = useState<any>([])\n  const [tokenIds, setTokenIds] = useState([])\n  const [totalCount, setTotalCount] = useState(0)\n  const [searchNumber, setSearchNumber] = useState('')\n  const [page, setPage] = useState(1)\n  const [isShowMyNft, setIsShowMyNft] = useState('off')\n  const [tabType, setTabType] = useState('All')\n  const [sortType, setSortType] = useState('')\n  const [latestSoldTokens, setLatestSoldTokens] = useState([])\n\n  const params: any = useParams()\n\n  const collectionInfo: any = useCollection(params.alias)\n  const attributeInfo: any = useCollectionAttributes(params.alias)\n  const tokenCountInfo: any = useERC721TokenCount({\n    alias: params.alias,\n    ...tokenCountInput,\n    pageSize: collectionInfo?.totalSupply,\n  })\n\n  const tokensInfo: any = useERC721Tokens({\n    alias: params.alias,\n    filters: {\n      tokenIds,\n    },\n    // pageSize: collectionInfo?.totalSupply,\n  })\n\n  const soldTokens: any = useERC721RecentEventsLite(\n    tabType === 'Sold'\n      ? {\n          chainId: collectionInfo?.chainId,\n          tokenAddress: collectionInfo?.address,\n          events: ['TokenBought', 'TokenBidAccepted'],\n          limit: collectionInfo?.totalSupply,\n        }\n      : {},\n  )\n\n  const totalListingNum: any = useNumTokenListings(collectionInfo?.address)\n  const tokenListing: any = useTokenListings(collectionInfo?.address, totalListingNum)\n  const myTokenIds: any = useGetMyTokenIds(collectionInfo?.address, isShowMyNft)\n  const [totalTokenBid, getTokenWithBids]: any = useNumTokenWithBids()\n  const [tokenHighestBids, getTokenHighestBids]: any = useTokenHighestBids()\n\n  useEffect(() => {\n    setPage(1)\n  }, [params.alias])\n\n  useEffect(() => {\n    if (tabType === 'Offers') {\n      getTokenWithBids(collectionInfo?.address)\n    }\n  }, [tabType, collectionInfo, getTokenWithBids])\n\n  useEffect(() => {\n    if (tabType === 'Offers' && totalTokenBid) {\n      getTokenHighestBids(collectionInfo?.address, totalTokenBid)\n    }\n  }, [tabType, collectionInfo, totalTokenBid, getTokenHighestBids])\n\n  const floor = new BigNumber(\n    tokenListing\n      .sort((a: any, b: any) => {\n        if (new BigNumber(a.value).isGreaterThan(b.value)) {\n          return 1\n        }\n        if (new BigNumber(a.value).isLessThan(b.value)) {\n          return -1\n        }\n        return 0\n      })[0]\n      ?.value.toString(10) || 0,\n  )\n    .div(10 ** 18)\n    .toString()\n\n  useEffect(() => {\n    if (tokenCountInfo && tokenCountInfo.tokens) {\n      let tokens = []\n      if (tabType === 'All') {\n        tokens = tokenCountInfo.tokens\n      } else if (tabType === 'Listing') {\n        if (sortType === 'price_lowest' || sortType === 'price_highest') {\n          tokens = tokenListing\n            .filter(\n              (t: any) => tokenCountInfo.tokens.findIndex((tl: any) => tl.tokenId === t.tokenId.toString(10)) !== -1,\n            )\n            .sort((a: any, b: any) => {\n              if (sortType === 'price_lowest') {\n                if (new BigNumber(a.value).isLessThan(b.value)) {\n                  return -1\n                }\n                if (new BigNumber(a.value).isGreaterThan(b.value)) {\n                  return 1\n                }\n              } else if (sortType === 'price_highest') {\n                if (new BigNumber(b.value).isLessThan(a.value)) {\n                  return -1\n                }\n                if (new BigNumber(b.value).isGreaterThan(a.value)) {\n                  return 1\n                }\n              }\n              return 0\n            })\n        } else {\n          tokens = tokenCountInfo.tokens.filter(\n            (t: any) => tokenListing.findIndex((tl: any) => tl.tokenId.toString(10) === t.tokenId) !== -1,\n          )\n        }\n      } else if (tabType === 'Offers') {\n        if (sortType === 'price_lowest' || sortType === 'price_highest') {\n          tokens = tokenHighestBids\n            .filter((t: any) => tokenCountInfo.tokens.findIndex((tl: any) => tl.tokenId === t.tokenId) !== -1)\n            .sort((a: any, b: any) => {\n              if (sortType === 'price_lowest') {\n                if (new BigNumber(a.value).isLessThan(b.value)) {\n                  return -1\n                }\n                if (new BigNumber(a.value).isGreaterThan(b.value)) {\n                  return 1\n                }\n              } else if (sortType === 'price_highest') {\n                if (new BigNumber(b.value).isLessThan(a.value)) {\n                  return -1\n                }\n                if (new BigNumber(b.value).isGreaterThan(a.value)) {\n                  return 1\n                }\n              }\n              return 0\n            })\n        } else {\n          tokens = tokenCountInfo.tokens.filter(\n            (t: any) => tokenHighestBids.findIndex((tl: any) => tl.tokenId.toString(10) === t.tokenId) !== -1,\n          )\n        }\n      } else if (tabType === 'Sold') {\n        const _latestSoldToken: any = []\n        soldTokens.map((t: any) => {\n          if (_latestSoldToken.findIndex((lt: any) => lt.tokenId === t.tokenId) === -1) {\n            _latestSoldToken.push(t)\n          }\n          return true\n        })\n        setLatestSoldTokens(soldTokens)\n        if (sortType === 'sold_latest' || sortType === 'price_lowest' || sortType === 'price_highest') {\n          tokens = _latestSoldToken\n            .filter((t: any) => tokenCountInfo.tokens.findIndex((tl: any) => tl.tokenId === t.tokenId) !== -1)\n            .sort((a: any, b: any) => {\n              if (sortType === 'sold_latest') {\n                if (new BigNumber(b.timestamp).isLessThan(a.timestamp)) {\n                  return -1\n                }\n                if (new BigNumber(b.timestamp).isGreaterThan(a.timestamp)) {\n                  return 1\n                }\n              } else if (sortType === 'price_lowest') {\n                if (new BigNumber(a.valueNum).isLessThan(b.valueNum)) {\n                  return -1\n                }\n                if (new BigNumber(a.valueNum).isGreaterThan(b.valueNum)) {\n                  return 1\n                }\n              } else if (sortType === 'price_highest') {\n                if (new BigNumber(b.valueNum).isLessThan(a.valueNum)) {\n                  return -1\n                }\n                if (new BigNumber(b.valueNum).isGreaterThan(a.valueNum)) {\n                  return 1\n                }\n              }\n              return 0\n            })\n        } else {\n          tokens = tokenCountInfo.tokens.filter(\n            (t: any) => _latestSoldToken.findIndex((tl: any) => tl.tokenId === t.tokenId) !== -1,\n          )\n        }\n      }\n\n      if (isShowMyNft === 'on') {\n        tokens = tokens.filter((t: any) => myTokenIds.includes(t.tokenId))\n      }\n      setTotalCount(tokens.filter((t: any) => t.tokenId.includes(searchNumber)).length)\n      const _tokenIds = tokens\n        .filter((t: any) => t.tokenId.includes(searchNumber))\n        .filter((_: any, idx: any) => idx < page * 20 && idx >= (page - 1) * 20)\n        .map((t: any) => t.tokenId)\n\n      if (_tokenIds.length !== 0) {\n        setTokenIds(_tokenIds)\n      }\n    }\n  }, [\n    tabType,\n    sortType,\n    isShowMyNft,\n    myTokenIds,\n    page,\n    tokenCountInfo,\n    searchNumber,\n    tokenListing,\n    tokenHighestBids,\n    soldTokens,\n  ])\n\n  const handleSort = (sort: any) => {\n    setSortType(sort)\n    const orderBy: any = {}\n    if (sort === 'lowest') {\n      orderBy.direction = 'asc'\n      orderBy.key = 'tokenId'\n    } else if (sort === 'highest') {\n      orderBy.direction = 'desc'\n      orderBy.key = 'tokenId'\n    } else if (sort === 'rare') {\n      orderBy.direction = 'asc'\n      orderBy.key = 'rarityRank'\n    } else if (sort === 'common') {\n      orderBy.direction = 'desc'\n      orderBy.key = 'rarityRank'\n    }\n\n    setTokenCountInput({\n      ...tokenCountInput,\n      orderBy,\n    })\n\n    setPage(1)\n  }\n\n  const handleActivityListing = (type: any) => {\n    setTabType(type)\n    setPage(1)\n  }\n\n  const handleSearch = (e: any) => {\n    setTimeout(() => {\n      setPage(1)\n      setSearchNumber(e.target.value)\n    }, 1000)\n  }\n\n  const handleTraits = (traitData: any) => {\n    setTraitFilter(traitData)\n    setTokenCountInput({\n      ...tokenCountInput,\n      filters: {\n        ...tokenCountInput.filters,\n        traits: traitData,\n      },\n    })\n    setPage(1)\n  }\n\n  const handleLoadMore = () => {\n    if ((tokensInfo?.tokens || []).length !== 0) {\n      setTimeout(() => {\n        setPage(page + 1)\n      }, 1000)\n    }\n  }\n\n  const handleMyNftToggle = (v: string) => {\n    setIsShowMyNft(v)\n    setPage(1)\n  }\n\n  return (\n    <Background isDark={isDark}>\n      <CollectionHeader>\n        <Link to=\"/marketplace\">\n          <div className=\"back-wrap\">\n            <img src=\"/images/nfts/marketplace/back.svg\" alt=\"back\" />\n            <div>All Collections</div>\n          </div>\n        </Link>\n        <AnalyticHead />\n      </CollectionHeader>\n      <CollectionInfo collectionInfo={collectionInfo} floor={floor} onSearch={handleSearch} />\n      <CategoryTab onActivityListing={handleActivityListing} />\n      <SortButtons\n        tabType={tabType}\n        collectionInfo={collectionInfo}\n        attributeInfo={attributeInfo}\n        traitFilter={traitFilter}\n        onSort={handleSort}\n        onChangeTraits={handleTraits}\n      />\n      <NftList\n        tabType={tabType}\n        page={page}\n        collectionInfo={collectionInfo}\n        tokensInfo={tokensInfo}\n        tokenListing={tokenListing}\n        tokenHighestBids={tokenHighestBids}\n        latestSoldTokens={latestSoldTokens}\n        totalCount={totalCount}\n        loadMore={handleLoadMore}\n        onMyNftToggle={handleMyNftToggle}\n      />\n    </Background>\n  )\n}\n\nexport default CollectionDetail\n"],"sourceRoot":""}